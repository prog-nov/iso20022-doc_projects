<?xml version="1.0" encoding="UTF-8" ?>
<cartridge xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0.2" name="CGI_ISOLibrary" type="Cartridge">
	<version>1.0</version>
	<private>
		<summary>
			<service name="CreditTransferPostFilterCallBack" version="1.0" type="Message Flow">
			</service>
			<service name="DirectDebitPostFilterCallBack" version="1.0" type="Message Flow">
			</service>
			<function name="IsValidName"/>
			<function name="StructuredLength"/>
			<function name="BICBEIorOthr"/>
			<function name="DPBorOthr"/>
			<function name="IsUnique"/>
			<function name="BIC_ClrSysMmbId_Or_Othr"/>
			<function name="BIC_ClrSysMmbId_Or_Othr"/>
			<function name="IsUnique"/>
			<function name="BIC_ClrSysMmbId_Or_Nm"/>
			<function name="BIC_ClrSysMmbId_Or_Othr"/>
			<function name="IsUnique"/>
			<function name="BICBEIorOthr"/>
			<function name="setDataObjProperty"/>
			<function name="setDataObjProperty"/>
			<function name="setRawMsgProperty"/>
			<function name="setRawMsgProperty"/>
			<function name="getDataObjProperty"/>
			<function name="getDataObjProperty"/>
			<function name="getRawMsgProperty"/>
			<function name="getRawMsgProperty"/>
			<function name="copyAny"/>
			<function name="createXMLAnyElement"/>
			<function name="isObjectEmpty"/>
			<function name="SecRemoveEmpty"/>
			<function name="IsValidBigDecimal"/>
			<function name="SecAddOrGetElement"/>
			<function name="SecAddOrGetElement"/>
			<function name="isExceptionRunTime"/>
			<function name="isExceptionRunTime"/>
			<function name="containsRunTimeException"/>
			<function name="isPresent"/>
			<function name="StripBrackets"/>
			<function name="GetNonNullFieldsFromDiffObj"/>
			<function name="CheckFieldExists"/>
			<function name="CheckFieldExists"/>
			<function name="SetBasicParams"/>
			<function name="SetFSNMessageNames"/>
			<function name="AddCallBack"/>
			<function name="SetFilteringParams"/>
			<function name="setTypeCode"/>
			<function name="SetCartridgeDetails"/>
			<function name="SetValidationList"/>
			<function name="SetAllowMultipleInput"/>
			<function name="SetParserFlow"/>
			<function name="SetMapperName"/>
			<function name="TypeCastToMapperParams"/>
			<function name="SetMessageID"/>
			<function name="getIndexInErrList"/>
			<function name="getPaymentSection"/>
			<function name="getSectionUsingQualName"/>
			<function name="reverseObjectsInSection"/>
			<function name="getTransacIDsWithinGroup"/>
			<function name="getAllTransacIDsInMsg"/>
			<function name="setIDsOnExc"/>
			<function name="getTransacIDWithinTransac"/>
			<function name="getSecIndexFromExcFldID"/>
			<function name="setXPATH"/>
			<function name="getValidationList"/>
			<function name="getCallBacksOfGivenType"/>
			<function name="computeAmount"/>
			<function name="validateFiltering"/>
			<function name="getThreshold"/>
			<function name="ApplyDiffOnMapperParams"/>
			<function name="AddElmsInSrcSecToDestSec"/>
			<function name="ApplyFilteringSideDiff"/>
			<function name="RemoveExcProperty"/>
			<function name="getRecordCount"/>
			<function name="updateCtrlSumAndNbOfTxs"/>
			<function name="updateISOCreditTransfer"/>
			<function name="updateISODirectDebit"/>
			<function name="updateCDMCreditTransfer"/>
			<function name="updateCDMDirectDebit"/>
			<function name="CDMAccountIdentification4Choice_To_AccountIdentification4Choice"/>
			<function name="CDMAccountInterest2_To_AccountInterest2"/>
			<function name="CDMAccountSchemeName1Choice_To_AccountSchemeName1Choice"/>
			<function name="CDMActiveCurrencyAndAmount_To_ActiveCurrencyAndAmount"/>
			<function name="CDMActiveOrHistoricCurrencyAnd13DecimalAmount_To_ActiveOrHistoricCurrencyAnd13DecimalAmount"/>
			<function name="CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount"/>
			<function name="CDMAmendmentInformationDetails8_To_AmendmentInformationDetails6"/>
			<function name="CDMAmendmentInformationDetails8_To_AmendmentInformationDetails8"/>
			<function name="CDMAmountAndCurrencyExchange3_To_AmountAndCurrencyExchange3"/>
			<function name="CDMAmountAndCurrencyExchangeDetails3_To_AmountAndCurrencyExchangeDetails3"/>
			<function name="CDMAmountAndCurrencyExchangeDetails4_To_AmountAndCurrencyExchangeDetails4"/>
			<function name="CDMAmountRangeBoundary1_To_AmountRangeBoundary1"/>
			<function name="CDMAmountType3Choice_To_AmountType3Choice"/>
			<function name="CDMAuthorisation1Choice_To_Authorisation1Choice"/>
			<function name="CDMBalanceSubType1Choice_To_BalanceSubType1Choice"/>
			<function name="CDMBalanceType12_To_BalanceType12"/>
			<function name="CDMBalanceType5Choice_To_BalanceType5Choice"/>
			<function name="CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4"/>
			<function name="CDMBankTransactionCodeStructure5_To_BankTransactionCodeStructure5"/>
			<function name="CDMBankTransactionCodeStructure6_To_BankTransactionCodeStructure6"/>
			<function name="CDMBatchInformation2_To_BatchInformation2"/>
			<function name="CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4"/>
			<function name="CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5"/>
			<function name="CDMBranchData2_To_BranchData2"/>
			<function name="CDMCardAggregated1_To_CardAggregated1"/>
			<function name="CDMCardDataReading1Code_To_CardDataReading1Code"/>
			<function name="CDMCardEntry1_To_CardEntry1"/>
			<function name="CDMCardholderVerificationCapability1Code_To_CardholderVerificationCapability1Code"/>
			<function name="CDMCardIndividualTransaction1_To_CardIndividualTransaction1"/>
			<function name="CDMCardSecurityInformation1_To_CardSecurityInformation1"/>
			<function name="CDMCardSequenceNumberRange1_To_CardSequenceNumberRange1"/>
			<function name="CDMCardTransaction1_To_CardTransaction1"/>
			<function name="CDMCardTransaction1Choice_To_CardTransaction1Choice"/>
			<function name="CDMCashAccount24_To_CashAccount16"/>
			<function name="CDMCashAccount24_To_CashAccount24"/>
			<function name="CDMCashAccount25_To_CashAccount20"/>
			<function name="CDMCashAccount25_To_CashAccount25"/>
			<function name="CDMCashAccountType2Choice_To_CashAccountType2"/>
			<function name="CDMCashAccountType2Choice_To_CashAccountType2Choice"/>
			<function name="CDMCashBalance3_To_CashBalance3"/>
			<function name="CDMCashBalanceAvailability2_To_CashBalanceAvailability2"/>
			<function name="CDMCashBalanceAvailabilityDate1_To_CashBalanceAvailabilityDate1"/>
			<function name="CDMCashDeposit1_To_CashDeposit1"/>
			<function name="CDMCategoryPurpose1Choice_To_CategoryPurpose1Choice"/>
			<function name="CDMCharges3_To_Charges3"/>
			<function name="CDMCharges3_To_ChargesInformation6"/>
			<function name="CDMChargesRecord1_To_ChargesRecord1"/>
			<function name="CDMChargeType3Choice_To_ChargeType2Choice"/>
			<function name="CDMChargeType3Choice_To_ChargeType3Choice"/>
			<function name="CDMClearingSystemIdentification2Choice_To_ClearingSystemIdentification2Choice"/>
			<function name="CDMClearingSystemIdentification3Choice_To_ClearingSystemIdentification3Choice"/>
			<function name="CDMClearingSystemMemberIdentification2_To_ClearingSystemMemberIdentification2"/>
			<function name="CDMContactDetails2_To_ContactDetails2"/>
			<function name="CDMCorporateAction9_To_CorporateAction1"/>
			<function name="CDMCorporateAction9_To_CorporateAction9"/>
			<function name="CDMCreditLine2_To_CreditLine2"/>
			<function name="CDMCreditorReferenceInformation2_To_CreditorReferenceInformation2"/>
			<function name="CDMCreditorReferenceType1Choice_To_CreditorReferenceType1Choice"/>
			<function name="CDMCreditorReferenceType2_To_CreditorReferenceType2"/>
			<function name="CDMCurrencyAndAmountRange2_To_CurrencyAndAmountRange2"/>
			<function name="CDMCurrencyExchange5_To_CurrencyExchange5"/>
			<function name="CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice"/>
			<function name="CDMDateAndPlaceOfBirth_To_DateAndPlaceOfBirth"/>
			<function name="CDMDateOrDateTimePeriodChoice_To_DateOrDateTimePeriodChoice"/>
			<function name="CDMDatePeriodDetails_To_DatePeriodDetails"/>
			<function name="CDMDateTimePeriodDetails_To_DateTimePeriodDetails"/>
			<function name="CDMDiscountAmountAndType1_To_ActiveOrHistoricCurrencyAndAmount"/>
			<function name="CDMDiscountAmountAndType1_To_DiscountAmountAndType1"/>
			<function name="CDMDiscountAmountType1Choice_To_DiscountAmountType1Choice"/>
			<function name="CDMDisplayCapabilities1_To_DisplayCapabilities1"/>
			<function name="CDMDocumentAdjustment1_To_DocumentAdjustment1"/>
			<function name="CDMEntryDetails2_To_EntryDetails1"/>
			<function name="CDMEntryDetails2_To_EntryDetails2"/>
			<function name="CDMEntryTransaction3_To_EntryTransaction2"/>
			<function name="CDMEntryTransaction3_To_EntryTransaction3"/>
			<function name="CDMEquivalentAmount2_To_EquivalentAmount2"/>
			<function name="CDMFinancialIdentificationSchemeName1Choice_To_FinancialIdentificationSchemeName1Choice"/>
			<function name="CDMFinancialInstitutionIdentification8_To_FinancialInstitutionIdentification7"/>
			<function name="CDMFinancialInstitutionIdentification8_To_FinancialInstitutionIdentification8"/>
			<function name="CDMFinancialInstrumentQuantityChoice_To_FinancialInstrumentQuantityChoice"/>
			<function name="CDMFromToAmountRange_To_FromToAmountRange"/>
			<function name="CDMGenericAccountIdentification1_To_GenericAccountIdentification1"/>
			<function name="CDMGenericFinancialIdentification1_To_GenericFinancialIdentification1"/>
			<function name="CDMGenericIdentification1_To_GenericIdentification1"/>
			<function name="CDMGenericIdentification20_To_CashAccountType2"/>
			<function name="CDMGenericIdentification20_To_GenericIdentification20"/>
			<function name="CDMGenericIdentification32_To_GenericIdentification32"/>
			<function name="CDMGenericIdentification3_To_GenericIdentification3"/>
			<function name="CDMGenericOrganisationIdentification1_To_GenericOrganisationIdentification1"/>
			<function name="CDMGenericPersonIdentification1_To_GenericPersonIdentification1"/>
			<function name="CDMGroupHeader58_To_GroupHeader42"/>
			<function name="CDMGroupHeader58_To_GroupHeader58"/>
			<function name="CDMIdentificationSource3Choice_To_IdentificationSource3Choice"/>
			<function name="CDMImpliedCurrencyAmountRangeChoice_To_ImpliedCurrencyAmountRangeChoice"/>
			<function name="CDMInterestRecord1_To_InterestRecord1"/>
			<function name="CDMInterestType1Choice_To_InterestType1Choice"/>
			<function name="CDMLocalInstrument2Choice_To_LocalInstrument2Choice"/>
			<function name="CDMMandateRelatedInformation8_To_MandateRelatedInformation6"/>
			<function name="CDMMandateRelatedInformation8_To_MandateRelatedInformation8"/>
			<function name="CDMMessageIdentification2_To_MessageIdentification2"/>
			<function name="CDMNameAndAddress10_To_NameAndAddress10"/>
			<function name="CDMNumberAndSumOfTransactions1_To_NumberAndSumOfTransactions1"/>
			<function name="CDMNumberAndSumOfTransactions2_To_NumberAndSumOfTransactions2"/>
			<function name="CDMOrganisationIdentification8_To_OrganisationIdentification4"/>
			<function name="CDMOrganisationIdentification8_To_OrganisationIdentification8"/>
			<function name="CDMOrganisationIdentificationSchemeName1Choice_To_OrganisationIdentificationSchemeName1Choice"/>
			<function name="CDMOriginalAndCurrentQuantities1_To_OriginalAndCurrentQuantities1"/>
			<function name="CDMOriginalBusinessQuery1_To_OriginalBusinessQuery1"/>
			<function name="CDMOtherIdentification1_To_OtherIdentification1"/>
			<function name="CDMPagination_To_Pagination"/>
			<function name="CDMParty11Choice_To_Party11Choice"/>
			<function name="CDMParty11Choice_To_Party6Choice"/>
			<function name="CDMPartyIdentification43_To_PartyIdentification32"/>
			<function name="CDMPartyIdentification43_To_PartyIdentification43"/>
			<function name="CDMPaymentCard4_To_PaymentCard4"/>
			<function name="CDMPaymentIdentification1_To_PaymentIdentification1"/>
			<function name="CDMPaymentReturnReason2_To_PaymentReturnReason2"/>
			<function name="CDMPaymentReturnReason2_To_ReturnReasonInformation10"/>
			<function name="CDMPersonIdentification5_To_PersonIdentification5"/>
			<function name="CDMPersonIdentificationSchemeName1Choice_To_PersonIdentificationSchemeName1Choice"/>
			<function name="CDMPlainCardData1_To_PlainCardData1"/>
			<function name="CDMPointOfInteraction1_To_PointOfInteraction1"/>
			<function name="CDMPointOfInteractionCapabilities1_To_PointOfInteractionCapabilities1"/>
			<function name="CDMPointOfInteractionComponent1_To_PointOfInteractionComponent1"/>
			<function name="CDMPostalAddress6_To_PostalAddress6"/>
			<function name="CDMPrice2_To_ActiveOrHistoricCurrencyAndAmount"/>
			<function name="CDMPrice2_To_Price2"/>
			<function name="CDMPriceRateOrAmountChoice_To_PriceRateOrAmountChoice"/>
			<function name="CDMProduct2_To_Product2"/>
			<function name="CDMProprietaryAgent3_To_ProprietaryAgent2"/>
			<function name="CDMProprietaryAgent3_To_ProprietaryAgent3"/>
			<function name="CDMProprietaryBankTransactionCodeStructure1_To_ProprietaryBankTransactionCodeStructure1"/>
			<function name="CDMProprietaryDate2_To_ProprietaryDate2"/>
			<function name="CDMProprietaryParty3_To_ProprietaryParty2"/>
			<function name="CDMProprietaryParty3_To_ProprietaryParty3"/>
			<function name="CDMProprietaryPrice2_To_ProprietaryPrice2"/>
			<function name="CDMProprietaryQuantity1_To_ProprietaryQuantity1"/>
			<function name="CDMProprietaryReference1_To_ProprietaryReference1"/>
			<function name="CDMPurpose2Choice_To_Purpose2Choice"/>
			<function name="CDMRate3_To_Rate3"/>
			<function name="CDMRateType4Choice_To_RateType4Choice"/>
			<function name="CDMReferredDocumentInformation3_To_ReferredDocumentInformation3"/>
			<function name="CDMReferredDocumentType1Choice_To_ReferredDocumentType1Choice"/>
			<function name="CDMReferredDocumentType2_To_ReferredDocumentType2"/>
			<function name="CDMRegulatoryAuthority2_To_RegulatoryAuthority2"/>
			<function name="CDMRegulatoryReporting3_To_RegulatoryReporting3"/>
			<function name="CDMRemittanceAmount2_To_RemittanceAmount1"/>
			<function name="CDMRemittanceAmount2_To_RemittanceAmount2"/>
			<function name="CDMRemittanceInformation7_To_RemittanceInformation5"/>
			<function name="CDMRemittanceInformation7_To_RemittanceInformation7"/>
			<function name="CDMRemittanceLocation2_To_RemittanceLocation2"/>
			<function name="CDMReportEntry3_To_ReportEntry2"/>
			<function name="CDMReportEntry3_To_ReportEntry3"/>
			<function name="CDMReportingSource1Choice_To_ReportingSource1Choice"/>
			<function name="CDMReturnReason5Choice_To_ReturnReason5Choice"/>
			<function name="CDMSecuritiesAccount13_To_CashAccount16"/>
			<function name="CDMSecuritiesAccount13_To_SecuritiesAccount13"/>
			<function name="CDMSecurityIdentification14_To_SecurityIdentification14"/>
			<function name="CDMSecurityIdentification14_To_SecurityIdentification4Choice"/>
			<function name="CDMServiceLevel8Choice_To_ServiceLevel8Choice"/>
			<function name="CDMstring_To_Max105Text"/>
			<function name="CDMstring_To_Max140Text"/>
			<function name="CDMstring_To_Max35Text"/>
			<function name="CDMstring_To_Max70Text"/>
			<function name="CDMStructuredRegulatoryReporting3_To_StructuredRegulatoryReporting3"/>
			<function name="CDMStructuredRemittanceInformation9_To_StructuredRemittanceInformation7"/>
			<function name="CDMStructuredRemittanceInformation9_To_StructuredRemittanceInformation9"/>
			<function name="CDMSupplementaryData1_To_SupplementaryData1"/>
			<function name="CDMSupplementaryDataEnvelope1_To_SupplementaryDataEnvelope1"/>
			<function name="CDMTaxAmount1_To_TaxAmount1"/>
			<function name="CDMTaxAmountAndType1_To_ActiveOrHistoricCurrencyAndAmount"/>
			<function name="CDMTaxAmountAndType1_To_TaxAmountAndType1"/>
			<function name="CDMTaxAmountType1Choice_To_TaxAmountType1Choice"/>
			<function name="CDMTaxAuthorisation1_To_TaxAuthorisation1"/>
			<function name="CDMTaxCharges2_To_TaxCharges2"/>
			<function name="CDMTaxInformation3_To_TaxInformation3"/>
			<function name="CDMTaxParty1_To_TaxParty1"/>
			<function name="CDMTaxParty2_To_TaxParty2"/>
			<function name="CDMTaxPeriod1_To_TaxPeriod1"/>
			<function name="CDMTaxRecord1_To_TaxRecord1"/>
			<function name="CDMTaxRecordDetails1_To_TaxRecordDetails1"/>
			<function name="CDMTechnicalInputChannel1Choice_To_TechnicalInputChannel1Choice"/>
			<function name="CDMTotalsPerBankTransactionCode2_To_TotalsPerBankTransactionCode2"/>
			<function name="CDMTotalTransactions2_To_TotalTransactions2"/>
			<function name="CDMTrackData1_To_TrackData1"/>
			<function name="CDMTransactionAgents3_To_TransactionAgents2"/>
			<function name="CDMTransactionAgents3_To_TransactionAgents3"/>
			<function name="CDMTransactionDates2_To_TransactionDates2"/>
			<function name="CDMTransactionIdentifier1_To_TransactionIdentifier1"/>
			<function name="CDMTransactionInterest3_To_TransactionInterest2"/>
			<function name="CDMTransactionInterest3_To_TransactionInterest3"/>
			<function name="CDMTransactionParties3_To_TransactionParties3"/>
			<function name="CDMTransactionParties3_To_TransactionParty2"/>
			<function name="CDMTransactionPrice3Choice_To_TransactionPrice2Choice"/>
			<function name="CDMTransactionPrice3Choice_To_TransactionPrice3Choice"/>
			<function name="CDMTransactionQuantities2Choice_To_TransactionQuantities1Choice"/>
			<function name="CDMTransactionQuantities2Choice_To_TransactionQuantities2Choice"/>
			<function name="CDMTransactionReferences3_To_TransactionReferences2"/>
			<function name="CDMTransactionReferences3_To_TransactionReferences3"/>
			<function name="CDMYieldedOrValueType1Choice_To_YieldedOrValueType1Choice"/>
			<function name="AccountIdentification4Choice_To_CDMAccountIdentification4Choice"/>
			<function name="AccountInterest2_To_CDMAccountInterest2"/>
			<function name="AccountSchemeName1Choice_To_CDMAccountSchemeName1Choice"/>
			<function name="ActiveCurrencyAndAmount_To_CDMActiveCurrencyAndAmount"/>
			<function name="ActiveOrHistoricCurrencyAnd13DecimalAmount_To_CDMActiveOrHistoricCurrencyAnd13DecimalAmount"/>
			<function name="ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount"/>
			<function name="ActiveOrHistoricCurrencyAndAmount_To_CDMDiscountAmountAndType1"/>
			<function name="ActiveOrHistoricCurrencyAndAmount_To_CDMPrice2"/>
			<function name="ActiveOrHistoricCurrencyAndAmount_To_CDMTaxAmountAndType1"/>
			<function name="AmendmentInformationDetails6_To_CDMAmendmentInformationDetails8"/>
			<function name="AmendmentInformationDetails8_To_CDMAmendmentInformationDetails8"/>
			<function name="AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchange3"/>
			<function name="AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetails3"/>
			<function name="AmountAndCurrencyExchangeDetails4_To_CDMAmountAndCurrencyExchangeDetails4"/>
			<function name="AmountRangeBoundary1_To_CDMAmountRangeBoundary1"/>
			<function name="AmountType3Choice_To_CDMAmountType3Choice"/>
			<function name="Authorisation1Choice_To_CDMAuthorisation1Choice"/>
			<function name="BalanceSubType1Choice_To_CDMBalanceSubType1Choice"/>
			<function name="BalanceType12_To_CDMBalanceType12"/>
			<function name="BalanceType5Choice_To_CDMBalanceType5Choice"/>
			<function name="BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4"/>
			<function name="BankTransactionCodeStructure5_To_CDMBankTransactionCodeStructure5"/>
			<function name="BankTransactionCodeStructure6_To_CDMBankTransactionCodeStructure6"/>
			<function name="BatchInformation2_To_CDMBatchInformation2"/>
			<function name="BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5"/>
			<function name="BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5"/>
			<function name="BranchData2_To_CDMBranchData2"/>
			<function name="CardAggregated1_To_CDMCardAggregated1"/>
			<function name="CardDataReading1Code_To_CDMCardDataReading1Code"/>
			<function name="CardEntry1_To_CDMCardEntry1"/>
			<function name="CardholderVerificationCapability1Code_To_CDMCardholderVerificationCapability1Code"/>
			<function name="CardIndividualTransaction1_To_CDMCardIndividualTransaction1"/>
			<function name="CardSecurityInformation1_To_CDMCardSecurityInformation1"/>
			<function name="CardSequenceNumberRange1_To_CDMCardSequenceNumberRange1"/>
			<function name="CardTransaction1_To_CDMCardTransaction1"/>
			<function name="CardTransaction1Choice_To_CDMCardTransaction1Choice"/>
			<function name="CashAccount16_To_CDMCashAccount24"/>
			<function name="CashAccount16_To_CDMSecuritiesAccount13"/>
			<function name="CashAccount20_To_CDMCashAccount25"/>
			<function name="CashAccount24_To_CDMCashAccount24"/>
			<function name="CashAccount25_To_CDMCashAccount25"/>
			<function name="CashAccountType2_To_CDMCashAccountType2Choice"/>
			<function name="CashAccountType2_To_CDMGenericIdentification20"/>
			<function name="CashAccountType2Choice_To_CDMCashAccountType2Choice"/>
			<function name="CashBalance3_To_CDMCashBalance3"/>
			<function name="CashBalanceAvailability2_To_CDMCashBalanceAvailability2"/>
			<function name="CashBalanceAvailabilityDate1_To_CDMCashBalanceAvailabilityDate1"/>
			<function name="CashDeposit1_To_CDMCashDeposit1"/>
			<function name="CategoryPurpose1Choice_To_CDMCategoryPurpose1Choice"/>
			<function name="Charges3_To_CDMCharges3"/>
			<function name="ChargesInformation6_To_CDMCharges3"/>
			<function name="ChargesRecord1_To_CDMChargesRecord1"/>
			<function name="ChargeType3Choice_To_CDMChargeType3Choice"/>
			<function name="ClearingSystemIdentification2Choice_To_CDMClearingSystemIdentification2Choice"/>
			<function name="ClearingSystemIdentification3Choice_To_CDMClearingSystemIdentification3Choice"/>
			<function name="ClearingSystemMemberIdentification2_To_CDMClearingSystemMemberIdentification2"/>
			<function name="ContactDetails2_To_CDMContactDetails2"/>
			<function name="CorporateAction1_To_CDMCorporateAction9"/>
			<function name="CorporateAction9_To_CDMCorporateAction9"/>
			<function name="CreditLine2_To_CDMCreditLine2"/>
			<function name="CreditorReferenceInformation2_To_CDMCreditorReferenceInformation2"/>
			<function name="CreditorReferenceType1Choice_To_CDMCreditorReferenceType1Choice"/>
			<function name="CreditorReferenceType2_To_CDMCreditorReferenceType2"/>
			<function name="CurrencyAndAmountRange2_To_CDMCurrencyAndAmountRange2"/>
			<function name="CurrencyExchange5_To_CDMCurrencyExchange5"/>
			<function name="DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice"/>
			<function name="DateAndPlaceOfBirth_To_CDMDateAndPlaceOfBirth"/>
			<function name="DateOrDateTimePeriodChoice_To_CDMDateOrDateTimePeriodChoice"/>
			<function name="DatePeriodDetails_To_CDMDatePeriodDetails"/>
			<function name="DateTimePeriodDetails_To_CDMDateTimePeriodDetails"/>
			<function name="DiscountAmountAndType1_To_CDMDiscountAmountAndType1"/>
			<function name="DiscountAmountType1Choice_To_CDMDiscountAmountType1Choice"/>
			<function name="DisplayCapabilities1_To_CDMDisplayCapabilities1"/>
			<function name="DocumentAdjustment1_To_CDMDocumentAdjustment1"/>
			<function name="EntryDetails1_To_CDMEntryDetails2"/>
			<function name="EntryDetails2_To_CDMEntryDetails2"/>
			<function name="EntryTransaction2_To_CDMEntryTransaction3"/>
			<function name="EntryTransaction3_To_CDMEntryTransaction3"/>
			<function name="EquivalentAmount2_To_CDMEquivalentAmount2"/>
			<function name="FinancialIdentificationSchemeName1Choice_To_CDMFinancialIdentificationSchemeName1Choice"/>
			<function name="FinancialInstitutionIdentification7_To_CDMFinancialInstitutionIdentification8"/>
			<function name="FinancialInstitutionIdentification8_To_CDMFinancialInstitutionIdentification8"/>
			<function name="FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoice"/>
			<function name="FromToAmountRange_To_CDMFromToAmountRange"/>
			<function name="GenericAccountIdentification1_To_CDMGenericAccountIdentification1"/>
			<function name="GenericFinancialIdentification1_To_CDMGenericFinancialIdentification1"/>
			<function name="GenericIdentification1_To_CDMGenericIdentification1"/>
			<function name="GenericIdentification20_To_CDMGenericIdentification20"/>
			<function name="GenericIdentification32_To_CDMGenericIdentification32"/>
			<function name="GenericIdentification3_To_CDMGenericIdentification3"/>
			<function name="GenericOrganisationIdentification1_To_CDMGenericOrganisationIdentification1"/>
			<function name="GenericPersonIdentification1_To_CDMGenericPersonIdentification1"/>
			<function name="GroupHeader42_To_CDMGroupHeader58"/>
			<function name="GroupHeader58_To_CDMGroupHeader58"/>
			<function name="IdentificationSource3Choice_To_CDMIdentificationSource3Choice"/>
			<function name="ImpliedCurrencyAmountRangeChoice_To_CDMImpliedCurrencyAmountRangeChoice"/>
			<function name="InterestRecord1_To_CDMInterestRecord1"/>
			<function name="InterestType1Choice_To_CDMInterestType1Choice"/>
			<function name="LocalInstrument2Choice_To_CDMLocalInstrument2Choice"/>
			<function name="MandateRelatedInformation6_To_CDMMandateRelatedInformation8"/>
			<function name="MandateRelatedInformation8_To_CDMMandateRelatedInformation8"/>
			<function name="Max105Text_To_CDMstring"/>
			<function name="Max140Text_To_CDMstring"/>
			<function name="Max35Text_To_CDMstring"/>
			<function name="Max70Text_To_CDMstring"/>
			<function name="MessageIdentification2_To_CDMMessageIdentification2"/>
			<function name="NameAndAddress10_To_CDMNameAndAddress10"/>
			<function name="NumberAndSumOfTransactions1_To_CDMNumberAndSumOfTransactions1"/>
			<function name="NumberAndSumOfTransactions2_To_CDMNumberAndSumOfTransactions2"/>
			<function name="OrganisationIdentification4_To_CDMOrganisationIdentification8"/>
			<function name="OrganisationIdentification8_To_CDMOrganisationIdentification8"/>
			<function name="OrganisationIdentificationSchemeName1Choice_To_CDMOrganisationIdentificationSchemeName1Choice"/>
			<function name="OriginalAndCurrentQuantities1_To_CDMOriginalAndCurrentQuantities1"/>
			<function name="OriginalBusinessQuery1_To_CDMOriginalBusinessQuery1"/>
			<function name="OtherIdentification1_To_CDMOtherIdentification1"/>
			<function name="Pagination_To_CDMPagination"/>
			<function name="Party11Choice_To_CDMParty11Choice"/>
			<function name="Party6Choice_To_CDMParty11Choice"/>
			<function name="PartyIdentification32_To_CDMPartyIdentification43"/>
			<function name="PartyIdentification43_To_CDMPartyIdentification43"/>
			<function name="PaymentCard4_To_CDMPaymentCard4"/>
			<function name="PaymentIdentification1_To_CDMPaymentIdentification1"/>
			<function name="PaymentReturnReason2_To_CDMPaymentReturnReason2"/>
			<function name="PersonIdentification5_To_CDMPersonIdentification5"/>
			<function name="PersonIdentificationSchemeName1Choice_To_CDMPersonIdentificationSchemeName1Choice"/>
			<function name="PlainCardData1_To_CDMPlainCardData1"/>
			<function name="PointOfInteraction1_To_CDMPointOfInteraction1"/>
			<function name="PointOfInteractionCapabilities1_To_CDMPointOfInteractionCapabilities1"/>
			<function name="PointOfInteractionComponent1_To_CDMPointOfInteractionComponent1"/>
			<function name="PostalAddress6_To_CDMPostalAddress6"/>
			<function name="Price2_To_CDMPrice2"/>
			<function name="PriceRateOrAmountChoice_To_CDMPriceRateOrAmountChoice"/>
			<function name="Product2_To_CDMProduct2"/>
			<function name="ProprietaryAgent2_To_CDMProprietaryAgent3"/>
			<function name="ProprietaryAgent3_To_CDMProprietaryAgent3"/>
			<function name="ProprietaryBankTransactionCodeStructure1_To_CDMProprietaryBankTransactionCodeStructure1"/>
			<function name="ProprietaryDate2_To_CDMProprietaryDate2"/>
			<function name="ProprietaryParty2_To_CDMProprietaryParty3"/>
			<function name="ProprietaryParty3_To_CDMProprietaryParty3"/>
			<function name="ProprietaryPrice2_To_CDMProprietaryPrice2"/>
			<function name="ProprietaryQuantity1_To_CDMProprietaryQuantity1"/>
			<function name="ProprietaryReference1_To_CDMProprietaryReference1"/>
			<function name="Purpose2Choice_To_CDMPurpose2Choice"/>
			<function name="Rate3_To_CDMRate3"/>
			<function name="RateType4Choice_To_CDMRateType4Choice"/>
			<function name="ReferredDocumentInformation3_To_CDMReferredDocumentInformation3"/>
			<function name="ReferredDocumentType1Choice_To_CDMReferredDocumentType1Choice"/>
			<function name="ReferredDocumentType2_To_CDMReferredDocumentType2"/>
			<function name="RegulatoryAuthority2_To_CDMRegulatoryAuthority2"/>
			<function name="RegulatoryReporting3_To_CDMRegulatoryReporting3"/>
			<function name="RemittanceAmount1_To_CDMRemittanceAmount2"/>
			<function name="RemittanceAmount2_To_CDMRemittanceAmount2"/>
			<function name="RemittanceInformation5_To_CDMRemittanceInformation7"/>
			<function name="RemittanceInformation7_To_CDMRemittanceInformation7"/>
			<function name="RemittanceLocation2_To_CDMRemittanceLocation2"/>
			<function name="ReportEntry2_To_CDMReportEntry3"/>
			<function name="ReportEntry3_To_CDMReportEntry3"/>
			<function name="ReportingSource1Choice_To_CDMReportingSource1Choice"/>
			<function name="ReturnReason5Choice_To_CDMReturnReason5Choice"/>
			<function name="ReturnReasonInformation10_To_CDMPaymentReturnReason2"/>
			<function name="SecuritiesAccount13_To_CDMSecuritiesAccount13"/>
			<function name="SecurityIdentification14_To_CDMSecurityIdentification14"/>
			<function name="SecurityIdentification4Choice_To_CDMSecurityIdentification14"/>
			<function name="ServiceLevel8Choice_To_CDMServiceLevel8Choice"/>
			<function name="StructuredRegulatoryReporting3_To_CDMStructuredRegulatoryReporting3"/>
			<function name="StructuredRemittanceInformation7_To_CDMStructuredRemittanceInformation9"/>
			<function name="StructuredRemittanceInformation9_To_CDMStructuredRemittanceInformation9"/>
			<function name="SupplementaryData1_To_CDMSupplementaryData1"/>
			<function name="SupplementaryDataEnvelope1_To_CDMSupplementaryDataEnvelope1"/>
			<function name="TaxAmount1_To_CDMTaxAmount1"/>
			<function name="TaxAmountAndType1_To_CDMTaxAmountAndType1"/>
			<function name="TaxAmountType1Choice_To_CDMTaxAmountType1Choice"/>
			<function name="TaxAuthorisation1_To_CDMTaxAuthorisation1"/>
			<function name="TaxCharges2_To_CDMTaxCharges2"/>
			<function name="TaxInformation3_To_CDMTaxInformation3"/>
			<function name="TaxParty1_To_CDMTaxParty1"/>
			<function name="TaxParty2_To_CDMTaxParty2"/>
			<function name="TaxPeriod1_To_CDMTaxPeriod1"/>
			<function name="TaxRecord1_To_CDMTaxRecord1"/>
			<function name="TaxRecordDetails1_To_CDMTaxRecordDetails1"/>
			<function name="TechnicalInputChannel1Choice_To_CDMTechnicalInputChannel1Choice"/>
			<function name="TotalsPerBankTransactionCode2_To_CDMTotalsPerBankTransactionCode2"/>
			<function name="TotalTransactions2_To_CDMTotalTransactions2"/>
			<function name="TrackData1_To_CDMTrackData1"/>
			<function name="TransactionAgents2_To_CDMTransactionAgents3"/>
			<function name="TransactionAgents3_To_CDMTransactionAgents3"/>
			<function name="TransactionDates2_To_CDMTransactionDates2"/>
			<function name="TransactionIdentifier1_To_CDMTransactionIdentifier1"/>
			<function name="TransactionInterest2_To_CDMTransactionInterest3"/>
			<function name="TransactionInterest3_To_CDMTransactionInterest3"/>
			<function name="TransactionParties3_To_CDMTransactionParties3"/>
			<function name="TransactionParty2_To_CDMTransactionParties3"/>
			<function name="TransactionPrice2Choice_To_CDMTransactionPrice3Choice"/>
			<function name="TransactionPrice3Choice_To_CDMTransactionPrice3Choice"/>
			<function name="TransactionQuantities1Choice_To_CDMTransactionQuantities2Choice"/>
			<function name="TransactionQuantities2Choice_To_CDMTransactionQuantities2Choice"/>
			<function name="TransactionReferences2_To_CDMTransactionReferences3"/>
			<function name="TransactionReferences3_To_CDMTransactionReferences3"/>
			<function name="YieldedOrValueType1Choice_To_CDMYieldedOrValueType1Choice"/>
			<function name="ChargeType2Choice_To_CDMChargeType3Choice"/>
			<function name="AssignSrcElmToDestSec"/>
			<function name="getCreditTransferValidationNameList"/>
			<function name="getDirectDebitValidationNameList"/>
			<function name="getPayStatRptValidationNameList"/>
			<function name="SetCreditTransferFilteringParams"/>
			<function name="SetDirectDebitFilteringParams"/>
		</summary>
	</private>
	<references type="References">
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\..\..\Messages\CDM\V1\CDMV1Messages.car</relative-path>
			<absolute-path>E:\Testing\Search\SAP-CDM-Mappings\Messages\CDM\V1\CDMV1Messages.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\..\..\Messages\CGI\CGIMessages.car</relative-path>
			<absolute-path>E:\Testing\Search\SAP-CDM-Mappings\Messages\CGI\CGIMessages.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\..\..\Messages\ISO20022\ISO20022Messages.car</relative-path>
			<absolute-path>E:\Testing\Search\SAP-CDM-Mappings\Messages\ISO20022\ISO20022Messages.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\..\Library\GenericMapper\GenericMapper.car</relative-path>
			<absolute-path>E:\Testing\Search\SAP-CDM-Mappings\Mappings\Library\GenericMapper\GenericMapper.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\..\Library\SAPUtil\SAPUtil.car</relative-path>
			<absolute-path>E:\Testing\Search\SAP-CDM-Mappings\Mappings\Library\SAPUtil\SAPUtil.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\..\Library\PopulateComputableFields\PopulateComputableFields.car</relative-path>
			<absolute-path>E:\Testing\Search\SAP-CDM-Mappings\Mappings\Library\PopulateComputableFields\PopulateComputableFields.car</absolute-path>
		</reference>
	</references>
	<folder name="Function Definitions" type="FunctionDefFolder">
		<folder name="CDMToISO" type="FunctionDefFolder">
			<FormulaFunctionDef name="CDMAccountIdentification4Choice_To_AccountIdentification4Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAccountIdentification4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification</description>
					</parameterfield>
					<parameterfield>
						<name>AccountIdentification4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAccountIdentification4ChoiceElm in CDMAccountIdentification4Choice) {
    def AccountIdentification4ChoiceElm = AccountIdentification4Choice.secAddElement();
    AccountIdentification4ChoiceElm.IBAN = CDMAccountIdentification4ChoiceElm.IBAN;
    CDMGenericAccountIdentification1_To_GenericAccountIdentification1(CDMAccountIdentification4ChoiceElm.Other, AccountIdentification4ChoiceElm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAccountInterest2_To_AccountInterest2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAccountInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.Interest</description>
					</parameterfield>
					<parameterfield>
						<name>AccountInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.Intrst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAccountInterest2Elm in CDMAccountInterest2) {
    def AccountInterest2Elm = AccountInterest2.secAddElement();
    CDMInterestType1Choice_To_InterestType1Choice(CDMAccountInterest2Elm.Type, AccountInterest2Elm.Tp);
    CDMRate3_To_Rate3(CDMAccountInterest2Elm.Rate, AccountInterest2Elm.Rate);
    CDMDateTimePeriodDetails_To_DateTimePeriodDetails(CDMAccountInterest2Elm.FromToDate, AccountInterest2Elm.FrToDt);
    AccountInterest2Elm.Rsn = CDMAccountInterest2Elm.Reason;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAccountSchemeName1Choice_To_AccountSchemeName1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAccountSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other.SchemeName</description>
					</parameterfield>
					<parameterfield>
						<name>AccountSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr.SchmeNm</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAccountSchemeName1ChoiceElm in CDMAccountSchemeName1Choice) {
    def AccountSchemeName1ChoiceElm = AccountSchemeName1Choice.secAddElement();
    AccountSchemeName1ChoiceElm.Cd = CDMAccountSchemeName1ChoiceElm.Code;
    AccountSchemeName1ChoiceElm.Prtry = CDMAccountSchemeName1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMActiveCurrencyAndAmount_To_ActiveCurrencyAndAmount" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMActiveCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMActiveCurrencyAndAmountElm in CDMActiveCurrencyAndAmount) {
    def ActiveCurrencyAndAmountElm = ActiveCurrencyAndAmount.secAddElement();
    ActiveCurrencyAndAmountElm.Ccy = CDMActiveCurrencyAndAmountElm.Ccy;
    ActiveCurrencyAndAmountElm.Value = CDMActiveCurrencyAndAmountElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMActiveOrHistoricCurrencyAnd13DecimalAmount_To_ActiveOrHistoricCurrencyAnd13DecimalAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMActiveOrHistoricCurrencyAnd13DecimalAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value.Amount</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAnd13DecimalAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMActiveOrHistoricCurrencyAnd13DecimalAmountElm in CDMActiveOrHistoricCurrencyAnd13DecimalAmount) {
    def ActiveOrHistoricCurrencyAnd13DecimalAmountElm = ActiveOrHistoricCurrencyAnd13DecimalAmount.secAddElement();
    ActiveOrHistoricCurrencyAnd13DecimalAmountElm.Ccy = CDMActiveOrHistoricCurrencyAnd13DecimalAmountElm.Ccy;
    ActiveOrHistoricCurrencyAnd13DecimalAmountElm.Value = CDMActiveOrHistoricCurrencyAnd13DecimalAmountElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.ChargesInformation.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.ChargesInformation.Amount</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.ChrgsInf.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.ChrgsInf.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMActiveOrHistoricCurrencyAndAmountElm in CDMActiveOrHistoricCurrencyAndAmount) {
    def ActiveOrHistoricCurrencyAndAmountElm = ActiveOrHistoricCurrencyAndAmount.secAddElement();
    ActiveOrHistoricCurrencyAndAmountElm.Ccy = CDMActiveOrHistoricCurrencyAndAmountElm.Ccy;
    ActiveOrHistoricCurrencyAndAmountElm.Value = CDMActiveOrHistoricCurrencyAndAmountElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmendmentInformationDetails8_To_AmendmentInformationDetails6" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmendmentInformationDetails8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</description>
					</parameterfield>
					<parameterfield>
						<name>AmendmentInformationDetails6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmendmentInformationDetails8Elm in CDMAmendmentInformationDetails8) {
    def AmendmentInformationDetails6Elm = AmendmentInformationDetails6.secAddElement();
    AmendmentInformationDetails6Elm.OrgnlMndtId = CDMAmendmentInformationDetails8Elm.OriginalMandateIdentification;
    CDMPartyIdentification43_To_PartyIdentification32(CDMAmendmentInformationDetails8Elm.OriginalCreditorSchemeIdentification, AmendmentInformationDetails6Elm.OrgnlCdtrSchmeId);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMAmendmentInformationDetails8Elm.OriginalCreditorAgent, AmendmentInformationDetails6Elm.OrgnlCdtrAgt);
    CDMCashAccount24_To_CashAccount16(CDMAmendmentInformationDetails8Elm.OriginalCreditorAgentAccount, AmendmentInformationDetails6Elm.OrgnlCdtrAgtAcct);
    CDMPartyIdentification43_To_PartyIdentification32(CDMAmendmentInformationDetails8Elm.OriginalDebtor, AmendmentInformationDetails6Elm.OrgnlDbtr);
    CDMCashAccount24_To_CashAccount16(CDMAmendmentInformationDetails8Elm.OriginalDebtorAccount, AmendmentInformationDetails6Elm.OrgnlDbtrAcct);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMAmendmentInformationDetails8Elm.OriginalDebtorAgent, AmendmentInformationDetails6Elm.OrgnlDbtrAgt);
    CDMCashAccount24_To_CashAccount16(CDMAmendmentInformationDetails8Elm.OriginalDebtorAgentAccount, AmendmentInformationDetails6Elm.OrgnlDbtrAgtAcct);
    AmendmentInformationDetails6Elm.OrgnlFnlColltnDt = CDMAmendmentInformationDetails8Elm.OriginalFinalCollectionDate;
    AmendmentInformationDetails6Elm.OrgnlFrqcy = CDMAmendmentInformationDetails8Elm.OriginalFrequency;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmendmentInformationDetails8_To_AmendmentInformationDetails8" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmendmentInformationDetails8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</description>
					</parameterfield>
					<parameterfield>
						<name>AmendmentInformationDetails8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmendmentInformationDetails8Elm in CDMAmendmentInformationDetails8) {
    def AmendmentInformationDetails8Elm = AmendmentInformationDetails8.secAddElement();
    AmendmentInformationDetails8Elm.OrgnlMndtId = CDMAmendmentInformationDetails8Elm.OriginalMandateIdentification;
    CDMPartyIdentification43_To_PartyIdentification43(CDMAmendmentInformationDetails8Elm.OriginalCreditorSchemeIdentification, AmendmentInformationDetails8Elm.OrgnlCdtrSchmeId);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMAmendmentInformationDetails8Elm.OriginalCreditorAgent, AmendmentInformationDetails8Elm.OrgnlCdtrAgt);
    CDMCashAccount24_To_CashAccount24(CDMAmendmentInformationDetails8Elm.OriginalCreditorAgentAccount, AmendmentInformationDetails8Elm.OrgnlCdtrAgtAcct);
    CDMPartyIdentification43_To_PartyIdentification43(CDMAmendmentInformationDetails8Elm.OriginalDebtor, AmendmentInformationDetails8Elm.OrgnlDbtr);
    CDMCashAccount24_To_CashAccount24(CDMAmendmentInformationDetails8Elm.OriginalDebtorAccount, AmendmentInformationDetails8Elm.OrgnlDbtrAcct);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMAmendmentInformationDetails8Elm.OriginalDebtorAgent, AmendmentInformationDetails8Elm.OrgnlDbtrAgt);
    CDMCashAccount24_To_CashAccount24(CDMAmendmentInformationDetails8Elm.OriginalDebtorAgentAccount, AmendmentInformationDetails8Elm.OrgnlDbtrAgtAcct);
    AmendmentInformationDetails8Elm.OrgnlFnlColltnDt = CDMAmendmentInformationDetails8Elm.OriginalFinalCollectionDate;
    AmendmentInformationDetails8Elm.OrgnlFrqcy = CDMAmendmentInformationDetails8Elm.OriginalFrequency;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountAndCurrencyExchange3_To_AmountAndCurrencyExchange3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchange3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails</description>
					</parameterfield>
					<parameterfield>
						<name>AmountAndCurrencyExchange3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountAndCurrencyExchange3Elm in CDMAmountAndCurrencyExchange3) {
    def AmountAndCurrencyExchange3Elm = AmountAndCurrencyExchange3.secAddElement();
    CDMAmountAndCurrencyExchangeDetails3_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchange3Elm.InstructedAmount, AmountAndCurrencyExchange3Elm.InstdAmt);
    CDMAmountAndCurrencyExchangeDetails3_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchange3Elm.TransactionAmount, AmountAndCurrencyExchange3Elm.TxAmt);
    CDMAmountAndCurrencyExchangeDetails3_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchange3Elm.CounterValueAmount, AmountAndCurrencyExchange3Elm.CntrValAmt);
    CDMAmountAndCurrencyExchangeDetails3_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchange3Elm.AnnouncedPostingAmount, AmountAndCurrencyExchange3Elm.AnncdPstngAmt);
    CDMAmountAndCurrencyExchangeDetails4_To_AmountAndCurrencyExchangeDetails4(CDMAmountAndCurrencyExchange3Elm.ProprietaryAmount, AmountAndCurrencyExchange3Elm.PrtryAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountAndCurrencyExchangeDetails3_To_AmountAndCurrencyExchangeDetails3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeDetails3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountAndCurrencyExchangeDetails3Elm in CDMAmountAndCurrencyExchangeDetails3) {
    def AmountAndCurrencyExchangeDetails3Elm = AmountAndCurrencyExchangeDetails3.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMAmountAndCurrencyExchangeDetails3Elm.Amount, AmountAndCurrencyExchangeDetails3Elm.Amt);
    CDMCurrencyExchange5_To_CurrencyExchange5(CDMAmountAndCurrencyExchangeDetails3Elm.CurrencyExchange, AmountAndCurrencyExchangeDetails3Elm.CcyXchg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountAndCurrencyExchangeDetails4_To_AmountAndCurrencyExchangeDetails4" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeDetails4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.ProprietaryAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.ProprietaryAmount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.PrtryAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.PrtryAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountAndCurrencyExchangeDetails4Elm in CDMAmountAndCurrencyExchangeDetails4) {
    def AmountAndCurrencyExchangeDetails4Elm = AmountAndCurrencyExchangeDetails4.secAddElement();
    AmountAndCurrencyExchangeDetails4Elm.Tp = CDMAmountAndCurrencyExchangeDetails4Elm.Type;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMAmountAndCurrencyExchangeDetails4Elm.Amount, AmountAndCurrencyExchangeDetails4Elm.Amt);
    CDMCurrencyExchange5_To_CurrencyExchange5(CDMAmountAndCurrencyExchangeDetails4Elm.CurrencyExchange, AmountAndCurrencyExchangeDetails4Elm.CcyXchg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountRangeBoundary1_To_AmountRangeBoundary1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountRangeBoundary1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromAmount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountRangeBoundary1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountRangeBoundary1Elm in CDMAmountRangeBoundary1) {
    def AmountRangeBoundary1Elm = AmountRangeBoundary1.secAddElement();
    AmountRangeBoundary1Elm.BdryAmt = CDMAmountRangeBoundary1Elm.BoundaryAmount;
    AmountRangeBoundary1Elm.Incl = CDMAmountRangeBoundary1Elm.Included;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountType3Choice_To_AmountType3Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountType3ChoiceElm in CDMAmountType3Choice) {
    def AmountType3ChoiceElm = AmountType3Choice.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMAmountType3ChoiceElm.InstructedAmount, AmountType3ChoiceElm.InstdAmt);
    CDMEquivalentAmount2_To_EquivalentAmount2(CDMAmountType3ChoiceElm.EqvtAmt, AmountType3ChoiceElm.EqvtAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAuthorisation1Choice_To_Authorisation1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAuthorisation1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.GroupHeader.Authorisation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.GroupHeader.Authorisation</description>
					</parameterfield>
					<parameterfield>
						<name>Authorisation1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.GrpHdr.Authstn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.GrpHdr.Authstn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAuthorisation1ChoiceElm in CDMAuthorisation1Choice) {
    def Authorisation1ChoiceElm = Authorisation1Choice.secAddElement();
    Authorisation1ChoiceElm.Cd = CDMAuthorisation1ChoiceElm.Code;
    Authorisation1ChoiceElm.Prtry = CDMAuthorisation1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBalanceSubType1Choice_To_BalanceSubType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBalanceSubType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.SubType</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.SubType</description>
					</parameterfield>
					<parameterfield>
						<name>BalanceSubType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.SubTp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.SubTp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBalanceSubType1ChoiceElm in CDMBalanceSubType1Choice) {
    def BalanceSubType1ChoiceElm = BalanceSubType1Choice.secAddElement();
    BalanceSubType1ChoiceElm.Cd = CDMBalanceSubType1ChoiceElm.Code;
    BalanceSubType1ChoiceElm.Prtry = CDMBalanceSubType1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBalanceType12_To_BalanceType12" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBalanceType12</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type</description>
					</parameterfield>
					<parameterfield>
						<name>BalanceType12</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBalanceType12Elm in CDMBalanceType12) {
    def BalanceType12Elm = BalanceType12.secAddElement();
    CDMBalanceType5Choice_To_BalanceType5Choice(CDMBalanceType12Elm.CodeOrProprietary, BalanceType12Elm.CdOrPrtry);
    CDMBalanceSubType1Choice_To_BalanceSubType1Choice(CDMBalanceType12Elm.SubType, BalanceType12Elm.SubTp);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBalanceType5Choice_To_BalanceType5Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBalanceType5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.CodeOrProprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.CodeOrProprietary</description>
					</parameterfield>
					<parameterfield>
						<name>BalanceType5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.CdOrPrtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.CdOrPrtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBalanceType5ChoiceElm in CDMBalanceType5Choice) {
    def BalanceType5ChoiceElm = BalanceType5Choice.secAddElement();
    BalanceType5ChoiceElm.Cd = CDMBalanceType5ChoiceElm.Code;
    BalanceType5ChoiceElm.Prtry = CDMBalanceType5ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBankTransactionCodeStructure4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode</description>
					</parameterfield>
					<parameterfield>
						<name>BankTransactionCodeStructure4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBankTransactionCodeStructure4Elm in CDMBankTransactionCodeStructure4) {
    def BankTransactionCodeStructure4Elm = BankTransactionCodeStructure4.secAddElement();
    CDMBankTransactionCodeStructure5_To_BankTransactionCodeStructure5(CDMBankTransactionCodeStructure4Elm.Domain, BankTransactionCodeStructure4Elm.Domn);
    CDMProprietaryBankTransactionCodeStructure1_To_ProprietaryBankTransactionCodeStructure1(CDMBankTransactionCodeStructure4Elm.Proprietary, BankTransactionCodeStructure4Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBankTransactionCodeStructure5_To_BankTransactionCodeStructure5" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBankTransactionCodeStructure5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain</description>
					</parameterfield>
					<parameterfield>
						<name>BankTransactionCodeStructure5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBankTransactionCodeStructure5Elm in CDMBankTransactionCodeStructure5) {
    def BankTransactionCodeStructure5Elm = BankTransactionCodeStructure5.secAddElement();
    BankTransactionCodeStructure5Elm.Cd = CDMBankTransactionCodeStructure5Elm.Code;
    CDMBankTransactionCodeStructure6_To_BankTransactionCodeStructure6(CDMBankTransactionCodeStructure5Elm.Family, BankTransactionCodeStructure5Elm.Fmly);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBankTransactionCodeStructure6_To_BankTransactionCodeStructure6" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBankTransactionCodeStructure6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain.Family</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain.Family</description>
					</parameterfield>
					<parameterfield>
						<name>BankTransactionCodeStructure6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn.Fmly</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn.Fmly</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBankTransactionCodeStructure6Elm in CDMBankTransactionCodeStructure6) {
    def BankTransactionCodeStructure6Elm = BankTransactionCodeStructure6.secAddElement();
    BankTransactionCodeStructure6Elm.Cd = CDMBankTransactionCodeStructure6Elm.Code;
    BankTransactionCodeStructure6Elm.SubFmlyCd = CDMBankTransactionCodeStructure6Elm.SubFamilyCode;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBatchInformation2_To_BatchInformation2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBatchInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.Batch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.Batch</description>
					</parameterfield>
					<parameterfield>
						<name>BatchInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.Btch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.Btch</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBatchInformation2Elm in CDMBatchInformation2) {
    def BatchInformation2Elm = BatchInformation2.secAddElement();
    BatchInformation2Elm.MsgId = CDMBatchInformation2Elm.MessageIdentification;
    BatchInformation2Elm.PmtInfId = CDMBatchInformation2Elm.PaymentInformationIdentification;
    BatchInformation2Elm.NbOfTxs = CDMBatchInformation2Elm.NumberOfTransactions;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMBatchInformation2Elm.TotalAmount, BatchInformation2Elm.TtlAmt);
    BatchInformation2Elm.CdtDbtInd = CDMBatchInformation2Elm.CreditDebitIndicator;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent</description>
					</parameterfield>
					<parameterfield>
						<name>BranchAndFinancialInstitutionIdentification4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBranchAndFinancialInstitutionIdentification5Elm in CDMBranchAndFinancialInstitutionIdentification5) {
    def BranchAndFinancialInstitutionIdentification4Elm = BranchAndFinancialInstitutionIdentification4.secAddElement();
    CDMFinancialInstitutionIdentification8_To_FinancialInstitutionIdentification7(CDMBranchAndFinancialInstitutionIdentification5Elm.FinancialInstitutionIdentification, BranchAndFinancialInstitutionIdentification4Elm.FinInstnId);
    CDMBranchData2_To_BranchData2(CDMBranchAndFinancialInstitutionIdentification5Elm.BranchIdentification, BranchAndFinancialInstitutionIdentification4Elm.BrnchId);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer</description>
					</parameterfield>
					<parameterfield>
						<name>BranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBranchAndFinancialInstitutionIdentification5Elm in CDMBranchAndFinancialInstitutionIdentification5) {
    def BranchAndFinancialInstitutionIdentification5Elm = BranchAndFinancialInstitutionIdentification5.secAddElement();
    CDMFinancialInstitutionIdentification8_To_FinancialInstitutionIdentification8(CDMBranchAndFinancialInstitutionIdentification5Elm.FinancialInstitutionIdentification, BranchAndFinancialInstitutionIdentification5Elm.FinInstnId);
    CDMBranchData2_To_BranchData2(CDMBranchAndFinancialInstitutionIdentification5Elm.BranchIdentification, BranchAndFinancialInstitutionIdentification5Elm.BrnchId);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBranchData2_To_BranchData2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBranchData2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.BranchIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.BranchIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>BranchData2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.BrnchId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.BrnchId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBranchData2Elm in CDMBranchData2) {
    def BranchData2Elm = BranchData2.secAddElement();
    BranchData2Elm.Id = CDMBranchData2Elm.Identification;
    BranchData2Elm.Nm = CDMBranchData2Elm.Name;
    CDMPostalAddress6_To_PostalAddress6(CDMBranchData2Elm.PostalAddress, BranchData2Elm.PstlAdr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardAggregated1_To_CardAggregated1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardAggregated1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry</description>
					</parameterfield>
					<parameterfield>
						<name>CardAggregated1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardAggregated1Elm in CDMCardAggregated1) {
    def CardAggregated1Elm = CardAggregated1.secAddElement();
    CardAggregated1Elm.AddtlSvc = CDMCardAggregated1Elm.AdditionalService;
    CardAggregated1Elm.TxCtgy = CDMCardAggregated1Elm.TransactionCategory;
    CardAggregated1Elm.SaleRcncltnId = CDMCardAggregated1Elm.SaleReconciliationIdentification;
    CDMCardSequenceNumberRange1_To_CardSequenceNumberRange1(CDMCardAggregated1Elm.SequenceNumberRange, CardAggregated1Elm.SeqNbRg);
    CDMDateOrDateTimePeriodChoice_To_DateOrDateTimePeriodChoice(CDMCardAggregated1Elm.TransactionDateRange, CardAggregated1Elm.TxDtRg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardDataReading1Code_To_CardDataReading1Code" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardDataReading1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilities</description>
					</parameterfield>
					<parameterfield>
						<name>CardDataReading1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardDataReading1CodeElm in CDMCardDataReading1Code) {
    def CardDataReading1CodeElm = CardDataReading1Code.secAddElement();
    CardDataReading1CodeElm.Value = CDMCardDataReading1CodeElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardEntry1_To_CardEntry1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardEntry1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction</description>
					</parameterfield>
					<parameterfield>
						<name>CardEntry1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardEntry1Elm in CDMCardEntry1) {
    def CardEntry1Elm = CardEntry1.secAddElement();
    CDMPaymentCard4_To_PaymentCard4(CDMCardEntry1Elm.Card, CardEntry1Elm.Card);
    CDMPointOfInteraction1_To_PointOfInteraction1(CDMCardEntry1Elm.POI, CardEntry1Elm.POI);
    CDMCardAggregated1_To_CardAggregated1(CDMCardEntry1Elm.AggregatedEntry, CardEntry1Elm.AggtdNtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardholderVerificationCapability1Code_To_CardholderVerificationCapability1Code" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardholderVerificationCapability1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilities</description>
					</parameterfield>
					<parameterfield>
						<name>CardholderVerificationCapability1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardholderVerificationCapability1CodeElm in CDMCardholderVerificationCapability1Code) {
    def CardholderVerificationCapability1CodeElm = CardholderVerificationCapability1Code.secAddElement();
    CardholderVerificationCapability1CodeElm.Value = CDMCardholderVerificationCapability1CodeElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardIndividualTransaction1_To_CardIndividualTransaction1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardIndividualTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</description>
					</parameterfield>
					<parameterfield>
						<name>CardIndividualTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardIndividualTransaction1Elm in CDMCardIndividualTransaction1) {
    def CardIndividualTransaction1Elm = CardIndividualTransaction1.secAddElement();
    CardIndividualTransaction1Elm.AddtlSvc = CDMCardIndividualTransaction1Elm.AdditionalService;
    CardIndividualTransaction1Elm.TxCtgy = CDMCardIndividualTransaction1Elm.TransactionCategory;
    CardIndividualTransaction1Elm.SaleRcncltnId = CDMCardIndividualTransaction1Elm.SaleReconciliationIdentification;
    CardIndividualTransaction1Elm.SaleRefNb = CDMCardIndividualTransaction1Elm.SaleReferenceNumber;
    CardIndividualTransaction1Elm.SeqNb = CDMCardIndividualTransaction1Elm.SequenceNumber;
    CDMTransactionIdentifier1_To_TransactionIdentifier1(CDMCardIndividualTransaction1Elm.TransactionIdentification, CardIndividualTransaction1Elm.TxId);
    CDMProduct2_To_Product2(CDMCardIndividualTransaction1Elm.Product, CardIndividualTransaction1Elm.Pdct);
    CardIndividualTransaction1Elm.VldtnDt = CDMCardIndividualTransaction1Elm.ValidationDate;
    CardIndividualTransaction1Elm.VldtnSeqNb = CDMCardIndividualTransaction1Elm.ValidationSequenceNumber;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardSecurityInformation1_To_CardSecurityInformation1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardSecurityInformation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</description>
					</parameterfield>
					<parameterfield>
						<name>CardSecurityInformation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardSecurityInformation1Elm in CDMCardSecurityInformation1) {
    def CardSecurityInformation1Elm = CardSecurityInformation1.secAddElement();
    CardSecurityInformation1Elm.CSCMgmt = CDMCardSecurityInformation1Elm.CSCManagement;
    CardSecurityInformation1Elm.CSCVal = CDMCardSecurityInformation1Elm.CSCValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardSequenceNumberRange1_To_CardSequenceNumberRange1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardSequenceNumberRange1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</description>
					</parameterfield>
					<parameterfield>
						<name>CardSequenceNumberRange1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.SeqNbRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.SeqNbRg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardSequenceNumberRange1Elm in CDMCardSequenceNumberRange1) {
    def CardSequenceNumberRange1Elm = CardSequenceNumberRange1.secAddElement();
    CardSequenceNumberRange1Elm.FrstTx = CDMCardSequenceNumberRange1Elm.FirstTransaction;
    CardSequenceNumberRange1Elm.LastTx = CDMCardSequenceNumberRange1Elm.LastTransaction;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardTransaction1_To_CardTransaction1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction</description>
					</parameterfield>
					<parameterfield>
						<name>CardTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardTransaction1Elm in CDMCardTransaction1) {
    def CardTransaction1Elm = CardTransaction1.secAddElement();
    CDMPaymentCard4_To_PaymentCard4(CDMCardTransaction1Elm.Card, CardTransaction1Elm.Card);
    CDMPointOfInteraction1_To_PointOfInteraction1(CDMCardTransaction1Elm.POI, CardTransaction1Elm.POI);
    CDMCardTransaction1Choice_To_CardTransaction1Choice(CDMCardTransaction1Elm.Transaction, CardTransaction1Elm.Tx);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardTransaction1Choice_To_CardTransaction1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardTransaction1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction</description>
					</parameterfield>
					<parameterfield>
						<name>CardTransaction1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardTransaction1ChoiceElm in CDMCardTransaction1Choice) {
    def CardTransaction1ChoiceElm = CardTransaction1Choice.secAddElement();
    CDMCardAggregated1_To_CardAggregated1(CDMCardTransaction1ChoiceElm.Aggtd, CardTransaction1ChoiceElm.Aggtd);
    CDMCardIndividualTransaction1_To_CardIndividualTransaction1(CDMCardTransaction1ChoiceElm.Individual, CardTransaction1ChoiceElm.Indv);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccount24_To_CashAccount16" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount16</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccount24Elm in CDMCashAccount24) {
    def CashAccount16Elm = CashAccount16.secAddElement();
    CDMAccountIdentification4Choice_To_AccountIdentification4Choice(CDMCashAccount24Elm.Identification, CashAccount16Elm.Id);
    CDMCashAccountType2Choice_To_CashAccountType2(CDMCashAccount24Elm.Type, CashAccount16Elm.Tp);
    CashAccount16Elm.Ccy = CDMCashAccount24Elm.Currency;
    CashAccount16Elm.Nm = CDMCashAccount24Elm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccount24_To_CashAccount24" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.RelatedAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.RelatedAccount</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RltdAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RltdAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccount24Elm in CDMCashAccount24) {
    def CashAccount24Elm = CashAccount24.secAddElement();
    CDMAccountIdentification4Choice_To_AccountIdentification4Choice(CDMCashAccount24Elm.Identification, CashAccount24Elm.Id);
    CDMCashAccountType2Choice_To_CashAccountType2Choice(CDMCashAccount24Elm.Type, CashAccount24Elm.Tp);
    CashAccount24Elm.Ccy = CDMCashAccount24Elm.Currency;
    CashAccount24Elm.Nm = CDMCashAccount24Elm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccount25_To_CashAccount20" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Acct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Acct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccount25Elm in CDMCashAccount25) {
    def CashAccount20Elm = CashAccount20.secAddElement();
    CDMAccountIdentification4Choice_To_AccountIdentification4Choice(CDMCashAccount25Elm.Identification, CashAccount20Elm.Id);
    CDMCashAccountType2Choice_To_CashAccountType2(CDMCashAccount25Elm.Type, CashAccount20Elm.Tp);
    CashAccount20Elm.Ccy = CDMCashAccount25Elm.Currency;
    CashAccount20Elm.Nm = CDMCashAccount25Elm.Name;
    CDMPartyIdentification43_To_PartyIdentification32(CDMCashAccount25Elm.Owner, CashAccount20Elm.Ownr);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMCashAccount25Elm.Servicer, CashAccount20Elm.Svcr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccount25_To_CashAccount25" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccount25Elm in CDMCashAccount25) {
    def CashAccount25Elm = CashAccount25.secAddElement();
    CDMAccountIdentification4Choice_To_AccountIdentification4Choice(CDMCashAccount25Elm.Identification, CashAccount25Elm.Id);
    CDMCashAccountType2Choice_To_CashAccountType2Choice(CDMCashAccount25Elm.Type, CashAccount25Elm.Tp);
    CashAccount25Elm.Ccy = CDMCashAccount25Elm.Currency;
    CashAccount25Elm.Nm = CDMCashAccount25Elm.Name;
    CDMPartyIdentification43_To_PartyIdentification43(CDMCashAccount25Elm.Owner, CashAccount25Elm.Ownr);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMCashAccount25Elm.Servicer, CashAccount25Elm.Svcr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccountType2Choice_To_CashAccountType2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Type</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccountType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccountType2ChoiceElm in CDMCashAccountType2Choice) {
    def CashAccountType2Elm = CashAccountType2.secAddElement();
    CashAccountType2Elm.Cd = CDMCashAccountType2ChoiceElm.Code;
    CashAccountType2Elm.Prtry = CDMCashAccountType2ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccountType2Choice_To_CashAccountType2Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Type</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccountType2ChoiceElm in CDMCashAccountType2Choice) {
    def CashAccountType2ChoiceElm = CashAccountType2Choice.secAddElement();
    CashAccountType2ChoiceElm.Cd = CDMCashAccountType2ChoiceElm.Code;
    CashAccountType2ChoiceElm.Prtry = CDMCashAccountType2ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashBalance3_To_CashBalance3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashBalance3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance</description>
					</parameterfield>
					<parameterfield>
						<name>CashBalance3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashBalance3Elm in CDMCashBalance3) {
    def CashBalance3Elm = CashBalance3.secAddElement();
    CDMBalanceType12_To_BalanceType12(CDMCashBalance3Elm.Type, CashBalance3Elm.Tp);
    CDMCreditLine2_To_CreditLine2(CDMCashBalance3Elm.CreditLine, CashBalance3Elm.CdtLine);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMCashBalance3Elm.Amount, CashBalance3Elm.Amt);
    CashBalance3Elm.CdtDbtInd = CDMCashBalance3Elm.CreditDebitIndicator;
    CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice(CDMCashBalance3Elm.Date, CashBalance3Elm.Dt);
    CDMCashBalanceAvailability2_To_CashBalanceAvailability2(CDMCashBalance3Elm.Availability, CashBalance3Elm.Avlbty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashBalanceAvailability2_To_CashBalanceAvailability2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashBalanceAvailability2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability</description>
					</parameterfield>
					<parameterfield>
						<name>CashBalanceAvailability2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashBalanceAvailability2Elm in CDMCashBalanceAvailability2) {
    def CashBalanceAvailability2Elm = CashBalanceAvailability2.secAddElement();
    CDMCashBalanceAvailabilityDate1_To_CashBalanceAvailabilityDate1(CDMCashBalanceAvailability2Elm.Date, CashBalanceAvailability2Elm.Dt);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMCashBalanceAvailability2Elm.Amount, CashBalanceAvailability2Elm.Amt);
    CashBalanceAvailability2Elm.CdtDbtInd = CDMCashBalanceAvailability2Elm.CreditDebitIndicator;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashBalanceAvailabilityDate1_To_CashBalanceAvailabilityDate1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashBalanceAvailabilityDate1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability.Date</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability.Date</description>
					</parameterfield>
					<parameterfield>
						<name>CashBalanceAvailabilityDate1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty.Dt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty.Dt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashBalanceAvailabilityDate1Elm in CDMCashBalanceAvailabilityDate1) {
    def CashBalanceAvailabilityDate1Elm = CashBalanceAvailabilityDate1.secAddElement();
    if (CDMCashBalanceAvailabilityDate1Elm.NbOfDays.IsNotNull())
        CashBalanceAvailabilityDate1Elm.NbOfDays = toText(CDMCashBalanceAvailabilityDate1Elm.NbOfDays);
    CashBalanceAvailabilityDate1Elm.ActlDt = CDMCashBalanceAvailabilityDate1Elm.ActlDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashDeposit1_To_CashDeposit1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashDeposit1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit</description>
					</parameterfield>
					<parameterfield>
						<name>CashDeposit1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashDeposit1Elm in CDMCashDeposit1) {
    def CashDeposit1Elm = CashDeposit1.secAddElement();
    CDMActiveCurrencyAndAmount_To_ActiveCurrencyAndAmount(CDMCashDeposit1Elm.NoteDenomination, CashDeposit1Elm.NoteDnmtn);
    CashDeposit1Elm.NbOfNotes = CDMCashDeposit1Elm.NumberOfNotes;
    CDMActiveCurrencyAndAmount_To_ActiveCurrencyAndAmount(CDMCashDeposit1Elm.Amount, CashDeposit1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCategoryPurpose1Choice_To_CategoryPurpose1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCategoryPurpose1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.CategoryPurpose</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.CategoryPurpose</description>
					</parameterfield>
					<parameterfield>
						<name>CategoryPurpose1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.CtgyPurp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.CtgyPurp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCategoryPurpose1ChoiceElm in CDMCategoryPurpose1Choice) {
    def CategoryPurpose1ChoiceElm = CategoryPurpose1Choice.secAddElement();
    CategoryPurpose1ChoiceElm.Cd = CDMCategoryPurpose1ChoiceElm.Code;
    CategoryPurpose1ChoiceElm.Prtry = CDMCategoryPurpose1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCharges3_To_Charges3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCharges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</description>
					</parameterfield>
					<parameterfield>
						<name>Charges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCharges3Elm in CDMCharges3) {
    def Charges3Elm = Charges3.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMCharges3Elm.TotalChargesAndTaxAmount, Charges3Elm.TtlChrgsAndTaxAmt);
    CDMChargesRecord1_To_ChargesRecord1(CDMCharges3Elm.Record, Charges3Elm.Rcrd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCharges3_To_ChargesInformation6" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCharges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</description>
					</parameterfield>
					<parameterfield>
						<name>ChargesInformation6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCharges3Elm in CDMCharges3) {
    def ChargesInformation6Elm = ChargesInformation6.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMCharges3Elm.TotalChargesAndTaxAmount, ChargesInformation6Elm.TtlChrgsAndTaxAmt);
    if(CDMCharges3Elm.Record.$size > 0){
	CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMCharges3Elm.Record[0].Amount, ChargesInformation6Elm.Amt);
	ChargesInformation6Elm.CdtDbtInd = CDMCharges3Elm.Record[0].CreditDebitIndicator;
	CDMChargeType3Choice_To_ChargeType2Choice(CDMCharges3Elm.Record[0].Type, ChargesInformation6Elm.Tp);
	ChargesInformation6Elm.Rate = CDMCharges3Elm.Record[0].Rate;
	ChargesInformation6Elm.Br = CDMCharges3Elm.Record[0].Bearer;
	CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMCharges3Elm.Record[0].Agent, ChargesInformation6Elm.Pty);
	CDMTaxCharges2_To_TaxCharges2(CDMCharges3Elm.Record[0].Tax, ChargesInformation6Elm.Tax);
}
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMChargesRecord1_To_ChargesRecord1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMChargesRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record</description>
					</parameterfield>
					<parameterfield>
						<name>ChargesRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMChargesRecord1Elm in CDMChargesRecord1) {
    def ChargesRecord1Elm = ChargesRecord1.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMChargesRecord1Elm.Amount, ChargesRecord1Elm.Amt);
    ChargesRecord1Elm.CdtDbtInd = CDMChargesRecord1Elm.CreditDebitIndicator;
    CDMChargeType3Choice_To_ChargeType3Choice(CDMChargesRecord1Elm.Type, ChargesRecord1Elm.Tp);
    ChargesRecord1Elm.Rate = CDMChargesRecord1Elm.Rate;
    ChargesRecord1Elm.Br = CDMChargesRecord1Elm.Bearer;
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMChargesRecord1Elm.Agent, ChargesRecord1Elm.Agt);
    CDMTaxCharges2_To_TaxCharges2(CDMChargesRecord1Elm.Tax, ChargesRecord1Elm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMChargeType3Choice_To_ChargeType2Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>ChargeType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMChargeType3ChoiceElm in CDMChargeType3Choice) {
    def ChargeType2ChoiceElm = ChargeType2Choice.secAddElement();
    ChargeType2ChoiceElm.Cd = CDMChargeType3ChoiceElm.Code;
    CDMGenericIdentification3_To_GenericIdentification3(CDMChargeType3ChoiceElm.Proprietary, ChargeType2ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMChargeType3Choice_To_ChargeType3Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type</description>
					</parameterfield>
					<parameterfield>
						<name>ChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMChargeType3ChoiceElm in CDMChargeType3Choice) {
    def ChargeType3ChoiceElm = ChargeType3Choice.secAddElement();
    ChargeType3ChoiceElm.Cd = CDMChargeType3ChoiceElm.Code;
    CDMGenericIdentification3_To_GenericIdentification3(CDMChargeType3ChoiceElm.Proprietary, ChargeType3ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMClearingSystemIdentification2Choice_To_ClearingSystemIdentification2Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMClearingSystemIdentification2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification.ClearingSystemIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification.ClearingSystemIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>ClearingSystemIdentification2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMClearingSystemIdentification2ChoiceElm in CDMClearingSystemIdentification2Choice) {
    def ClearingSystemIdentification2ChoiceElm = ClearingSystemIdentification2Choice.secAddElement();
    ClearingSystemIdentification2ChoiceElm.Cd = CDMClearingSystemIdentification2ChoiceElm.Code;
    ClearingSystemIdentification2ChoiceElm.Prtry = CDMClearingSystemIdentification2ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMClearingSystemIdentification3Choice_To_ClearingSystemIdentification3Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMClearingSystemIdentification3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentReversalV1.Data.OriginalPaymentInformationAndReversal.TransactionInformation.OriginalTransactionReference.SettlementInformation.ClearingSystem</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentReversalV1.Data.OriginalPaymentInformationAndReversal.TransactionInformation.OriginalTransactionReference.SettlementInformation.ClearingSystem</description>
					</parameterfield>
					<parameterfield>
						<name>ClearingSystemIdentification3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_CustomerPaymentReversalV03.Data.CstmrPmtRvsl.OrgnlPmtInfAndRvsl.TxInf.OrgnlTxRef.SttlmInf.ClrSys</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_CustomerPaymentReversalV03.Data.CstmrPmtRvsl.OrgnlPmtInfAndRvsl.TxInf.OrgnlTxRef.SttlmInf.ClrSys</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMClearingSystemIdentification3ChoiceElm in CDMClearingSystemIdentification3Choice) {
    def ClearingSystemIdentification3ChoiceElm = ClearingSystemIdentification3Choice.secAddElement();
    ClearingSystemIdentification3ChoiceElm.Cd = CDMClearingSystemIdentification3ChoiceElm.Code;
    ClearingSystemIdentification3ChoiceElm.Prtry = CDMClearingSystemIdentification3ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMClearingSystemMemberIdentification2_To_ClearingSystemMemberIdentification2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMClearingSystemMemberIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>ClearingSystemMemberIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMClearingSystemMemberIdentification2Elm in CDMClearingSystemMemberIdentification2) {
    def ClearingSystemMemberIdentification2Elm = ClearingSystemMemberIdentification2.secAddElement();
    CDMClearingSystemIdentification2Choice_To_ClearingSystemIdentification2Choice(CDMClearingSystemMemberIdentification2Elm.ClearingSystemIdentification, ClearingSystemMemberIdentification2Elm.ClrSysId);
    ClearingSystemMemberIdentification2Elm.MmbId = CDMClearingSystemMemberIdentification2Elm.MemberIdentification;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMContactDetails2_To_ContactDetails2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMContactDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.ContactDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.ContactDetails</description>
					</parameterfield>
					<parameterfield>
						<name>ContactDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.CtctDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.CtctDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMContactDetails2Elm in CDMContactDetails2) {
    def ContactDetails2Elm = ContactDetails2.secAddElement();
    ContactDetails2Elm.NmPrfx = CDMContactDetails2Elm.NamePrefix;
    ContactDetails2Elm.Nm = CDMContactDetails2Elm.Name;
    ContactDetails2Elm.PhneNb = CDMContactDetails2Elm.PhoneNumber;
    ContactDetails2Elm.MobNb = CDMContactDetails2Elm.MobileNumber;
    ContactDetails2Elm.FaxNb = CDMContactDetails2Elm.FaxNumber;
    ContactDetails2Elm.EmailAdr = CDMContactDetails2Elm.EmailAddress;
    ContactDetails2Elm.Othr = CDMContactDetails2Elm.Other;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCorporateAction9_To_CorporateAction1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</description>
					</parameterfield>
					<parameterfield>
						<name>CorporateAction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCorporateAction9Elm in CDMCorporateAction9) {
    def CorporateAction1Elm = CorporateAction1.secAddElement();
    //Todo - toVerify
    CorporateAction1Elm.Cd = CDMCorporateAction9Elm.EventType;
    CorporateAction1Elm.Nb = CDMCorporateAction9Elm.EventIdentification;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCorporateAction9_To_CorporateAction9" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</description>
					</parameterfield>
					<parameterfield>
						<name>CorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCorporateAction9Elm in CDMCorporateAction9) {
    def CorporateAction9Elm = CorporateAction9.secAddElement();
    CorporateAction9Elm.EvtTp = CDMCorporateAction9Elm.EventType;
    CorporateAction9Elm.EvtId = CDMCorporateAction9Elm.EventIdentification;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCreditLine2_To_CreditLine2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCreditLine2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.CreditLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.CreditLine</description>
					</parameterfield>
					<parameterfield>
						<name>CreditLine2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.CdtLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.CdtLine</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCreditLine2Elm in CDMCreditLine2) {
    def CreditLine2Elm = CreditLine2.secAddElement();
    CreditLine2Elm.Incl = CDMCreditLine2Elm.Included;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMCreditLine2Elm.Amount, CreditLine2Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCreditorReferenceInformation2_To_CreditorReferenceInformation2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCreditorReferenceInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation</description>
					</parameterfield>
					<parameterfield>
						<name>CreditorReferenceInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCreditorReferenceInformation2Elm in CDMCreditorReferenceInformation2) {
    def CreditorReferenceInformation2Elm = CreditorReferenceInformation2.secAddElement();
    CDMCreditorReferenceType2_To_CreditorReferenceType2(CDMCreditorReferenceInformation2Elm.Type, CreditorReferenceInformation2Elm.Tp);
    CreditorReferenceInformation2Elm.Ref = CDMCreditorReferenceInformation2Elm.Reference;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCreditorReferenceType1Choice_To_CreditorReferenceType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCreditorReferenceType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type.CodeOrProprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type.CodeOrProprietary</description>
					</parameterfield>
					<parameterfield>
						<name>CreditorReferenceType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp.CdOrPrtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp.CdOrPrtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCreditorReferenceType1ChoiceElm in CDMCreditorReferenceType1Choice) {
    def CreditorReferenceType1ChoiceElm = CreditorReferenceType1Choice.secAddElement();
    CreditorReferenceType1ChoiceElm.Cd = CDMCreditorReferenceType1ChoiceElm.Code;
    CreditorReferenceType1ChoiceElm.Prtry = CDMCreditorReferenceType1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCreditorReferenceType2_To_CreditorReferenceType2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCreditorReferenceType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type</description>
					</parameterfield>
					<parameterfield>
						<name>CreditorReferenceType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCreditorReferenceType2Elm in CDMCreditorReferenceType2) {
    def CreditorReferenceType2Elm = CreditorReferenceType2.secAddElement();
    CDMCreditorReferenceType1Choice_To_CreditorReferenceType1Choice(CDMCreditorReferenceType2Elm.CodeOrProprietary, CreditorReferenceType2Elm.CdOrPrtry);
    CreditorReferenceType2Elm.Issr = CDMCreditorReferenceType2Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCurrencyAndAmountRange2_To_CurrencyAndAmountRange2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCurrencyAndAmountRange2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange</description>
					</parameterfield>
					<parameterfield>
						<name>CurrencyAndAmountRange2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCurrencyAndAmountRange2Elm in CDMCurrencyAndAmountRange2) {
    def CurrencyAndAmountRange2Elm = CurrencyAndAmountRange2.secAddElement();
    CDMImpliedCurrencyAmountRangeChoice_To_ImpliedCurrencyAmountRangeChoice(CDMCurrencyAndAmountRange2Elm.Amount, CurrencyAndAmountRange2Elm.Amt);
    CurrencyAndAmountRange2Elm.CdtDbtInd = CDMCurrencyAndAmountRange2Elm.CreditDebitIndicator;
    CurrencyAndAmountRange2Elm.Ccy = CDMCurrencyAndAmountRange2Elm.Currency;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCurrencyExchange5_To_CurrencyExchange5" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCurrencyExchange5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount.CurrencyExchange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount.CurrencyExchange</description>
					</parameterfield>
					<parameterfield>
						<name>CurrencyExchange5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt.CcyXchg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt.CcyXchg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCurrencyExchange5Elm in CDMCurrencyExchange5) {
    def CurrencyExchange5Elm = CurrencyExchange5.secAddElement();
    CurrencyExchange5Elm.SrcCcy = CDMCurrencyExchange5Elm.SourceCurrency;
    CurrencyExchange5Elm.TrgtCcy = CDMCurrencyExchange5Elm.TargetCurrency;
    CurrencyExchange5Elm.UnitCcy = CDMCurrencyExchange5Elm.UnitCurrency;
    CurrencyExchange5Elm.XchgRate = CDMCurrencyExchange5Elm.ExchangeRate;
    CurrencyExchange5Elm.CtrctId = CDMCurrencyExchange5Elm.ContractIdentification;
    CurrencyExchange5Elm.QtnDt = CDMCurrencyExchange5Elm.QuotationDate;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDateAndDateTimeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Date</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Date</description>
					</parameterfield>
					<parameterfield>
						<name>DateAndDateTimeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Dt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Dt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDateAndDateTimeChoiceElm in CDMDateAndDateTimeChoice) {
    def DateAndDateTimeChoiceElm = DateAndDateTimeChoice.secAddElement();
    DateAndDateTimeChoiceElm.Dt = CDMDateAndDateTimeChoiceElm.Date;
    DateAndDateTimeChoiceElm.DtTm = CDMDateAndDateTimeChoiceElm.DateTime;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDateAndPlaceOfBirth_To_DateAndPlaceOfBirth" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDateAndPlaceOfBirth</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.DateAndPlaceOfBirth</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.DateAndPlaceOfBirth</description>
					</parameterfield>
					<parameterfield>
						<name>DateAndPlaceOfBirth</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.DtAndPlcOfBirth</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.DtAndPlcOfBirth</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDateAndPlaceOfBirthElm in CDMDateAndPlaceOfBirth) {
    def DateAndPlaceOfBirthElm = DateAndPlaceOfBirth.secAddElement();
    DateAndPlaceOfBirthElm.BirthDt = CDMDateAndPlaceOfBirthElm.BirthDate;
    DateAndPlaceOfBirthElm.PrvcOfBirth = CDMDateAndPlaceOfBirthElm.ProvinceOfBirth;
    DateAndPlaceOfBirthElm.CityOfBirth = CDMDateAndPlaceOfBirthElm.CityOfBirth;
    DateAndPlaceOfBirthElm.CtryOfBirth = CDMDateAndPlaceOfBirthElm.CountryOfBirth;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDateOrDateTimePeriodChoice_To_DateOrDateTimePeriodChoice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDateOrDateTimePeriodChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.TransactionDateRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.TransactionDateRange</description>
					</parameterfield>
					<parameterfield>
						<name>DateOrDateTimePeriodChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.TxDtRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.TxDtRg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDateOrDateTimePeriodChoiceElm in CDMDateOrDateTimePeriodChoice) {
    def DateOrDateTimePeriodChoiceElm = DateOrDateTimePeriodChoice.secAddElement();
    CDMDatePeriodDetails_To_DatePeriodDetails(CDMDateOrDateTimePeriodChoiceElm.Date, DateOrDateTimePeriodChoiceElm.Dt);
    CDMDateTimePeriodDetails_To_DateTimePeriodDetails(CDMDateOrDateTimePeriodChoiceElm.DateTime, DateOrDateTimePeriodChoiceElm.DtTm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDatePeriodDetails_To_DatePeriodDetails" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDatePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period.FromToDate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period.FromToDate</description>
					</parameterfield>
					<parameterfield>
						<name>DatePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd.FrToDt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd.FrToDt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDatePeriodDetailsElm in CDMDatePeriodDetails) {
    def DatePeriodDetailsElm = DatePeriodDetails.secAddElement();
    DatePeriodDetailsElm.FrDt = CDMDatePeriodDetailsElm.FromDate;
    DatePeriodDetailsElm.ToDt = CDMDatePeriodDetailsElm.ToDate;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDateTimePeriodDetails_To_DateTimePeriodDetails" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDateTimePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.FromToDate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.FromToDate</description>
					</parameterfield>
					<parameterfield>
						<name>DateTimePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.FrToDt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.FrToDt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDateTimePeriodDetailsElm in CDMDateTimePeriodDetails) {
    def DateTimePeriodDetailsElm = DateTimePeriodDetails.secAddElement();
    DateTimePeriodDetailsElm.FrDtTm = CDMDateTimePeriodDetailsElm.FromDateTime;
    DateTimePeriodDetailsElm.ToDtTm = CDMDateTimePeriodDetailsElm.ToDateTime;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDiscountAmountAndType1_To_ActiveOrHistoricCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDiscountAmountAndType1Elm in CDMDiscountAmountAndType1) {
    // TODO - toVerify
    AssignSrcElmToDestSec (CDMDiscountAmountAndType1Elm.Amount[0], ActiveOrHistoricCurrencyAndAmount, 
    			"CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount");
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDiscountAmountAndType1_To_DiscountAmountAndType1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</description>
					</parameterfield>
					<parameterfield>
						<name>DiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDiscountAmountAndType1Elm in CDMDiscountAmountAndType1) {
    def DiscountAmountAndType1Elm = DiscountAmountAndType1.secAddElement();
    CDMDiscountAmountType1Choice_To_DiscountAmountType1Choice(CDMDiscountAmountAndType1Elm.Type, DiscountAmountAndType1Elm.Tp);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMDiscountAmountAndType1Elm.Amount, DiscountAmountAndType1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDiscountAmountType1Choice_To_DiscountAmountType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDiscountAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.Type</description>
					</parameterfield>
					<parameterfield>
						<name>DiscountAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDiscountAmountType1ChoiceElm in CDMDiscountAmountType1Choice) {
    def DiscountAmountType1ChoiceElm = DiscountAmountType1Choice.secAddElement();
    DiscountAmountType1ChoiceElm.Cd = CDMDiscountAmountType1ChoiceElm.Code;
    DiscountAmountType1ChoiceElm.Prtry = CDMDiscountAmountType1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDisplayCapabilities1_To_DisplayCapabilities1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDisplayCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</description>
					</parameterfield>
					<parameterfield>
						<name>DisplayCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.DispCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.DispCpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDisplayCapabilities1Elm in CDMDisplayCapabilities1) {
    def DisplayCapabilities1Elm = DisplayCapabilities1.secAddElement();
    DisplayCapabilities1Elm.DispTp = CDMDisplayCapabilities1Elm.DisplayType;
    DisplayCapabilities1Elm.NbOfLines = CDMDisplayCapabilities1Elm.NumberOfLines;
    if (CDMDisplayCapabilities1Elm.LineWidth.IsNotNull())
    DisplayCapabilities1Elm.LineWidth = toText(CDMDisplayCapabilities1Elm.LineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDocumentAdjustment1_To_DocumentAdjustment1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDocumentAdjustment1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.AdjustmentAmountAndReason</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.AdjustmentAmountAndReason</description>
					</parameterfield>
					<parameterfield>
						<name>DocumentAdjustment1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.AdjstmntAmtAndRsn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.AdjstmntAmtAndRsn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDocumentAdjustment1Elm in CDMDocumentAdjustment1) {
    def DocumentAdjustment1Elm = DocumentAdjustment1.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMDocumentAdjustment1Elm.Amount, DocumentAdjustment1Elm.Amt);
    DocumentAdjustment1Elm.CdtDbtInd = CDMDocumentAdjustment1Elm.CreditDebitIndicator;
    DocumentAdjustment1Elm.Rsn = CDMDocumentAdjustment1Elm.Reason;
    DocumentAdjustment1Elm.AddtlInf = CDMDocumentAdjustment1Elm.AdditionalInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEntryDetails2_To_EntryDetails1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</description>
					</parameterfield>
					<parameterfield>
						<name>EntryDetails1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEntryDetails2Elm in CDMEntryDetails2) {
    def EntryDetails1Elm = EntryDetails1.secAddElement();
    CDMBatchInformation2_To_BatchInformation2(CDMEntryDetails2Elm.Batch, EntryDetails1Elm.Btch);
    CDMEntryTransaction3_To_EntryTransaction2(CDMEntryDetails2Elm.TransactionDetails, EntryDetails1Elm.TxDtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEntryDetails2_To_EntryDetails2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</description>
					</parameterfield>
					<parameterfield>
						<name>EntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEntryDetails2Elm in CDMEntryDetails2) {
    def EntryDetails2Elm = EntryDetails2.secAddElement();
    CDMBatchInformation2_To_BatchInformation2(CDMEntryDetails2Elm.Batch, EntryDetails2Elm.Btch);
    CDMEntryTransaction3_To_EntryTransaction3(CDMEntryDetails2Elm.TransactionDetails, EntryDetails2Elm.TxDtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEntryTransaction3_To_EntryTransaction2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</description>
					</parameterfield>
					<parameterfield>
						<name>EntryTransaction2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEntryTransaction3Elm in CDMEntryTransaction3) {
    def EntryTransaction2Elm = EntryTransaction2.secAddElement();
    CDMTransactionReferences3_To_TransactionReferences2(CDMEntryTransaction3Elm.References, EntryTransaction2Elm.Refs);
    CDMAmountAndCurrencyExchange3_To_AmountAndCurrencyExchange3(CDMEntryTransaction3Elm.AmountDetails, EntryTransaction2Elm.AmtDtls);
    CDMCashBalanceAvailability2_To_CashBalanceAvailability2(CDMEntryTransaction3Elm.Availability, EntryTransaction2Elm.Avlbty);
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMEntryTransaction3Elm.BankTransactionCode, EntryTransaction2Elm.BkTxCd);
    CDMCharges3_To_ChargesInformation6(CDMEntryTransaction3Elm.Charges, EntryTransaction2Elm.Chrgs);
    CDMTransactionInterest3_To_TransactionInterest2(CDMEntryTransaction3Elm.Interest, EntryTransaction2Elm.Intrst);
    CDMTransactionParties3_To_TransactionParty2(CDMEntryTransaction3Elm.RelatedParties, EntryTransaction2Elm.RltdPties);
    CDMTransactionAgents3_To_TransactionAgents2(CDMEntryTransaction3Elm.RelatedAgents, EntryTransaction2Elm.RltdAgts);
    CDMPurpose2Choice_To_Purpose2Choice(CDMEntryTransaction3Elm.Purpose, EntryTransaction2Elm.Purp);
    CDMRemittanceLocation2_To_RemittanceLocation2(CDMEntryTransaction3Elm.RelatedRemittanceInformation, EntryTransaction2Elm.RltdRmtInf);
    CDMRemittanceInformation7_To_RemittanceInformation5(CDMEntryTransaction3Elm.RemittanceInformation, EntryTransaction2Elm.RmtInf);
    CDMTransactionDates2_To_TransactionDates2(CDMEntryTransaction3Elm.RelatedDates, EntryTransaction2Elm.RltdDts);
    CDMTransactionPrice3Choice_To_TransactionPrice2Choice(CDMEntryTransaction3Elm.RelatedPrice, EntryTransaction2Elm.RltdPric);
    CDMTransactionQuantities2Choice_To_TransactionQuantities1Choice(CDMEntryTransaction3Elm.RelatedQuantities, EntryTransaction2Elm.RltdQties);
    CDMSecurityIdentification14_To_SecurityIdentification4Choice(CDMEntryTransaction3Elm.FinancialInstrumentIdentification, EntryTransaction2Elm.FinInstrmId);
    CDMTaxInformation3_To_TaxInformation3(CDMEntryTransaction3Elm.Tax, EntryTransaction2Elm.Tax);
    CDMPaymentReturnReason2_To_ReturnReasonInformation10(CDMEntryTransaction3Elm.ReturnInformation, EntryTransaction2Elm.RtrInf);
    CDMCorporateAction9_To_CorporateAction1(CDMEntryTransaction3Elm.CorporateAction, EntryTransaction2Elm.CorpActn);
    CDMSecuritiesAccount13_To_CashAccount16(CDMEntryTransaction3Elm.SafekeepingAccount, EntryTransaction2Elm.SfkpgAcct);
    EntryTransaction2Elm.AddtlTxInf = CDMEntryTransaction3Elm.AdditionalTransactionInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEntryTransaction3_To_EntryTransaction3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</description>
					</parameterfield>
					<parameterfield>
						<name>EntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEntryTransaction3Elm in CDMEntryTransaction3) {
    def EntryTransaction3Elm = EntryTransaction3.secAddElement();
    CDMTransactionReferences3_To_TransactionReferences3(CDMEntryTransaction3Elm.References, EntryTransaction3Elm.Refs);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMEntryTransaction3Elm.Amount, EntryTransaction3Elm.Amt);
    EntryTransaction3Elm.CdtDbtInd = CDMEntryTransaction3Elm.CreditDebitIndicator;
    CDMAmountAndCurrencyExchange3_To_AmountAndCurrencyExchange3(CDMEntryTransaction3Elm.AmountDetails, EntryTransaction3Elm.AmtDtls);
    CDMCashBalanceAvailability2_To_CashBalanceAvailability2(CDMEntryTransaction3Elm.Availability, EntryTransaction3Elm.Avlbty);
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMEntryTransaction3Elm.BankTransactionCode, EntryTransaction3Elm.BkTxCd);
    CDMCharges3_To_Charges3(CDMEntryTransaction3Elm.Charges, EntryTransaction3Elm.Chrgs);
    CDMTransactionInterest3_To_TransactionInterest3(CDMEntryTransaction3Elm.Interest, EntryTransaction3Elm.Intrst);
    CDMTransactionParties3_To_TransactionParties3(CDMEntryTransaction3Elm.RelatedParties, EntryTransaction3Elm.RltdPties);
    CDMTransactionAgents3_To_TransactionAgents3(CDMEntryTransaction3Elm.RelatedAgents, EntryTransaction3Elm.RltdAgts);
    CDMPurpose2Choice_To_Purpose2Choice(CDMEntryTransaction3Elm.Purpose, EntryTransaction3Elm.Purp);
    CDMRemittanceLocation2_To_RemittanceLocation2(CDMEntryTransaction3Elm.RelatedRemittanceInformation, EntryTransaction3Elm.RltdRmtInf);
    CDMRemittanceInformation7_To_RemittanceInformation7(CDMEntryTransaction3Elm.RemittanceInformation, EntryTransaction3Elm.RmtInf);
    CDMTransactionDates2_To_TransactionDates2(CDMEntryTransaction3Elm.RelatedDates, EntryTransaction3Elm.RltdDts);
    CDMTransactionPrice3Choice_To_TransactionPrice3Choice(CDMEntryTransaction3Elm.RelatedPrice, EntryTransaction3Elm.RltdPric);
    CDMTransactionQuantities2Choice_To_TransactionQuantities2Choice(CDMEntryTransaction3Elm.RelatedQuantities, EntryTransaction3Elm.RltdQties);
    CDMSecurityIdentification14_To_SecurityIdentification14(CDMEntryTransaction3Elm.FinancialInstrumentIdentification, EntryTransaction3Elm.FinInstrmId);
    CDMTaxInformation3_To_TaxInformation3(CDMEntryTransaction3Elm.Tax, EntryTransaction3Elm.Tax);
    CDMPaymentReturnReason2_To_PaymentReturnReason2(CDMEntryTransaction3Elm.ReturnInformation, EntryTransaction3Elm.RtrInf);
    CDMCorporateAction9_To_CorporateAction9(CDMEntryTransaction3Elm.CorporateAction, EntryTransaction3Elm.CorpActn);
    CDMSecuritiesAccount13_To_SecuritiesAccount13(CDMEntryTransaction3Elm.SafekeepingAccount, EntryTransaction3Elm.SfkpgAcct);
    CDMCashDeposit1_To_CashDeposit1(CDMEntryTransaction3Elm.CashDeposit, EntryTransaction3Elm.CshDpst);
    CDMCardTransaction1_To_CardTransaction1(CDMEntryTransaction3Elm.CardTransaction, EntryTransaction3Elm.CardTx);
    EntryTransaction3Elm.AddtlTxInf = CDMEntryTransaction3Elm.AdditionalTransactionInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEquivalentAmount2_To_EquivalentAmount2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEquivalentAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount.EqvtAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount.EqvtAmt</description>
					</parameterfield>
					<parameterfield>
						<name>EquivalentAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt.EqvtAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt.EqvtAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEquivalentAmount2Elm in CDMEquivalentAmount2) {
    def EquivalentAmount2Elm = EquivalentAmount2.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMEquivalentAmount2Elm.Amount, EquivalentAmount2Elm.Amt);
    EquivalentAmount2Elm.CcyOfTrf = CDMEquivalentAmount2Elm.CurrencyOfTransfer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFinancialIdentificationSchemeName1Choice_To_FinancialIdentificationSchemeName1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFinancialIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other.SchemeName</description>
					</parameterfield>
					<parameterfield>
						<name>FinancialIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFinancialIdentificationSchemeName1ChoiceElm in CDMFinancialIdentificationSchemeName1Choice) {
    def FinancialIdentificationSchemeName1ChoiceElm = FinancialIdentificationSchemeName1Choice.secAddElement();
    FinancialIdentificationSchemeName1ChoiceElm.Cd = CDMFinancialIdentificationSchemeName1ChoiceElm.Code;
    FinancialIdentificationSchemeName1ChoiceElm.Prtry = CDMFinancialIdentificationSchemeName1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFinancialInstitutionIdentification8_To_FinancialInstitutionIdentification7" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>FinancialInstitutionIdentification7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFinancialInstitutionIdentification8Elm in CDMFinancialInstitutionIdentification8) {
    def FinancialInstitutionIdentification7Elm = FinancialInstitutionIdentification7.secAddElement();
    FinancialInstitutionIdentification7Elm.BIC = CDMFinancialInstitutionIdentification8Elm.BICFI;
    CDMClearingSystemMemberIdentification2_To_ClearingSystemMemberIdentification2(CDMFinancialInstitutionIdentification8Elm.ClearingSystemMemberIdentification, FinancialInstitutionIdentification7Elm.ClrSysMmbId);
    FinancialInstitutionIdentification7Elm.Nm = CDMFinancialInstitutionIdentification8Elm.Name;
    CDMPostalAddress6_To_PostalAddress6(CDMFinancialInstitutionIdentification8Elm.PostalAddress, FinancialInstitutionIdentification7Elm.PstlAdr);
    CDMGenericFinancialIdentification1_To_GenericFinancialIdentification1(CDMFinancialInstitutionIdentification8Elm.Other, FinancialInstitutionIdentification7Elm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFinancialInstitutionIdentification8_To_FinancialInstitutionIdentification8" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer.FinancialInstitutionIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer.FinancialInstitutionIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>FinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr.FinInstnId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr.FinInstnId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFinancialInstitutionIdentification8Elm in CDMFinancialInstitutionIdentification8) {
    def FinancialInstitutionIdentification8Elm = FinancialInstitutionIdentification8.secAddElement();
    FinancialInstitutionIdentification8Elm.BICFI = CDMFinancialInstitutionIdentification8Elm.BICFI;
    CDMClearingSystemMemberIdentification2_To_ClearingSystemMemberIdentification2(CDMFinancialInstitutionIdentification8Elm.ClearingSystemMemberIdentification, FinancialInstitutionIdentification8Elm.ClrSysMmbId);
    FinancialInstitutionIdentification8Elm.Nm = CDMFinancialInstitutionIdentification8Elm.Name;
    CDMPostalAddress6_To_PostalAddress6(CDMFinancialInstitutionIdentification8Elm.PostalAddress, FinancialInstitutionIdentification8Elm.PstlAdr);
    CDMGenericFinancialIdentification1_To_GenericFinancialIdentification1(CDMFinancialInstitutionIdentification8Elm.Other, FinancialInstitutionIdentification8Elm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFinancialInstrumentQuantityChoice_To_FinancialInstrumentQuantityChoice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFinancialInstrumentQuantityChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Quantity</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Quantity</description>
					</parameterfield>
					<parameterfield>
						<name>FinancialInstrumentQuantityChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Qty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Qty</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFinancialInstrumentQuantityChoiceElm in CDMFinancialInstrumentQuantityChoice) {
    def FinancialInstrumentQuantityChoiceElm = FinancialInstrumentQuantityChoice.secAddElement();
    FinancialInstrumentQuantityChoiceElm.Unit = CDMFinancialInstrumentQuantityChoiceElm.Unit;
    FinancialInstrumentQuantityChoiceElm.FaceAmt = CDMFinancialInstrumentQuantityChoiceElm.FaceAmount;
    FinancialInstrumentQuantityChoiceElm.AmtsdVal = CDMFinancialInstrumentQuantityChoiceElm.AmortisedValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFromToAmountRange_To_FromToAmountRange" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFromToAmountRange</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromToAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromToAmount</description>
					</parameterfield>
					<parameterfield>
						<name>FromToAmountRange</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrToAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrToAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFromToAmountRangeElm in CDMFromToAmountRange) {
    def FromToAmountRangeElm = FromToAmountRange.secAddElement();
    CDMAmountRangeBoundary1_To_AmountRangeBoundary1(CDMFromToAmountRangeElm.FromAmount, FromToAmountRangeElm.FrAmt);
    CDMAmountRangeBoundary1_To_AmountRangeBoundary1(CDMFromToAmountRangeElm.ToAmount, FromToAmountRangeElm.ToAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericAccountIdentification1_To_GenericAccountIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericAccountIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other</description>
					</parameterfield>
					<parameterfield>
						<name>GenericAccountIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericAccountIdentification1Elm in CDMGenericAccountIdentification1) {
    def GenericAccountIdentification1Elm = GenericAccountIdentification1.secAddElement();
    GenericAccountIdentification1Elm.Id = CDMGenericAccountIdentification1Elm.Identification;
    CDMAccountSchemeName1Choice_To_AccountSchemeName1Choice(CDMGenericAccountIdentification1Elm.SchemeName, GenericAccountIdentification1Elm.SchmeNm);
    GenericAccountIdentification1Elm.Issr = CDMGenericAccountIdentification1Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericFinancialIdentification1_To_GenericFinancialIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericFinancialIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other</description>
					</parameterfield>
					<parameterfield>
						<name>GenericFinancialIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericFinancialIdentification1Elm in CDMGenericFinancialIdentification1) {
    def GenericFinancialIdentification1Elm = GenericFinancialIdentification1.secAddElement();
    GenericFinancialIdentification1Elm.Id = CDMGenericFinancialIdentification1Elm.Identification;
    CDMFinancialIdentificationSchemeName1Choice_To_FinancialIdentificationSchemeName1Choice(CDMGenericFinancialIdentification1Elm.SchemeName, GenericFinancialIdentification1Elm.SchmeNm);
    GenericFinancialIdentification1Elm.Issr = CDMGenericFinancialIdentification1Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericIdentification1_To_GenericIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.CardBrand</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.CardBrand</description>
					</parameterfield>
					<parameterfield>
						<name>GenericIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.CardBrnd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.CardBrnd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericIdentification1Elm in CDMGenericIdentification1) {
    def GenericIdentification1Elm = GenericIdentification1.secAddElement();
    GenericIdentification1Elm.Id = CDMGenericIdentification1Elm.Identification;
    GenericIdentification1Elm.SchmeNm = CDMGenericIdentification1Elm.SchemeName;
    GenericIdentification1Elm.Issr = CDMGenericIdentification1Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericIdentification20_To_CashAccountType2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericIdentification20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccountType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericIdentification20Elm in CDMGenericIdentification20) {
    def CashAccountType2Elm = CashAccountType2.secAddElement();
	//Todo - toVerify
    CashAccountType2Elm.Cd = CDMGenericIdentification20Elm.Identification;
    CashAccountType2Elm.Prtry = CDMGenericIdentification20Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericIdentification20_To_GenericIdentification20" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericIdentification20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</description>
					</parameterfield>
					<parameterfield>
						<name>GenericIdentification20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericIdentification20Elm in CDMGenericIdentification20) {
    def GenericIdentification20Elm = GenericIdentification20.secAddElement();
    GenericIdentification20Elm.Id = CDMGenericIdentification20Elm.Identification;
    GenericIdentification20Elm.Issr = CDMGenericIdentification20Elm.Issuer;
    GenericIdentification20Elm.SchmeNm = CDMGenericIdentification20Elm.SchemeName;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericIdentification32_To_GenericIdentification32" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Identification</description>
					</parameterfield>
					<parameterfield>
						<name>GenericIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Id</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericIdentification32Elm in CDMGenericIdentification32) {
    def GenericIdentification32Elm = GenericIdentification32.secAddElement();
    GenericIdentification32Elm.Id = CDMGenericIdentification32Elm.Identification;
    GenericIdentification32Elm.Tp = CDMGenericIdentification32Elm.Type;
    GenericIdentification32Elm.Issr = CDMGenericIdentification32Elm.Issuer;
    GenericIdentification32Elm.ShrtNm = CDMGenericIdentification32Elm.ShortName;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericIdentification3_To_GenericIdentification3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericIdentification3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>GenericIdentification3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericIdentification3Elm in CDMGenericIdentification3) {
    def GenericIdentification3Elm = GenericIdentification3.secAddElement();
    GenericIdentification3Elm.Id = CDMGenericIdentification3Elm.Identification;
    GenericIdentification3Elm.Issr = CDMGenericIdentification3Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericOrganisationIdentification1_To_GenericOrganisationIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericOrganisationIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other</description>
					</parameterfield>
					<parameterfield>
						<name>GenericOrganisationIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericOrganisationIdentification1Elm in CDMGenericOrganisationIdentification1) {
    def GenericOrganisationIdentification1Elm = GenericOrganisationIdentification1.secAddElement();
    GenericOrganisationIdentification1Elm.Id = CDMGenericOrganisationIdentification1Elm.Identification;
    CDMOrganisationIdentificationSchemeName1Choice_To_OrganisationIdentificationSchemeName1Choice(CDMGenericOrganisationIdentification1Elm.SchemeName, GenericOrganisationIdentification1Elm.SchmeNm);
    GenericOrganisationIdentification1Elm.Issr = CDMGenericOrganisationIdentification1Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericPersonIdentification1_To_GenericPersonIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericPersonIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other</description>
					</parameterfield>
					<parameterfield>
						<name>GenericPersonIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericPersonIdentification1Elm in CDMGenericPersonIdentification1) {
    def GenericPersonIdentification1Elm = GenericPersonIdentification1.secAddElement();
    GenericPersonIdentification1Elm.Id = CDMGenericPersonIdentification1Elm.Identification;
    CDMPersonIdentificationSchemeName1Choice_To_PersonIdentificationSchemeName1Choice(CDMGenericPersonIdentification1Elm.SchemeName, GenericPersonIdentification1Elm.SchmeNm);
    GenericPersonIdentification1Elm.Issr = CDMGenericPersonIdentification1Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGroupHeader58_To_GroupHeader42" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</description>
					</parameterfield>
					<parameterfield>
						<name>GroupHeader42</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.GrpHdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.GrpHdr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGroupHeader58Elm in CDMGroupHeader58) {
    def GroupHeader42Elm = GroupHeader42.secAddElement();
    GroupHeader42Elm.MsgId = CDMGroupHeader58Elm.MessageIdentification;
    GroupHeader42Elm.CreDtTm = CDMGroupHeader58Elm.CreationDateTime;
    CDMPartyIdentification43_To_PartyIdentification32(CDMGroupHeader58Elm.MessageRecipient, GroupHeader42Elm.MsgRcpt);
    CDMPagination_To_Pagination(CDMGroupHeader58Elm.MessagePagination, GroupHeader42Elm.MsgPgntn);
    GroupHeader42Elm.AddtlInf = CDMGroupHeader58Elm.AdditionalInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGroupHeader58_To_GroupHeader58" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</description>
					</parameterfield>
					<parameterfield>
						<name>GroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGroupHeader58Elm in CDMGroupHeader58) {
    def GroupHeader58Elm = GroupHeader58.secAddElement();
    GroupHeader58Elm.MsgId = CDMGroupHeader58Elm.MessageIdentification;
    GroupHeader58Elm.CreDtTm = CDMGroupHeader58Elm.CreationDateTime;
    CDMPartyIdentification43_To_PartyIdentification43(CDMGroupHeader58Elm.MessageRecipient, GroupHeader58Elm.MsgRcpt);
    CDMPagination_To_Pagination(CDMGroupHeader58Elm.MessagePagination, GroupHeader58Elm.MsgPgntn);
    CDMOriginalBusinessQuery1_To_OriginalBusinessQuery1(CDMGroupHeader58Elm.OriginalBusinessQuery, GroupHeader58Elm.OrgnlBizQry);
    GroupHeader58Elm.AddtlInf = CDMGroupHeader58Elm.AdditionalInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMIdentificationSource3Choice_To_IdentificationSource3Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMIdentificationSource3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification.Type</description>
					</parameterfield>
					<parameterfield>
						<name>IdentificationSource3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMIdentificationSource3ChoiceElm in CDMIdentificationSource3Choice) {
    def IdentificationSource3ChoiceElm = IdentificationSource3Choice.secAddElement();
    IdentificationSource3ChoiceElm.Cd = CDMIdentificationSource3ChoiceElm.Code;
    IdentificationSource3ChoiceElm.Prtry = CDMIdentificationSource3ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMImpliedCurrencyAmountRangeChoice_To_ImpliedCurrencyAmountRangeChoice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMImpliedCurrencyAmountRangeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount</description>
					</parameterfield>
					<parameterfield>
						<name>ImpliedCurrencyAmountRangeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMImpliedCurrencyAmountRangeChoiceElm in CDMImpliedCurrencyAmountRangeChoice) {
    def ImpliedCurrencyAmountRangeChoiceElm = ImpliedCurrencyAmountRangeChoice.secAddElement();
    CDMAmountRangeBoundary1_To_AmountRangeBoundary1(CDMImpliedCurrencyAmountRangeChoiceElm.FromAmount, ImpliedCurrencyAmountRangeChoiceElm.FrAmt);
    CDMAmountRangeBoundary1_To_AmountRangeBoundary1(CDMImpliedCurrencyAmountRangeChoiceElm.ToAmount, ImpliedCurrencyAmountRangeChoiceElm.ToAmt);
    CDMFromToAmountRange_To_FromToAmountRange(CDMImpliedCurrencyAmountRangeChoiceElm.FromToAmount, ImpliedCurrencyAmountRangeChoiceElm.FrToAmt);
    ImpliedCurrencyAmountRangeChoiceElm.EQAmt = CDMImpliedCurrencyAmountRangeChoiceElm.EqualAmount;
    ImpliedCurrencyAmountRangeChoiceElm.NEQAmt = CDMImpliedCurrencyAmountRangeChoiceElm.NotEqualAmount;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMInterestRecord1_To_InterestRecord1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMInterestRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest.Record</description>
					</parameterfield>
					<parameterfield>
						<name>InterestRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst.Rcrd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMInterestRecord1Elm in CDMInterestRecord1) {
    def InterestRecord1Elm = InterestRecord1.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMInterestRecord1Elm.Amount, InterestRecord1Elm.Amt);
    InterestRecord1Elm.CdtDbtInd = CDMInterestRecord1Elm.CreditDebitIndicator;
    CDMInterestType1Choice_To_InterestType1Choice(CDMInterestRecord1Elm.Type, InterestRecord1Elm.Tp);
    CDMRate3_To_Rate3(CDMInterestRecord1Elm.Rate, InterestRecord1Elm.Rate);
    CDMDateTimePeriodDetails_To_DateTimePeriodDetails(CDMInterestRecord1Elm.FromToDate, InterestRecord1Elm.FrToDt);
    InterestRecord1Elm.Rsn = CDMInterestRecord1Elm.Reason;
    CDMTaxCharges2_To_TaxCharges2(CDMInterestRecord1Elm.Tax, InterestRecord1Elm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMInterestType1Choice_To_InterestType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMInterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Type</description>
					</parameterfield>
					<parameterfield>
						<name>InterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMInterestType1ChoiceElm in CDMInterestType1Choice) {
    def InterestType1ChoiceElm = InterestType1Choice.secAddElement();
    InterestType1ChoiceElm.Cd = CDMInterestType1ChoiceElm.Code;
    InterestType1ChoiceElm.Prtry = CDMInterestType1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMLocalInstrument2Choice_To_LocalInstrument2Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMLocalInstrument2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.LocalInstrument</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.LocalInstrument</description>
					</parameterfield>
					<parameterfield>
						<name>LocalInstrument2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.LclInstrm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.LclInstrm</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMLocalInstrument2ChoiceElm in CDMLocalInstrument2Choice) {
    def LocalInstrument2ChoiceElm = LocalInstrument2Choice.secAddElement();
    LocalInstrument2ChoiceElm.Cd = CDMLocalInstrument2ChoiceElm.Code;
    LocalInstrument2ChoiceElm.Prtry = CDMLocalInstrument2ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMMandateRelatedInformation8_To_MandateRelatedInformation6" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMMandateRelatedInformation8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</description>
					</parameterfield>
					<parameterfield>
						<name>MandateRelatedInformation6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMMandateRelatedInformation8Elm in CDMMandateRelatedInformation8) {
    def MandateRelatedInformation6Elm = MandateRelatedInformation6.secAddElement();
    MandateRelatedInformation6Elm.MndtId = CDMMandateRelatedInformation8Elm.MandateIdentification;
    MandateRelatedInformation6Elm.DtOfSgntr = CDMMandateRelatedInformation8Elm.DateOfSignature;
    MandateRelatedInformation6Elm.AmdmntInd = CDMMandateRelatedInformation8Elm.AmendmentIndicator;
    CDMAmendmentInformationDetails8_To_AmendmentInformationDetails6(CDMMandateRelatedInformation8Elm.AmendmentInformationDetails, MandateRelatedInformation6Elm.AmdmntInfDtls);
    MandateRelatedInformation6Elm.ElctrncSgntr = CDMMandateRelatedInformation8Elm.ElectronicSignature;
    MandateRelatedInformation6Elm.FrstColltnDt = CDMMandateRelatedInformation8Elm.FirstCollectionDate;
    MandateRelatedInformation6Elm.FnlColltnDt = CDMMandateRelatedInformation8Elm.FinalCollectionDate;
    MandateRelatedInformation6Elm.Frqcy = CDMMandateRelatedInformation8Elm.Frequency;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMMandateRelatedInformation8_To_MandateRelatedInformation8" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMMandateRelatedInformation8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</description>
					</parameterfield>
					<parameterfield>
						<name>MandateRelatedInformation8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMMandateRelatedInformation8Elm in CDMMandateRelatedInformation8) {
    def MandateRelatedInformation8Elm = MandateRelatedInformation8.secAddElement();
    MandateRelatedInformation8Elm.MndtId = CDMMandateRelatedInformation8Elm.MandateIdentification;
    MandateRelatedInformation8Elm.DtOfSgntr = CDMMandateRelatedInformation8Elm.DateOfSignature;
    MandateRelatedInformation8Elm.AmdmntInd = CDMMandateRelatedInformation8Elm.AmendmentIndicator;
    CDMAmendmentInformationDetails8_To_AmendmentInformationDetails8(CDMMandateRelatedInformation8Elm.AmendmentInformationDetails, MandateRelatedInformation8Elm.AmdmntInfDtls);
    MandateRelatedInformation8Elm.ElctrncSgntr = CDMMandateRelatedInformation8Elm.ElectronicSignature;
    MandateRelatedInformation8Elm.FrstColltnDt = CDMMandateRelatedInformation8Elm.FirstCollectionDate;
    MandateRelatedInformation8Elm.FnlColltnDt = CDMMandateRelatedInformation8Elm.FinalCollectionDate;
    MandateRelatedInformation8Elm.Frqcy = CDMMandateRelatedInformation8Elm.Frequency;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMMessageIdentification2_To_MessageIdentification2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMMessageIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AdditionalInformationIndicator</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AdditionalInformationIndicator</description>
					</parameterfield>
					<parameterfield>
						<name>MessageIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AddtlInfInd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AddtlInfInd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMMessageIdentification2Elm in CDMMessageIdentification2) {
    def MessageIdentification2Elm = MessageIdentification2.secAddElement();
    MessageIdentification2Elm.MsgNmId = CDMMessageIdentification2Elm.MessageNameIdentification;
    MessageIdentification2Elm.MsgId = CDMMessageIdentification2Elm.MessageIdentification;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMNameAndAddress10_To_NameAndAddress10" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMNameAndAddress10</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation.RemittanceLocationPostalAddress</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation.RemittanceLocationPostalAddress</description>
					</parameterfield>
					<parameterfield>
						<name>NameAndAddress10</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf.RmtLctnPstlAdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf.RmtLctnPstlAdr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMNameAndAddress10Elm in CDMNameAndAddress10) {
    def NameAndAddress10Elm = NameAndAddress10.secAddElement();
    NameAndAddress10Elm.Nm = CDMNameAndAddress10Elm.Name;
    CDMPostalAddress6_To_PostalAddress6(CDMNameAndAddress10Elm.Address, NameAndAddress10Elm.Adr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMNumberAndSumOfTransactions1_To_NumberAndSumOfTransactions1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMNumberAndSumOfTransactions1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalCreditEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalCreditEntries</description>
					</parameterfield>
					<parameterfield>
						<name>NumberAndSumOfTransactions1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlCdtNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlCdtNtries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMNumberAndSumOfTransactions1Elm in CDMNumberAndSumOfTransactions1) {
    def NumberAndSumOfTransactions1Elm = NumberAndSumOfTransactions1.secAddElement();
    NumberAndSumOfTransactions1Elm.NbOfNtries = CDMNumberAndSumOfTransactions1Elm.NumberOfEntries;
    NumberAndSumOfTransactions1Elm.Sum = CDMNumberAndSumOfTransactions1Elm.Sum;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMNumberAndSumOfTransactions2_To_NumberAndSumOfTransactions2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMNumberAndSumOfTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary.TotalEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary.TotalEntries</description>
					</parameterfield>
					<parameterfield>
						<name>NumberAndSumOfTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMNumberAndSumOfTransactions2Elm in CDMNumberAndSumOfTransactions2) {
    def NumberAndSumOfTransactions2Elm = NumberAndSumOfTransactions2.secAddElement();
    NumberAndSumOfTransactions2Elm.NbOfNtries = CDMNumberAndSumOfTransactions2Elm.NumberOfEntries;
    NumberAndSumOfTransactions2Elm.Sum = CDMNumberAndSumOfTransactions2Elm.Sum;
    NumberAndSumOfTransactions2Elm.TtlNetNtryAmt = CDMNumberAndSumOfTransactions2Elm.TotalNetEntryAmount;
    NumberAndSumOfTransactions2Elm.CdtDbtInd = CDMNumberAndSumOfTransactions2Elm.CreditDebitIndicator;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOrganisationIdentification8_To_OrganisationIdentification4" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOrganisationIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>OrganisationIdentification4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOrganisationIdentification8Elm in CDMOrganisationIdentification8) {
    def OrganisationIdentification4Elm = OrganisationIdentification4.secAddElement();
    OrganisationIdentification4Elm.BICOrBEI = CDMOrganisationIdentification8Elm.AnyBIC;
    CDMGenericOrganisationIdentification1_To_GenericOrganisationIdentification1(CDMOrganisationIdentification8Elm.Other, OrganisationIdentification4Elm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOrganisationIdentification8_To_OrganisationIdentification8" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOrganisationIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification.OrganisationIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification.OrganisationIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>OrganisationIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id.OrgId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id.OrgId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOrganisationIdentification8Elm in CDMOrganisationIdentification8) {
    def OrganisationIdentification8Elm = OrganisationIdentification8.secAddElement();
    OrganisationIdentification8Elm.AnyBIC = CDMOrganisationIdentification8Elm.AnyBIC;
    CDMGenericOrganisationIdentification1_To_GenericOrganisationIdentification1(CDMOrganisationIdentification8Elm.Other, OrganisationIdentification8Elm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOrganisationIdentificationSchemeName1Choice_To_OrganisationIdentificationSchemeName1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOrganisationIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other.SchemeName</description>
					</parameterfield>
					<parameterfield>
						<name>OrganisationIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr.SchmeNm</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOrganisationIdentificationSchemeName1ChoiceElm in CDMOrganisationIdentificationSchemeName1Choice) {
    def OrganisationIdentificationSchemeName1ChoiceElm = OrganisationIdentificationSchemeName1Choice.secAddElement();
    OrganisationIdentificationSchemeName1ChoiceElm.Cd = CDMOrganisationIdentificationSchemeName1ChoiceElm.Code;
    OrganisationIdentificationSchemeName1ChoiceElm.Prtry = CDMOrganisationIdentificationSchemeName1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOriginalAndCurrentQuantities1_To_OriginalAndCurrentQuantities1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOriginalAndCurrentQuantities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</description>
					</parameterfield>
					<parameterfield>
						<name>OriginalAndCurrentQuantities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOriginalAndCurrentQuantities1Elm in CDMOriginalAndCurrentQuantities1) {
    def OriginalAndCurrentQuantities1Elm = OriginalAndCurrentQuantities1.secAddElement();
    OriginalAndCurrentQuantities1Elm.FaceAmt = CDMOriginalAndCurrentQuantities1Elm.FaceAmount;
    OriginalAndCurrentQuantities1Elm.AmtsdVal = CDMOriginalAndCurrentQuantities1Elm.AmortisedValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOriginalBusinessQuery1_To_OriginalBusinessQuery1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOriginalBusinessQuery1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.OriginalBusinessQuery</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.OriginalBusinessQuery</description>
					</parameterfield>
					<parameterfield>
						<name>OriginalBusinessQuery1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.OrgnlBizQry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.OrgnlBizQry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOriginalBusinessQuery1Elm in CDMOriginalBusinessQuery1) {
    def OriginalBusinessQuery1Elm = OriginalBusinessQuery1.secAddElement();
    OriginalBusinessQuery1Elm.MsgId = CDMOriginalBusinessQuery1Elm.MessageIdentification;
    OriginalBusinessQuery1Elm.MsgNmId = CDMOriginalBusinessQuery1Elm.MessageNameIdentification;
    OriginalBusinessQuery1Elm.CreDtTm = CDMOriginalBusinessQuery1Elm.CreationDateTime;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOtherIdentification1_To_OtherIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOtherIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>OtherIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOtherIdentification1Elm in CDMOtherIdentification1) {
    def OtherIdentification1Elm = OtherIdentification1.secAddElement();
    OtherIdentification1Elm.Id = CDMOtherIdentification1Elm.Identification;
    OtherIdentification1Elm.Sfx = CDMOtherIdentification1Elm.Suffix;
    CDMIdentificationSource3Choice_To_IdentificationSource3Choice(CDMOtherIdentification1Elm.Type, OtherIdentification1Elm.Tp);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPagination_To_Pagination" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPagination</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessagePagination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessagePagination</description>
					</parameterfield>
					<parameterfield>
						<name>Pagination</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgPgntn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgPgntn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaginationElm in CDMPagination) {
    def PaginationElm = Pagination.secAddElement();
    PaginationElm.PgNb = CDMPaginationElm.PageNumber;
    PaginationElm.LastPgInd = CDMPaginationElm.LastPageIndicator;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMParty11Choice_To_Party11Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMParty11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification</description>
					</parameterfield>
					<parameterfield>
						<name>Party11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMParty11ChoiceElm in CDMParty11Choice) {
    def Party11ChoiceElm = Party11Choice.secAddElement();
    CDMOrganisationIdentification8_To_OrganisationIdentification8(CDMParty11ChoiceElm.OrganisationIdentification, Party11ChoiceElm.OrgId);
    CDMPersonIdentification5_To_PersonIdentification5(CDMParty11ChoiceElm.PrivateIdentification, Party11ChoiceElm.PrvtId);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMParty11Choice_To_Party6Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMParty11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification</description>
					</parameterfield>
					<parameterfield>
						<name>Party6Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMParty11ChoiceElm in CDMParty11Choice) {
    def Party6ChoiceElm = Party6Choice.secAddElement();
    CDMOrganisationIdentification8_To_OrganisationIdentification4(CDMParty11ChoiceElm.OrganisationIdentification, Party6ChoiceElm.OrgId);
    CDMPersonIdentification5_To_PersonIdentification5(CDMParty11ChoiceElm.PrivateIdentification, Party6ChoiceElm.PrvtId);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPartyIdentification43_To_PartyIdentification32" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty</description>
					</parameterfield>
					<parameterfield>
						<name>PartyIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPartyIdentification43Elm in CDMPartyIdentification43) {
    def PartyIdentification32Elm = PartyIdentification32.secAddElement();
    PartyIdentification32Elm.Nm = CDMPartyIdentification43Elm.Name;
    CDMPostalAddress6_To_PostalAddress6(CDMPartyIdentification43Elm.PostalAddress, PartyIdentification32Elm.PstlAdr);
    CDMParty11Choice_To_Party6Choice(CDMPartyIdentification43Elm.Identification, PartyIdentification32Elm.Id);
    PartyIdentification32Elm.CtryOfRes = CDMPartyIdentification43Elm.CountryOfResidence;
    CDMContactDetails2_To_ContactDetails2(CDMPartyIdentification43Elm.ContactDetails, PartyIdentification32Elm.CtctDtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPartyIdentification43_To_PartyIdentification43" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient</description>
					</parameterfield>
					<parameterfield>
						<name>PartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPartyIdentification43Elm in CDMPartyIdentification43) {
    def PartyIdentification43Elm = PartyIdentification43.secAddElement();
    PartyIdentification43Elm.Nm = CDMPartyIdentification43Elm.Name;
    CDMPostalAddress6_To_PostalAddress6(CDMPartyIdentification43Elm.PostalAddress, PartyIdentification43Elm.PstlAdr);
    CDMParty11Choice_To_Party11Choice(CDMPartyIdentification43Elm.Identification, PartyIdentification43Elm.Id);
    PartyIdentification43Elm.CtryOfRes = CDMPartyIdentification43Elm.CountryOfResidence;
    CDMContactDetails2_To_ContactDetails2(CDMPartyIdentification43Elm.ContactDetails, PartyIdentification43Elm.CtctDtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaymentCard4_To_PaymentCard4" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaymentCard4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card</description>
					</parameterfield>
					<parameterfield>
						<name>PaymentCard4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaymentCard4Elm in CDMPaymentCard4) {
    def PaymentCard4Elm = PaymentCard4.secAddElement();
    CDMPlainCardData1_To_PlainCardData1(CDMPaymentCard4Elm.PlainCardData, PaymentCard4Elm.PlainCardData);
    PaymentCard4Elm.CardCtryCd = CDMPaymentCard4Elm.CardCountryCode;
    CDMGenericIdentification1_To_GenericIdentification1(CDMPaymentCard4Elm.CardBrand, PaymentCard4Elm.CardBrnd);
    PaymentCard4Elm.AddtlCardData = CDMPaymentCard4Elm.AdditionalCardData;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaymentIdentification1_To_PaymentIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaymentIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.PaymentIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.PaymentIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>PaymentIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.PmtId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.PmtId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaymentIdentification1Elm in CDMPaymentIdentification1) {
    def PaymentIdentification1Elm = PaymentIdentification1.secAddElement();
    PaymentIdentification1Elm.InstrId = CDMPaymentIdentification1Elm.InstructionIdentification;
    PaymentIdentification1Elm.EndToEndId = CDMPaymentIdentification1Elm.EndToEndIdentification;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaymentReturnReason2_To_PaymentReturnReason2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</description>
					</parameterfield>
					<parameterfield>
						<name>PaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaymentReturnReason2Elm in CDMPaymentReturnReason2) {
    def PaymentReturnReason2Elm = PaymentReturnReason2.secAddElement();
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMPaymentReturnReason2Elm.OriginalBankTransactionCode, PaymentReturnReason2Elm.OrgnlBkTxCd);
    CDMPartyIdentification43_To_PartyIdentification43(CDMPaymentReturnReason2Elm.Originator, PaymentReturnReason2Elm.Orgtr);
    CDMReturnReason5Choice_To_ReturnReason5Choice(CDMPaymentReturnReason2Elm.Reason, PaymentReturnReason2Elm.Rsn);
    CDMstring_To_Max105Text(CDMPaymentReturnReason2Elm.AdditionalInformation, PaymentReturnReason2Elm.AddtlInf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaymentReturnReason2_To_ReturnReasonInformation10" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</description>
					</parameterfield>
					<parameterfield>
						<name>ReturnReasonInformation10</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaymentReturnReason2Elm in CDMPaymentReturnReason2) {
    def ReturnReasonInformation10Elm = ReturnReasonInformation10.secAddElement();
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMPaymentReturnReason2Elm.OriginalBankTransactionCode, ReturnReasonInformation10Elm.OrgnlBkTxCd);
    CDMPartyIdentification43_To_PartyIdentification32(CDMPaymentReturnReason2Elm.Originator, ReturnReasonInformation10Elm.Orgtr);
    CDMReturnReason5Choice_To_ReturnReason5Choice(CDMPaymentReturnReason2Elm.Reason, ReturnReasonInformation10Elm.Rsn);
    CDMstring_To_Max105Text(CDMPaymentReturnReason2Elm.AdditionalInformation, ReturnReasonInformation10Elm.AddtlInf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPersonIdentification5_To_PersonIdentification5" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPersonIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>PersonIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPersonIdentification5Elm in CDMPersonIdentification5) {
    def PersonIdentification5Elm = PersonIdentification5.secAddElement();
    CDMDateAndPlaceOfBirth_To_DateAndPlaceOfBirth(CDMPersonIdentification5Elm.DateAndPlaceOfBirth, PersonIdentification5Elm.DtAndPlcOfBirth);
    CDMGenericPersonIdentification1_To_GenericPersonIdentification1(CDMPersonIdentification5Elm.Other, PersonIdentification5Elm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPersonIdentificationSchemeName1Choice_To_PersonIdentificationSchemeName1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPersonIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other.SchemeName</description>
					</parameterfield>
					<parameterfield>
						<name>PersonIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr.SchmeNm</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPersonIdentificationSchemeName1ChoiceElm in CDMPersonIdentificationSchemeName1Choice) {
    def PersonIdentificationSchemeName1ChoiceElm = PersonIdentificationSchemeName1Choice.secAddElement();
    PersonIdentificationSchemeName1ChoiceElm.Cd = CDMPersonIdentificationSchemeName1ChoiceElm.Code;
    PersonIdentificationSchemeName1ChoiceElm.Prtry = CDMPersonIdentificationSchemeName1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPlainCardData1_To_PlainCardData1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPlainCardData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData</description>
					</parameterfield>
					<parameterfield>
						<name>PlainCardData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPlainCardData1Elm in CDMPlainCardData1) {
    def PlainCardData1Elm = PlainCardData1.secAddElement();
    PlainCardData1Elm.PAN = CDMPlainCardData1Elm.PAN;
    PlainCardData1Elm.CardSeqNb = CDMPlainCardData1Elm.CardSequenceNumber;
    PlainCardData1Elm.FctvDt = CDMPlainCardData1Elm.EffectiveDate;
    PlainCardData1Elm.XpryDt = CDMPlainCardData1Elm.ExpiryDate;
    PlainCardData1Elm.SvcCd = CDMPlainCardData1Elm.ServiceCode;
    CDMTrackData1_To_TrackData1(CDMPlainCardData1Elm.TrackData, PlainCardData1Elm.TrckData);
    CDMCardSecurityInformation1_To_CardSecurityInformation1(CDMPlainCardData1Elm.CardSecurityCode, PlainCardData1Elm.CardSctyCd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPointOfInteraction1_To_PointOfInteraction1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPointOfInteraction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI</description>
					</parameterfield>
					<parameterfield>
						<name>PointOfInteraction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPointOfInteraction1Elm in CDMPointOfInteraction1) {
    def PointOfInteraction1Elm = PointOfInteraction1.secAddElement();
    CDMGenericIdentification32_To_GenericIdentification32(CDMPointOfInteraction1Elm.Identification, PointOfInteraction1Elm.Id);
    PointOfInteraction1Elm.SysNm = CDMPointOfInteraction1Elm.SystemName;
    PointOfInteraction1Elm.GrpId = CDMPointOfInteraction1Elm.GroupIdentification;
    CDMPointOfInteractionCapabilities1_To_PointOfInteractionCapabilities1(CDMPointOfInteraction1Elm.Capabilities, PointOfInteraction1Elm.Cpblties);
    CDMPointOfInteractionComponent1_To_PointOfInteractionComponent1(CDMPointOfInteraction1Elm.Component, PointOfInteraction1Elm.Cmpnt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPointOfInteractionCapabilities1_To_PointOfInteractionCapabilities1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPointOfInteractionCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities</description>
					</parameterfield>
					<parameterfield>
						<name>PointOfInteractionCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPointOfInteractionCapabilities1Elm in CDMPointOfInteractionCapabilities1) {
    def PointOfInteractionCapabilities1Elm = PointOfInteractionCapabilities1.secAddElement();
    CDMCardDataReading1Code_To_CardDataReading1Code(CDMPointOfInteractionCapabilities1Elm.CardReadingCapabilities, PointOfInteractionCapabilities1Elm.CardRdngCpblties);
    CDMCardholderVerificationCapability1Code_To_CardholderVerificationCapability1Code(CDMPointOfInteractionCapabilities1Elm.CardholderVerificationCapabilities, PointOfInteractionCapabilities1Elm.CrdhldrVrfctnCpblties);
    PointOfInteractionCapabilities1Elm.OnLineCpblties = CDMPointOfInteractionCapabilities1Elm.OnLineCapabilities;
    CDMDisplayCapabilities1_To_DisplayCapabilities1(CDMPointOfInteractionCapabilities1Elm.DisplayCapabilities, PointOfInteractionCapabilities1Elm.DispCpblties);
	if (CDMPointOfInteractionCapabilities1Elm.PrintLineWidth.IsNotNull())
    PointOfInteractionCapabilities1Elm.PrtLineWidth = toText(CDMPointOfInteractionCapabilities1Elm.PrintLineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPointOfInteractionComponent1_To_PointOfInteractionComponent1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPointOfInteractionComponent1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Component</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Component</description>
					</parameterfield>
					<parameterfield>
						<name>PointOfInteractionComponent1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cmpnt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cmpnt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPointOfInteractionComponent1Elm in CDMPointOfInteractionComponent1) {
    def PointOfInteractionComponent1Elm = PointOfInteractionComponent1.secAddElement();
    PointOfInteractionComponent1Elm.POICmpntTp = CDMPointOfInteractionComponent1Elm.POIComponentType;
    PointOfInteractionComponent1Elm.ManfctrId = CDMPointOfInteractionComponent1Elm.ManufacturerIdentification;
    PointOfInteractionComponent1Elm.Mdl = CDMPointOfInteractionComponent1Elm.Model;
    PointOfInteractionComponent1Elm.VrsnNb = CDMPointOfInteractionComponent1Elm.VersionNumber;
    PointOfInteractionComponent1Elm.SrlNb = CDMPointOfInteractionComponent1Elm.SerialNumber;
    CDMstring_To_Max70Text(CDMPointOfInteractionComponent1Elm.ApprovalNumber, PointOfInteractionComponent1Elm.ApprvlNb);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPostalAddress6_To_PostalAddress6" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPostalAddress6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress</description>
					</parameterfield>
					<parameterfield>
						<name>PostalAddress6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPostalAddress6Elm in CDMPostalAddress6) {
    def PostalAddress6Elm = PostalAddress6.secAddElement();
    PostalAddress6Elm.AdrTp = CDMPostalAddress6Elm.AddressType;
    PostalAddress6Elm.Dept = CDMPostalAddress6Elm.Department;
    PostalAddress6Elm.SubDept = CDMPostalAddress6Elm.SubDepartment;
    PostalAddress6Elm.StrtNm = CDMPostalAddress6Elm.StreetName;
    PostalAddress6Elm.BldgNb = CDMPostalAddress6Elm.BuildingNumber;
    PostalAddress6Elm.PstCd = CDMPostalAddress6Elm.PostCode;
    PostalAddress6Elm.TwnNm = CDMPostalAddress6Elm.TownName;
    PostalAddress6Elm.CtrySubDvsn = CDMPostalAddress6Elm.CountrySubDivision;
    PostalAddress6Elm.Ctry = CDMPostalAddress6Elm.Country;
    CDMstring_To_Max70Text(CDMPostalAddress6Elm.AddressLine, PostalAddress6Elm.AdrLine);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPrice2_To_ActiveOrHistoricCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPrice2Elm in CDMPrice2) {
    // DUMMY FIX
	// TODO - Should be corrected
	
	def amt = CDMPrice2Elm.Value[0].Amount;
	if (amt.length() != 0) {
    	// TODO - toVerify
		AssignSrcElmToDestSec (amt[0], ActiveOrHistoricCurrencyAndAmount,
			"CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount");
    }
    else {
    	def ActiveOrHistoricCurrencyAndAmountElm = ActiveOrHistoricCurrencyAndAmount.secAddElement();
    	ActiveOrHistoricCurrencyAndAmountElm.Ccy = "USD";
    	ActiveOrHistoricCurrencyAndAmountElm.Value = 0m;
	}
}
//TODO : BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Value -> Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPrice2_To_Price2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</description>
					</parameterfield>
					<parameterfield>
						<name>Price2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPrice2Elm in CDMPrice2) {
    def Price2Elm = Price2.secAddElement();
    CDMYieldedOrValueType1Choice_To_YieldedOrValueType1Choice(CDMPrice2Elm.Type, Price2Elm.Tp);
    CDMPriceRateOrAmountChoice_To_PriceRateOrAmountChoice(CDMPrice2Elm.Value, Price2Elm.Val);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPriceRateOrAmountChoice_To_PriceRateOrAmountChoice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPriceRateOrAmountChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value</description>
					</parameterfield>
					<parameterfield>
						<name>PriceRateOrAmountChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPriceRateOrAmountChoiceElm in CDMPriceRateOrAmountChoice) {
    def PriceRateOrAmountChoiceElm = PriceRateOrAmountChoice.secAddElement();
    PriceRateOrAmountChoiceElm.Rate = CDMPriceRateOrAmountChoiceElm.Rate;
    CDMActiveOrHistoricCurrencyAnd13DecimalAmount_To_ActiveOrHistoricCurrencyAnd13DecimalAmount(CDMPriceRateOrAmountChoiceElm.Amount, PriceRateOrAmountChoiceElm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProduct2_To_Product2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProduct2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</description>
					</parameterfield>
					<parameterfield>
						<name>Product2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProduct2Elm in CDMProduct2) {
    def Product2Elm = Product2.secAddElement();
    Product2Elm.PdctCd = CDMProduct2Elm.ProductCode;
    Product2Elm.UnitOfMeasr = CDMProduct2Elm.UnitOfMeasure;
    Product2Elm.PdctQty = CDMProduct2Elm.ProductQuantity;
    Product2Elm.UnitPric = CDMProduct2Elm.UnitPrice;
    Product2Elm.PdctAmt = CDMProduct2Elm.ProductAmount;
    Product2Elm.TaxTp = CDMProduct2Elm.TaxType;
    Product2Elm.AddtlPdctInf = CDMProduct2Elm.AdditionalProductInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryAgent3_To_ProprietaryAgent2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryAgent2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryAgent3Elm in CDMProprietaryAgent3) {
    def ProprietaryAgent2Elm = ProprietaryAgent2.secAddElement();
    ProprietaryAgent2Elm.Tp = CDMProprietaryAgent3Elm.Type;
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMProprietaryAgent3Elm.Agent, ProprietaryAgent2Elm.Agt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryAgent3_To_ProprietaryAgent3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryAgent3Elm in CDMProprietaryAgent3) {
    def ProprietaryAgent3Elm = ProprietaryAgent3.secAddElement();
    ProprietaryAgent3Elm.Tp = CDMProprietaryAgent3Elm.Type;
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMProprietaryAgent3Elm.Agent, ProprietaryAgent3Elm.Agt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryBankTransactionCodeStructure1_To_ProprietaryBankTransactionCodeStructure1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryBankTransactionCodeStructure1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryBankTransactionCodeStructure1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryBankTransactionCodeStructure1Elm in CDMProprietaryBankTransactionCodeStructure1) {
    def ProprietaryBankTransactionCodeStructure1Elm = ProprietaryBankTransactionCodeStructure1.secAddElement();
    ProprietaryBankTransactionCodeStructure1Elm.Cd = CDMProprietaryBankTransactionCodeStructure1Elm.Code;
    ProprietaryBankTransactionCodeStructure1Elm.Issr = CDMProprietaryBankTransactionCodeStructure1Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryDate2_To_ProprietaryDate2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryDate2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryDate2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryDate2Elm in CDMProprietaryDate2) {
    def ProprietaryDate2Elm = ProprietaryDate2.secAddElement();
    ProprietaryDate2Elm.Tp = CDMProprietaryDate2Elm.Type;
    CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice(CDMProprietaryDate2Elm.Date, ProprietaryDate2Elm.Dt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryParty3_To_ProprietaryParty2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryParty3Elm in CDMProprietaryParty3) {
    def ProprietaryParty2Elm = ProprietaryParty2.secAddElement();
    ProprietaryParty2Elm.Tp = CDMProprietaryParty3Elm.Type;
    CDMPartyIdentification43_To_PartyIdentification32(CDMProprietaryParty3Elm.Party, ProprietaryParty2Elm.Pty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryParty3_To_ProprietaryParty3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryParty3Elm in CDMProprietaryParty3) {
    def ProprietaryParty3Elm = ProprietaryParty3.secAddElement();
    ProprietaryParty3Elm.Tp = CDMProprietaryParty3Elm.Type;
    CDMPartyIdentification43_To_PartyIdentification43(CDMProprietaryParty3Elm.Party, ProprietaryParty3Elm.Pty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryPrice2_To_ProprietaryPrice2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryPrice2Elm in CDMProprietaryPrice2) {
    def ProprietaryPrice2Elm = ProprietaryPrice2.secAddElement();
    ProprietaryPrice2Elm.Tp = CDMProprietaryPrice2Elm.Type;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMProprietaryPrice2Elm.Price, ProprietaryPrice2Elm.Pric);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryQuantity1_To_ProprietaryQuantity1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryQuantity1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryQuantity1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryQuantity1Elm in CDMProprietaryQuantity1) {
    def ProprietaryQuantity1Elm = ProprietaryQuantity1.secAddElement();
    ProprietaryQuantity1Elm.Tp = CDMProprietaryQuantity1Elm.Type;
    ProprietaryQuantity1Elm.Qty = CDMProprietaryQuantity1Elm.Quantity;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryReference1_To_ProprietaryReference1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryReference1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryReference1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryReference1Elm in CDMProprietaryReference1) {
    def ProprietaryReference1Elm = ProprietaryReference1.secAddElement();
    ProprietaryReference1Elm.Tp = CDMProprietaryReference1Elm.Type;
    ProprietaryReference1Elm.Ref = CDMProprietaryReference1Elm.Reference;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPurpose2Choice_To_Purpose2Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPurpose2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Purpose</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Purpose</description>
					</parameterfield>
					<parameterfield>
						<name>Purpose2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Purp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Purp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPurpose2ChoiceElm in CDMPurpose2Choice) {
    def Purpose2ChoiceElm = Purpose2Choice.secAddElement();
    Purpose2ChoiceElm.Cd = CDMPurpose2ChoiceElm.Code;
    Purpose2ChoiceElm.Prtry = CDMPurpose2ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRate3_To_Rate3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRate3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate</description>
					</parameterfield>
					<parameterfield>
						<name>Rate3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRate3Elm in CDMRate3) {
    def Rate3Elm = Rate3.secAddElement();
    CDMRateType4Choice_To_RateType4Choice(CDMRate3Elm.Type, Rate3Elm.Tp);
    CDMCurrencyAndAmountRange2_To_CurrencyAndAmountRange2(CDMRate3Elm.ValidityRange, Rate3Elm.VldtyRg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRateType4Choice_To_RateType4Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRateType4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.Type</description>
					</parameterfield>
					<parameterfield>
						<name>RateType4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRateType4ChoiceElm in CDMRateType4Choice) {
    def RateType4ChoiceElm = RateType4Choice.secAddElement();
    RateType4ChoiceElm.Pctg = CDMRateType4ChoiceElm.Pctg;
    RateType4ChoiceElm.Othr = CDMRateType4ChoiceElm.Other;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReferredDocumentInformation3_To_ReferredDocumentInformation3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReferredDocumentInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation</description>
					</parameterfield>
					<parameterfield>
						<name>ReferredDocumentInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReferredDocumentInformation3Elm in CDMReferredDocumentInformation3) {
    def ReferredDocumentInformation3Elm = ReferredDocumentInformation3.secAddElement();
    CDMReferredDocumentType2_To_ReferredDocumentType2(CDMReferredDocumentInformation3Elm.Type, ReferredDocumentInformation3Elm.Tp);
    ReferredDocumentInformation3Elm.Nb = CDMReferredDocumentInformation3Elm.Number;
    ReferredDocumentInformation3Elm.RltdDt = CDMReferredDocumentInformation3Elm.RelatedDate;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReferredDocumentType1Choice_To_ReferredDocumentType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReferredDocumentType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type.CodeOrProprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type.CodeOrProprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ReferredDocumentType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp.CdOrPrtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp.CdOrPrtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReferredDocumentType1ChoiceElm in CDMReferredDocumentType1Choice) {
    def ReferredDocumentType1ChoiceElm = ReferredDocumentType1Choice.secAddElement();
    ReferredDocumentType1ChoiceElm.Cd = CDMReferredDocumentType1ChoiceElm.Code;
    ReferredDocumentType1ChoiceElm.Prtry = CDMReferredDocumentType1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReferredDocumentType2_To_ReferredDocumentType2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReferredDocumentType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type</description>
					</parameterfield>
					<parameterfield>
						<name>ReferredDocumentType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReferredDocumentType2Elm in CDMReferredDocumentType2) {
    def ReferredDocumentType2Elm = ReferredDocumentType2.secAddElement();
    CDMReferredDocumentType1Choice_To_ReferredDocumentType1Choice(CDMReferredDocumentType2Elm.CodeOrProprietary, ReferredDocumentType2Elm.CdOrPrtry);
    ReferredDocumentType2Elm.Issr = CDMReferredDocumentType2Elm.Issuer;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRegulatoryAuthority2_To_RegulatoryAuthority2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRegulatoryAuthority2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Authority</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Authority</description>
					</parameterfield>
					<parameterfield>
						<name>RegulatoryAuthority2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Authrty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Authrty</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRegulatoryAuthority2Elm in CDMRegulatoryAuthority2) {
    def RegulatoryAuthority2Elm = RegulatoryAuthority2.secAddElement();
    RegulatoryAuthority2Elm.Nm = CDMRegulatoryAuthority2Elm.Name;
    RegulatoryAuthority2Elm.Ctry = CDMRegulatoryAuthority2Elm.Country;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRegulatoryReporting3_To_RegulatoryReporting3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting</description>
					</parameterfield>
					<parameterfield>
						<name>RegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRegulatoryReporting3Elm in CDMRegulatoryReporting3) {
    def RegulatoryReporting3Elm = RegulatoryReporting3.secAddElement();
    RegulatoryReporting3Elm.DbtCdtRptgInd = CDMRegulatoryReporting3Elm.DebitCreditReportingIndicator;
    CDMRegulatoryAuthority2_To_RegulatoryAuthority2(CDMRegulatoryReporting3Elm.Authority, RegulatoryReporting3Elm.Authrty);
    CDMStructuredRegulatoryReporting3_To_StructuredRegulatoryReporting3(CDMRegulatoryReporting3Elm.Details, RegulatoryReporting3Elm.Dtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceAmount2_To_RemittanceAmount1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceAmount1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceAmount2Elm in CDMRemittanceAmount2) {
    def RemittanceAmount1Elm = RemittanceAmount1.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.DuePayableAmount, RemittanceAmount1Elm.DuePyblAmt);
    CDMDiscountAmountAndType1_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.DiscountAppliedAmount, RemittanceAmount1Elm.DscntApldAmt);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.CreditNoteAmount, RemittanceAmount1Elm.CdtNoteAmt);
    CDMTaxAmountAndType1_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.TaxAmount, RemittanceAmount1Elm.TaxAmt);
    CDMDocumentAdjustment1_To_DocumentAdjustment1(CDMRemittanceAmount2Elm.AdjustmentAmountAndReason, RemittanceAmount1Elm.AdjstmntAmtAndRsn);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.RemittedAmount, RemittanceAmount1Elm.RmtdAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceAmount2_To_RemittanceAmount2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceAmount2Elm in CDMRemittanceAmount2) {
    def RemittanceAmount2Elm = RemittanceAmount2.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.DuePayableAmount, RemittanceAmount2Elm.DuePyblAmt);
    CDMDiscountAmountAndType1_To_DiscountAmountAndType1(CDMRemittanceAmount2Elm.DiscountAppliedAmount, RemittanceAmount2Elm.DscntApldAmt);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.CreditNoteAmount, RemittanceAmount2Elm.CdtNoteAmt);
    CDMTaxAmountAndType1_To_TaxAmountAndType1(CDMRemittanceAmount2Elm.TaxAmount, RemittanceAmount2Elm.TaxAmt);
    CDMDocumentAdjustment1_To_DocumentAdjustment1(CDMRemittanceAmount2Elm.AdjustmentAmountAndReason, RemittanceAmount2Elm.AdjstmntAmtAndRsn);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmount2Elm.RemittedAmount, RemittanceAmount2Elm.RmtdAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceInformation7_To_RemittanceInformation5" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceInformation5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceInformation7Elm in CDMRemittanceInformation7) {
    def RemittanceInformation5Elm = RemittanceInformation5.secAddElement();
    CDMstring_To_Max140Text(CDMRemittanceInformation7Elm.Unstructured, RemittanceInformation5Elm.Ustrd);
    CDMStructuredRemittanceInformation9_To_StructuredRemittanceInformation7(CDMRemittanceInformation7Elm.Structured, RemittanceInformation5Elm.Strd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceInformation7_To_RemittanceInformation7" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceInformation7Elm in CDMRemittanceInformation7) {
    def RemittanceInformation7Elm = RemittanceInformation7.secAddElement();
    CDMstring_To_Max140Text(CDMRemittanceInformation7Elm.Unstructured, RemittanceInformation7Elm.Ustrd);
    CDMStructuredRemittanceInformation9_To_StructuredRemittanceInformation9(CDMRemittanceInformation7Elm.Structured, RemittanceInformation7Elm.Strd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceLocation2_To_RemittanceLocation2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceLocation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceLocation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceLocation2Elm in CDMRemittanceLocation2) {
    def RemittanceLocation2Elm = RemittanceLocation2.secAddElement();
    RemittanceLocation2Elm.RmtId = CDMRemittanceLocation2Elm.RemittanceIdentification;
    RemittanceLocation2Elm.RmtLctnMtd = CDMRemittanceLocation2Elm.RemittanceLocationMethod;
    RemittanceLocation2Elm.RmtLctnElctrncAdr = CDMRemittanceLocation2Elm.RemittanceLocationElectronicAddress;
    CDMNameAndAddress10_To_NameAndAddress10(CDMRemittanceLocation2Elm.RemittanceLocationPostalAddress, RemittanceLocation2Elm.RmtLctnPstlAdr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReportEntry3_To_ReportEntry2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</description>
					</parameterfield>
					<parameterfield>
						<name>ReportEntry2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReportEntry3Elm in CDMReportEntry3) {
    def ReportEntry2Elm = ReportEntry2.secAddElement();
    ReportEntry2Elm.NtryRef = CDMReportEntry3Elm.EntryReference;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMReportEntry3Elm.Amount, ReportEntry2Elm.Amt);
    ReportEntry2Elm.CdtDbtInd = CDMReportEntry3Elm.CreditDebitIndicator;
    ReportEntry2Elm.RvslInd = CDMReportEntry3Elm.ReversalIndicator;
    ReportEntry2Elm.Sts = CDMReportEntry3Elm.Status;
    CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice(CDMReportEntry3Elm.BookingDate, ReportEntry2Elm.BookgDt);
    CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice(CDMReportEntry3Elm.ValueDate, ReportEntry2Elm.ValDt);
    ReportEntry2Elm.AcctSvcrRef = CDMReportEntry3Elm.AccountServicerReference;
    CDMCashBalanceAvailability2_To_CashBalanceAvailability2(CDMReportEntry3Elm.Availability, ReportEntry2Elm.Avlbty);
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMReportEntry3Elm.BankTransactionCode, ReportEntry2Elm.BkTxCd);
    ReportEntry2Elm.ComssnWvrInd = CDMReportEntry3Elm.CommissionWaiverIndicator;
    CDMMessageIdentification2_To_MessageIdentification2(CDMReportEntry3Elm.AdditionalInformationIndicator, ReportEntry2Elm.AddtlInfInd);
    CDMAmountAndCurrencyExchange3_To_AmountAndCurrencyExchange3(CDMReportEntry3Elm.AmountDetails, ReportEntry2Elm.AmtDtls);
    CDMCharges3_To_ChargesInformation6(CDMReportEntry3Elm.Charges, ReportEntry2Elm.Chrgs);
    CDMTechnicalInputChannel1Choice_To_TechnicalInputChannel1Choice(CDMReportEntry3Elm.TechnicalInputChannel, ReportEntry2Elm.TechInptChanl);
    CDMTransactionInterest3_To_TransactionInterest2(CDMReportEntry3Elm.Interest, ReportEntry2Elm.Intrst);
    CDMEntryDetails2_To_EntryDetails1(CDMReportEntry3Elm.EntryDetails, ReportEntry2Elm.NtryDtls);
    ReportEntry2Elm.AddtlNtryInf = CDMReportEntry3Elm.AdditionalEntryInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReportEntry3_To_ReportEntry3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</description>
					</parameterfield>
					<parameterfield>
						<name>ReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReportEntry3Elm in CDMReportEntry3) {
    def ReportEntry3Elm = ReportEntry3.secAddElement();
    ReportEntry3Elm.NtryRef = CDMReportEntry3Elm.EntryReference;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMReportEntry3Elm.Amount, ReportEntry3Elm.Amt);
    ReportEntry3Elm.CdtDbtInd = CDMReportEntry3Elm.CreditDebitIndicator;
    ReportEntry3Elm.RvslInd = CDMReportEntry3Elm.ReversalIndicator;
    ReportEntry3Elm.Sts = CDMReportEntry3Elm.Status;
    CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice(CDMReportEntry3Elm.BookingDate, ReportEntry3Elm.BookgDt);
    CDMDateAndDateTimeChoice_To_DateAndDateTimeChoice(CDMReportEntry3Elm.ValueDate, ReportEntry3Elm.ValDt);
    ReportEntry3Elm.AcctSvcrRef = CDMReportEntry3Elm.AccountServicerReference;
    CDMCashBalanceAvailability2_To_CashBalanceAvailability2(CDMReportEntry3Elm.Availability, ReportEntry3Elm.Avlbty);
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMReportEntry3Elm.BankTransactionCode, ReportEntry3Elm.BkTxCd);
    ReportEntry3Elm.ComssnWvrInd = CDMReportEntry3Elm.CommissionWaiverIndicator;
    CDMMessageIdentification2_To_MessageIdentification2(CDMReportEntry3Elm.AdditionalInformationIndicator, ReportEntry3Elm.AddtlInfInd);
    CDMAmountAndCurrencyExchange3_To_AmountAndCurrencyExchange3(CDMReportEntry3Elm.AmountDetails, ReportEntry3Elm.AmtDtls);
    CDMCharges3_To_Charges3(CDMReportEntry3Elm.Charges, ReportEntry3Elm.Chrgs);
    CDMTechnicalInputChannel1Choice_To_TechnicalInputChannel1Choice(CDMReportEntry3Elm.TechnicalInputChannel, ReportEntry3Elm.TechInptChanl);
    CDMTransactionInterest3_To_TransactionInterest3(CDMReportEntry3Elm.Interest, ReportEntry3Elm.Intrst);
    CDMCardEntry1_To_CardEntry1(CDMReportEntry3Elm.CardTransaction, ReportEntry3Elm.CardTx);
    CDMEntryDetails2_To_EntryDetails2(CDMReportEntry3Elm.EntryDetails, ReportEntry3Elm.NtryDtls);
    ReportEntry3Elm.AddtlNtryInf = CDMReportEntry3Elm.AdditionalEntryInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReportingSource1Choice_To_ReportingSource1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReportingSource1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.ReportingSource</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.ReportingSource</description>
					</parameterfield>
					<parameterfield>
						<name>ReportingSource1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RptgSrc</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RptgSrc</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReportingSource1ChoiceElm in CDMReportingSource1Choice) {
    def ReportingSource1ChoiceElm = ReportingSource1Choice.secAddElement();
    ReportingSource1ChoiceElm.Cd = CDMReportingSource1ChoiceElm.Code;
    ReportingSource1ChoiceElm.Prtry = CDMReportingSource1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReturnReason5Choice_To_ReturnReason5Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReturnReason5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation.Reason</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation.Reason</description>
					</parameterfield>
					<parameterfield>
						<name>ReturnReason5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReturnReason5ChoiceElm in CDMReturnReason5Choice) {
    def ReturnReason5ChoiceElm = ReturnReason5Choice.secAddElement();
    ReturnReason5ChoiceElm.Cd = CDMReturnReason5ChoiceElm.Code;
    ReturnReason5ChoiceElm.Prtry = CDMReturnReason5ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSecuritiesAccount13_To_CashAccount16" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount16</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSecuritiesAccount13Elm in CDMSecuritiesAccount13) {
    def CashAccount16Elm = CashAccount16.secAddElement();
    //TODO : BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Id -> Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Identification
    //CDMGenericIdentification20_To_CashAccountType2(CDMSecuritiesAccount13Elm.Type, CashAccount16Elm.Tp);
    
    //Todo - toVerify
    CashAccount16Elm.Id.SecAddElement().IBAN = CDMSecuritiesAccount13Elm.Identification;

    CashAccount16Elm.Nm = CDMSecuritiesAccount13Elm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSecuritiesAccount13_To_SecuritiesAccount13" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</description>
					</parameterfield>
					<parameterfield>
						<name>SecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSecuritiesAccount13Elm in CDMSecuritiesAccount13) {
    def SecuritiesAccount13Elm = SecuritiesAccount13.secAddElement();
    SecuritiesAccount13Elm.Id = CDMSecuritiesAccount13Elm.Identification;
    CDMGenericIdentification20_To_GenericIdentification20(CDMSecuritiesAccount13Elm.Type, SecuritiesAccount13Elm.Tp);
    SecuritiesAccount13Elm.Nm = CDMSecuritiesAccount13Elm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSecurityIdentification14_To_SecurityIdentification14" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>SecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSecurityIdentification14Elm in CDMSecurityIdentification14) {
    def SecurityIdentification14Elm = SecurityIdentification14.secAddElement();
    SecurityIdentification14Elm.ISIN = CDMSecurityIdentification14Elm.ISIN;
    CDMOtherIdentification1_To_OtherIdentification1(CDMSecurityIdentification14Elm.OtherIdentification, SecurityIdentification14Elm.OthrId);
    SecurityIdentification14Elm.Desc = CDMSecurityIdentification14Elm.Description;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSecurityIdentification14_To_SecurityIdentification4Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>SecurityIdentification4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSecurityIdentification14Elm in CDMSecurityIdentification14) {
    def SecurityIdentification4ChoiceElm = SecurityIdentification4Choice.secAddElement();
    SecurityIdentification4ChoiceElm.ISIN = CDMSecurityIdentification14Elm.ISIN;
    if (CDMSecurityIdentification14Elm.ISIN.IsNull() && (CDMSecurityIdentification14Elm.OtherIdentification.length() > 0)) {
    	def prtry = SecurityIdentification4ChoiceElm.Prtry.SecAddElement();
    	def otherID = CDMSecurityIdentification14Elm.OtherIdentification[0];
    	def type = otherID.Type[0];
    	prtry.Id = otherID.Identification;
    	if (type.Code.IsNotNull())
	    	prtry.Tp = type.Code;
	    else
	    	prtry.Tp = type.Proprietary;
    }
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMServiceLevel8Choice_To_ServiceLevel8Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMServiceLevel8Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.ServiceLevel</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.ServiceLevel</description>
					</parameterfield>
					<parameterfield>
						<name>ServiceLevel8Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.SvcLvl</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.SvcLvl</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMServiceLevel8ChoiceElm in CDMServiceLevel8Choice) {
    def ServiceLevel8ChoiceElm = ServiceLevel8Choice.secAddElement();
    ServiceLevel8ChoiceElm.Cd = CDMServiceLevel8ChoiceElm.Code;
    ServiceLevel8ChoiceElm.Prtry = CDMServiceLevel8ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMstring_To_Max105Text" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</description>
					</parameterfield>
					<parameterfield>
						<name>Max105Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMstringElm in CDMstring) {
    def Max105TextElm = Max105Text.secAddElement();
    Max105TextElm.Value = CDMstringElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMstring_To_Max140Text" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Unstructured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Unstructured</description>
					</parameterfield>
					<parameterfield>
						<name>Max140Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Ustrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Ustrd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMstringElm in CDMstring) {
    def Max140TextElm = Max140Text.secAddElement();
    Max140TextElm.Value = CDMstringElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMstring_To_Max35Text" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details.Information</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details.Information</description>
					</parameterfield>
					<parameterfield>
						<name>Max35Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls.Inf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls.Inf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMstringElm in CDMstring) {
    def Max35TextElm = Max35Text.secAddElement();
    Max35TextElm.Value = CDMstringElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMstring_To_Max70Text" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress.AddressLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress.AddressLine</description>
					</parameterfield>
					<parameterfield>
						<name>Max70Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr.AdrLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr.AdrLine</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMstringElm in CDMstring) {
    def Max70TextElm = Max70Text.secAddElement();
    Max70TextElm.Value = CDMstringElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMStructuredRegulatoryReporting3_To_StructuredRegulatoryReporting3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMStructuredRegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details</description>
					</parameterfield>
					<parameterfield>
						<name>StructuredRegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMStructuredRegulatoryReporting3Elm in CDMStructuredRegulatoryReporting3) {
    def StructuredRegulatoryReporting3Elm = StructuredRegulatoryReporting3.secAddElement();
    StructuredRegulatoryReporting3Elm.Tp = CDMStructuredRegulatoryReporting3Elm.Type;
    StructuredRegulatoryReporting3Elm.Dt = CDMStructuredRegulatoryReporting3Elm.Date;
    StructuredRegulatoryReporting3Elm.Ctry = CDMStructuredRegulatoryReporting3Elm.Country;
    StructuredRegulatoryReporting3Elm.Cd = CDMStructuredRegulatoryReporting3Elm.Code;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMStructuredRegulatoryReporting3Elm.Amount, StructuredRegulatoryReporting3Elm.Amt);
    CDMstring_To_Max35Text(CDMStructuredRegulatoryReporting3Elm.Information, StructuredRegulatoryReporting3Elm.Inf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMStructuredRemittanceInformation9_To_StructuredRemittanceInformation7" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMStructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured</description>
					</parameterfield>
					<parameterfield>
						<name>StructuredRemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMStructuredRemittanceInformation9Elm in CDMStructuredRemittanceInformation9) {
    def StructuredRemittanceInformation7Elm = StructuredRemittanceInformation7.secAddElement();
    CDMReferredDocumentInformation3_To_ReferredDocumentInformation3(CDMStructuredRemittanceInformation9Elm.ReferredDocumentInformation, StructuredRemittanceInformation7Elm.RfrdDocInf);
    CDMRemittanceAmount2_To_RemittanceAmount1(CDMStructuredRemittanceInformation9Elm.ReferredDocumentAmount, StructuredRemittanceInformation7Elm.RfrdDocAmt);
    CDMCreditorReferenceInformation2_To_CreditorReferenceInformation2(CDMStructuredRemittanceInformation9Elm.CreditorReferenceInformation, StructuredRemittanceInformation7Elm.CdtrRefInf);
    CDMPartyIdentification43_To_PartyIdentification32(CDMStructuredRemittanceInformation9Elm.Invoicer, StructuredRemittanceInformation7Elm.Invcr);
    CDMPartyIdentification43_To_PartyIdentification32(CDMStructuredRemittanceInformation9Elm.Invoicee, StructuredRemittanceInformation7Elm.Invcee);
    CDMstring_To_Max140Text(CDMStructuredRemittanceInformation9Elm.AdditionalRemittanceInformation, StructuredRemittanceInformation7Elm.AddtlRmtInf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMStructuredRemittanceInformation9_To_StructuredRemittanceInformation9" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMStructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</description>
					</parameterfield>
					<parameterfield>
						<name>StructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMStructuredRemittanceInformation9Elm in CDMStructuredRemittanceInformation9) {
    def StructuredRemittanceInformation9Elm = StructuredRemittanceInformation9.secAddElement();
    CDMReferredDocumentInformation3_To_ReferredDocumentInformation3(CDMStructuredRemittanceInformation9Elm.ReferredDocumentInformation, StructuredRemittanceInformation9Elm.RfrdDocInf);
    CDMRemittanceAmount2_To_RemittanceAmount2(CDMStructuredRemittanceInformation9Elm.ReferredDocumentAmount, StructuredRemittanceInformation9Elm.RfrdDocAmt);
    CDMCreditorReferenceInformation2_To_CreditorReferenceInformation2(CDMStructuredRemittanceInformation9Elm.CreditorReferenceInformation, StructuredRemittanceInformation9Elm.CdtrRefInf);
    CDMPartyIdentification43_To_PartyIdentification43(CDMStructuredRemittanceInformation9Elm.Invoicer, StructuredRemittanceInformation9Elm.Invcr);
    CDMPartyIdentification43_To_PartyIdentification43(CDMStructuredRemittanceInformation9Elm.Invoicee, StructuredRemittanceInformation9Elm.Invcee);
    CDMstring_To_Max140Text(CDMStructuredRemittanceInformation9Elm.AdditionalRemittanceInformation, StructuredRemittanceInformation9Elm.AddtlRmtInf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSupplementaryData1_To_SupplementaryData1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSupplementaryData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData</description>
					</parameterfield>
					<parameterfield>
						<name>SupplementaryData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSupplementaryData1Elm in CDMSupplementaryData1) {
    def SupplementaryData1Elm = SupplementaryData1.secAddElement();
    SupplementaryData1Elm.PlcAndNm = CDMSupplementaryData1Elm.PlaceAndName;
    CDMSupplementaryDataEnvelope1_To_SupplementaryDataEnvelope1(CDMSupplementaryData1Elm.Envelope, SupplementaryData1Elm.Envlp);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSupplementaryDataEnvelope1_To_SupplementaryDataEnvelope1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSupplementaryDataEnvelope1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData.Envelope</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData.Envelope</description>
					</parameterfield>
					<parameterfield>
						<name>SupplementaryDataEnvelope1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData.Envlp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData.Envlp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSupplementaryDataEnvelope1Elm in CDMSupplementaryDataEnvelope1) {
    def SupplementaryDataEnvelope1Elm = SupplementaryDataEnvelope1.secAddElement();
    copyAny (CDMSupplementaryDataEnvelope1Elm.GetSection ("any"), SupplementaryDataEnvelope1Elm.GetSection ("any"));
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxAmount1_To_TaxAmount1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxAmount1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount</description>
					</parameterfield>
					<parameterfield>
						<name>TaxAmount1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxAmount1Elm in CDMTaxAmount1) {
    def TaxAmount1Elm = TaxAmount1.secAddElement();
    TaxAmount1Elm.Rate = CDMTaxAmount1Elm.Rate;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxAmount1Elm.TaxableBaseAmount, TaxAmount1Elm.TaxblBaseAmt);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxAmount1Elm.TotalAmount, TaxAmount1Elm.TtlAmt);
    CDMTaxRecordDetails1_To_TaxRecordDetails1(CDMTaxAmount1Elm.Details, TaxAmount1Elm.Dtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxAmountAndType1_To_ActiveOrHistoricCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.TaxAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxAmountAndType1Elm in CDMTaxAmountAndType1) {
    // TODO - toVerify
    AssignSrcElmToDestSec (CDMTaxAmountAndType1Elm.Amount[0], ActiveOrHistoricCurrencyAndAmount,
    			"CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount");
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxAmountAndType1_To_TaxAmountAndType1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</description>
					</parameterfield>
					<parameterfield>
						<name>TaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxAmountAndType1Elm in CDMTaxAmountAndType1) {
    def TaxAmountAndType1Elm = TaxAmountAndType1.secAddElement();
    CDMTaxAmountType1Choice_To_TaxAmountType1Choice(CDMTaxAmountAndType1Elm.Type, TaxAmountAndType1Elm.Tp);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxAmountAndType1Elm.Amount, TaxAmountAndType1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxAmountType1Choice_To_TaxAmountType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.Type</description>
					</parameterfield>
					<parameterfield>
						<name>TaxAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxAmountType1ChoiceElm in CDMTaxAmountType1Choice) {
    def TaxAmountType1ChoiceElm = TaxAmountType1Choice.secAddElement();
    TaxAmountType1ChoiceElm.Cd = CDMTaxAmountType1ChoiceElm.Code;
    TaxAmountType1ChoiceElm.Prtry = CDMTaxAmountType1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxAuthorisation1_To_TaxAuthorisation1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxAuthorisation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor.Authorisation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor.Authorisation</description>
					</parameterfield>
					<parameterfield>
						<name>TaxAuthorisation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr.Authstn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr.Authstn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxAuthorisation1Elm in CDMTaxAuthorisation1) {
    def TaxAuthorisation1Elm = TaxAuthorisation1.secAddElement();
    TaxAuthorisation1Elm.Titl = CDMTaxAuthorisation1Elm.Title;
    TaxAuthorisation1Elm.Nm = CDMTaxAuthorisation1Elm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxCharges2_To_TaxCharges2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxCharges2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Tax</description>
					</parameterfield>
					<parameterfield>
						<name>TaxCharges2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tax</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxCharges2Elm in CDMTaxCharges2) {
    def TaxCharges2Elm = TaxCharges2.secAddElement();
    TaxCharges2Elm.Id = CDMTaxCharges2Elm.Identification;
    TaxCharges2Elm.Rate = CDMTaxCharges2Elm.Rate;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxCharges2Elm.Amount, TaxCharges2Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxInformation3_To_TaxInformation3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax</description>
					</parameterfield>
					<parameterfield>
						<name>TaxInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxInformation3Elm in CDMTaxInformation3) {
    def TaxInformation3Elm = TaxInformation3.secAddElement();
    CDMTaxParty1_To_TaxParty1(CDMTaxInformation3Elm.Creditor, TaxInformation3Elm.Cdtr);
    CDMTaxParty2_To_TaxParty2(CDMTaxInformation3Elm.Debtor, TaxInformation3Elm.Dbtr);
    TaxInformation3Elm.AdmstnZn = CDMTaxInformation3Elm.AdministrationZone;
    TaxInformation3Elm.RefNb = CDMTaxInformation3Elm.ReferenceNumber;
    TaxInformation3Elm.Mtd = CDMTaxInformation3Elm.Method;
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxInformation3Elm.TotalTaxableBaseAmount, TaxInformation3Elm.TtlTaxblBaseAmt);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxInformation3Elm.TotalTaxAmount, TaxInformation3Elm.TtlTaxAmt);
    TaxInformation3Elm.Dt = CDMTaxInformation3Elm.Date;
    TaxInformation3Elm.SeqNb = CDMTaxInformation3Elm.SequenceNumber;
    CDMTaxRecord1_To_TaxRecord1(CDMTaxInformation3Elm.Record, TaxInformation3Elm.Rcrd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxParty1_To_TaxParty1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxParty1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Creditor</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Creditor</description>
					</parameterfield>
					<parameterfield>
						<name>TaxParty1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Cdtr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Cdtr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxParty1Elm in CDMTaxParty1) {
    def TaxParty1Elm = TaxParty1.secAddElement();
    TaxParty1Elm.TaxId = CDMTaxParty1Elm.TaxIdentification;
    TaxParty1Elm.RegnId = CDMTaxParty1Elm.RegistrationIdentification;
    TaxParty1Elm.TaxTp = CDMTaxParty1Elm.TaxType;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxParty2_To_TaxParty2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor</description>
					</parameterfield>
					<parameterfield>
						<name>TaxParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxParty2Elm in CDMTaxParty2) {
    def TaxParty2Elm = TaxParty2.secAddElement();
    TaxParty2Elm.TaxId = CDMTaxParty2Elm.TaxIdentification;
    TaxParty2Elm.RegnId = CDMTaxParty2Elm.RegistrationIdentification;
    TaxParty2Elm.TaxTp = CDMTaxParty2Elm.TaxType;
    CDMTaxAuthorisation1_To_TaxAuthorisation1(CDMTaxParty2Elm.Authorisation, TaxParty2Elm.Authstn);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxPeriod1_To_TaxPeriod1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxPeriod1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period</description>
					</parameterfield>
					<parameterfield>
						<name>TaxPeriod1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxPeriod1Elm in CDMTaxPeriod1) {
    def TaxPeriod1Elm = TaxPeriod1.secAddElement();
    TaxPeriod1Elm.Yr = CDMTaxPeriod1Elm.Year;
    TaxPeriod1Elm.Tp = CDMTaxPeriod1Elm.Type;
    CDMDatePeriodDetails_To_DatePeriodDetails(CDMTaxPeriod1Elm.FromToDate, TaxPeriod1Elm.FrToDt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxRecord1_To_TaxRecord1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record</description>
					</parameterfield>
					<parameterfield>
						<name>TaxRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxRecord1Elm in CDMTaxRecord1) {
    def TaxRecord1Elm = TaxRecord1.secAddElement();
    TaxRecord1Elm.Tp = CDMTaxRecord1Elm.Type;
    TaxRecord1Elm.Ctgy = CDMTaxRecord1Elm.Category;
    TaxRecord1Elm.CtgyDtls = CDMTaxRecord1Elm.CategoryDetails;
    TaxRecord1Elm.DbtrSts = CDMTaxRecord1Elm.DebtorStatus;
    TaxRecord1Elm.CertId = CDMTaxRecord1Elm.CertificateIdentification;
    TaxRecord1Elm.FrmsCd = CDMTaxRecord1Elm.FormsCode;
    CDMTaxPeriod1_To_TaxPeriod1(CDMTaxRecord1Elm.Period, TaxRecord1Elm.Prd);
    CDMTaxAmount1_To_TaxAmount1(CDMTaxRecord1Elm.TaxAmount, TaxRecord1Elm.TaxAmt);
    TaxRecord1Elm.AddtlInf = CDMTaxRecord1Elm.AdditionalInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxRecordDetails1_To_TaxRecordDetails1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxRecordDetails1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount.Details</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount.Details</description>
					</parameterfield>
					<parameterfield>
						<name>TaxRecordDetails1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt.Dtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt.Dtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxRecordDetails1Elm in CDMTaxRecordDetails1) {
    def TaxRecordDetails1Elm = TaxRecordDetails1.secAddElement();
    CDMTaxPeriod1_To_TaxPeriod1(CDMTaxRecordDetails1Elm.Period, TaxRecordDetails1Elm.Prd);
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxRecordDetails1Elm.Amount, TaxRecordDetails1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTechnicalInputChannel1Choice_To_TechnicalInputChannel1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTechnicalInputChannel1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.TechnicalInputChannel</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.TechnicalInputChannel</description>
					</parameterfield>
					<parameterfield>
						<name>TechnicalInputChannel1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.TechInptChanl</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.TechInptChanl</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTechnicalInputChannel1ChoiceElm in CDMTechnicalInputChannel1Choice) {
    def TechnicalInputChannel1ChoiceElm = TechnicalInputChannel1Choice.secAddElement();
    TechnicalInputChannel1ChoiceElm.Cd = CDMTechnicalInputChannel1ChoiceElm.Code;
    TechnicalInputChannel1ChoiceElm.Prtry = CDMTechnicalInputChannel1ChoiceElm.Proprietary;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTotalsPerBankTransactionCode2_To_TotalsPerBankTransactionCode2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTotalsPerBankTransactionCode2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode</description>
					</parameterfield>
					<parameterfield>
						<name>TotalsPerBankTransactionCode2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTotalsPerBankTransactionCode2Elm in CDMTotalsPerBankTransactionCode2) {
    def TotalsPerBankTransactionCode2Elm = TotalsPerBankTransactionCode2.secAddElement();
    TotalsPerBankTransactionCode2Elm.NbOfNtries = CDMTotalsPerBankTransactionCode2Elm.NumberOfEntries;
    TotalsPerBankTransactionCode2Elm.Sum = CDMTotalsPerBankTransactionCode2Elm.Sum;
    TotalsPerBankTransactionCode2Elm.TtlNetNtryAmt = CDMTotalsPerBankTransactionCode2Elm.TotalNetEntryAmount;
    TotalsPerBankTransactionCode2Elm.CdtDbtInd = CDMTotalsPerBankTransactionCode2Elm.CreditDebitIndicator;
    TotalsPerBankTransactionCode2Elm.FcstInd = CDMTotalsPerBankTransactionCode2Elm.ForecastIndicator;
    CDMBankTransactionCodeStructure4_To_BankTransactionCodeStructure4(CDMTotalsPerBankTransactionCode2Elm.BankTransactionCode, TotalsPerBankTransactionCode2Elm.BkTxCd);
    CDMCashBalanceAvailability2_To_CashBalanceAvailability2(CDMTotalsPerBankTransactionCode2Elm.Availability, TotalsPerBankTransactionCode2Elm.Avlbty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTotalTransactions2_To_TotalTransactions2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTotalTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary</description>
					</parameterfield>
					<parameterfield>
						<name>TotalTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTotalTransactions2Elm in CDMTotalTransactions2) {
    def TotalTransactions2Elm = TotalTransactions2.secAddElement();
    CDMNumberAndSumOfTransactions2_To_NumberAndSumOfTransactions2(CDMTotalTransactions2Elm.TotalEntries, TotalTransactions2Elm.TtlNtries);
    CDMNumberAndSumOfTransactions1_To_NumberAndSumOfTransactions1(CDMTotalTransactions2Elm.TotalCreditEntries, TotalTransactions2Elm.TtlCdtNtries);
    CDMNumberAndSumOfTransactions1_To_NumberAndSumOfTransactions1(CDMTotalTransactions2Elm.TotalDebitEntries, TotalTransactions2Elm.TtlDbtNtries);
    CDMTotalsPerBankTransactionCode2_To_TotalsPerBankTransactionCode2(CDMTotalTransactions2Elm.TotalEntriesPerBankTransactionCode, TotalTransactions2Elm.TtlNtriesPerBkTxCd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTrackData1_To_TrackData1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTrackData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.TrackData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.TrackData</description>
					</parameterfield>
					<parameterfield>
						<name>TrackData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.TrckData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.TrckData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTrackData1Elm in CDMTrackData1) {
    def TrackData1Elm = TrackData1.secAddElement();
    TrackData1Elm.TrckNb = CDMTrackData1Elm.TrackNumber;
    TrackData1Elm.TrckVal = CDMTrackData1Elm.TrackValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionAgents3_To_TransactionAgents2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionAgents2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionAgents3Elm in CDMTransactionAgents3) {
    def TransactionAgents2Elm = TransactionAgents2.secAddElement();
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.DebtorAgent, TransactionAgents2Elm.DbtrAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.CreditorAgent, TransactionAgents2Elm.CdtrAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.IntermediaryAgent1, TransactionAgents2Elm.IntrmyAgt1);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.IntermediaryAgent2, TransactionAgents2Elm.IntrmyAgt2);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.IntermediaryAgent3, TransactionAgents2Elm.IntrmyAgt3);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.ReceivingAgent, TransactionAgents2Elm.RcvgAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.DeliveringAgent, TransactionAgents2Elm.DlvrgAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.IssuingAgent, TransactionAgents2Elm.IssgAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification4(CDMTransactionAgents3Elm.SettlementPlace, TransactionAgents2Elm.SttlmPlc);
    CDMProprietaryAgent3_To_ProprietaryAgent2(CDMTransactionAgents3Elm.Proprietary, TransactionAgents2Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionAgents3_To_TransactionAgents3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionAgents3Elm in CDMTransactionAgents3) {
    def TransactionAgents3Elm = TransactionAgents3.secAddElement();
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.DebtorAgent, TransactionAgents3Elm.DbtrAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.CreditorAgent, TransactionAgents3Elm.CdtrAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.IntermediaryAgent1, TransactionAgents3Elm.IntrmyAgt1);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.IntermediaryAgent2, TransactionAgents3Elm.IntrmyAgt2);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.IntermediaryAgent3, TransactionAgents3Elm.IntrmyAgt3);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.ReceivingAgent, TransactionAgents3Elm.RcvgAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.DeliveringAgent, TransactionAgents3Elm.DlvrgAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.IssuingAgent, TransactionAgents3Elm.IssgAgt);
    CDMBranchAndFinancialInstitutionIdentification5_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgents3Elm.SettlementPlace, TransactionAgents3Elm.SttlmPlc);
    CDMProprietaryAgent3_To_ProprietaryAgent3(CDMTransactionAgents3Elm.Proprietary, TransactionAgents3Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionDates2_To_TransactionDates2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionDates2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionDates2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionDates2Elm in CDMTransactionDates2) {
    def TransactionDates2Elm = TransactionDates2.secAddElement();
    TransactionDates2Elm.AccptncDtTm = CDMTransactionDates2Elm.AcceptanceDateTime;
    TransactionDates2Elm.TradActvtyCtrctlSttlmDt = CDMTransactionDates2Elm.TradActvtyCtrctlSttlmDt;
    TransactionDates2Elm.TradDt = CDMTransactionDates2Elm.TradeDate;
    TransactionDates2Elm.IntrBkSttlmDt = CDMTransactionDates2Elm.InterbankSettlementDate;
    TransactionDates2Elm.StartDt = CDMTransactionDates2Elm.StartDate;
    TransactionDates2Elm.EndDt = CDMTransactionDates2Elm.EndDate;
    TransactionDates2Elm.TxDtTm = CDMTransactionDates2Elm.TransactionDateTime;
    CDMProprietaryDate2_To_ProprietaryDate2(CDMTransactionDates2Elm.Proprietary, TransactionDates2Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionIdentifier1_To_TransactionIdentifier1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionIdentifier1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.TransactionIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.TransactionIdentification</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionIdentifier1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.TxId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.TxId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionIdentifier1Elm in CDMTransactionIdentifier1) {
    def TransactionIdentifier1Elm = TransactionIdentifier1.secAddElement();
    TransactionIdentifier1Elm.TxDtTm = CDMTransactionIdentifier1Elm.TransactionDateTime;
    TransactionIdentifier1Elm.TxRef = CDMTransactionIdentifier1Elm.TransactionReference;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionInterest3_To_TransactionInterest2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionInterest3Elm in CDMTransactionInterest3) {
    def TransactionInterest2Elm = TransactionInterest2.secAddElement();
    if (CDMTransactionInterest3Elm.Record.length() > 0) {
	    def InterestRecord1Elm = CDMTransactionInterest3Elm.Record[0];
	   	CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(InterestRecord1Elm.Amount, TransactionInterest2Elm.Amt);
	    TransactionInterest2Elm.CdtDbtInd = InterestRecord1Elm.CreditDebitIndicator;
	    CDMInterestType1Choice_To_InterestType1Choice(InterestRecord1Elm.Type, TransactionInterest2Elm.Tp);
	    CDMRate3_To_Rate3(InterestRecord1Elm.Rate, TransactionInterest2Elm.Rate);
	    CDMDateTimePeriodDetails_To_DateTimePeriodDetails(InterestRecord1Elm.FromToDate, TransactionInterest2Elm.FrToDt);
	    TransactionInterest2Elm.Rsn = InterestRecord1Elm.Reason;
    }
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionInterest3_To_TransactionInterest3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionInterest3Elm in CDMTransactionInterest3) {
    def TransactionInterest3Elm = TransactionInterest3.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmount_To_ActiveOrHistoricCurrencyAndAmount(CDMTransactionInterest3Elm.TotalInterestAndTaxAmount, TransactionInterest3Elm.TtlIntrstAndTaxAmt);
    CDMInterestRecord1_To_InterestRecord1(CDMTransactionInterest3Elm.Record, TransactionInterest3Elm.Rcrd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionParties3_To_TransactionParties3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionParties3Elm in CDMTransactionParties3) {
    def TransactionParties3Elm = TransactionParties3.secAddElement();
    CDMPartyIdentification43_To_PartyIdentification43(CDMTransactionParties3Elm.InitiatingParty, TransactionParties3Elm.InitgPty);
    CDMPartyIdentification43_To_PartyIdentification43(CDMTransactionParties3Elm.Debtor, TransactionParties3Elm.Dbtr);
    CDMCashAccount24_To_CashAccount24(CDMTransactionParties3Elm.DebtorAccount, TransactionParties3Elm.DbtrAcct);
    CDMPartyIdentification43_To_PartyIdentification43(CDMTransactionParties3Elm.UltimateDebtor, TransactionParties3Elm.UltmtDbtr);
    CDMPartyIdentification43_To_PartyIdentification43(CDMTransactionParties3Elm.Creditor, TransactionParties3Elm.Cdtr);
    CDMCashAccount24_To_CashAccount24(CDMTransactionParties3Elm.CreditorAccount, TransactionParties3Elm.CdtrAcct);
    CDMPartyIdentification43_To_PartyIdentification43(CDMTransactionParties3Elm.UltimateCreditor, TransactionParties3Elm.UltmtCdtr);
    CDMPartyIdentification43_To_PartyIdentification43(CDMTransactionParties3Elm.TradingParty, TransactionParties3Elm.TradgPty);
    CDMProprietaryParty3_To_ProprietaryParty3(CDMTransactionParties3Elm.Proprietary, TransactionParties3Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionParties3_To_TransactionParty2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionParties3Elm in CDMTransactionParties3) {
    def TransactionParty2Elm = TransactionParty2.secAddElement();
    CDMPartyIdentification43_To_PartyIdentification32(CDMTransactionParties3Elm.InitiatingParty, TransactionParty2Elm.InitgPty);
    CDMPartyIdentification43_To_PartyIdentification32(CDMTransactionParties3Elm.Debtor, TransactionParty2Elm.Dbtr);
    CDMCashAccount24_To_CashAccount16(CDMTransactionParties3Elm.DebtorAccount, TransactionParty2Elm.DbtrAcct);
    CDMPartyIdentification43_To_PartyIdentification32(CDMTransactionParties3Elm.UltimateDebtor, TransactionParty2Elm.UltmtDbtr);
    CDMPartyIdentification43_To_PartyIdentification32(CDMTransactionParties3Elm.Creditor, TransactionParty2Elm.Cdtr);
    CDMCashAccount24_To_CashAccount16(CDMTransactionParties3Elm.CreditorAccount, TransactionParty2Elm.CdtrAcct);
    CDMPartyIdentification43_To_PartyIdentification32(CDMTransactionParties3Elm.UltimateCreditor, TransactionParty2Elm.UltmtCdtr);
    CDMPartyIdentification43_To_PartyIdentification32(CDMTransactionParties3Elm.TradingParty, TransactionParty2Elm.TradgPty);
    CDMProprietaryParty3_To_ProprietaryParty2(CDMTransactionParties3Elm.Proprietary, TransactionParty2Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionPrice3Choice_To_TransactionPrice2Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionPrice2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionPrice3ChoiceElm in CDMTransactionPrice3Choice) {
    def TransactionPrice2ChoiceElm = TransactionPrice2Choice.secAddElement();
    CDMPrice2_To_ActiveOrHistoricCurrencyAndAmount(CDMTransactionPrice3ChoiceElm.DealPric, TransactionPrice2ChoiceElm.DealPric);
    CDMProprietaryPrice2_To_ProprietaryPrice2(CDMTransactionPrice3ChoiceElm.Proprietary, TransactionPrice2ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionPrice3Choice_To_TransactionPrice3Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionPrice3ChoiceElm in CDMTransactionPrice3Choice) {
    def TransactionPrice3ChoiceElm = TransactionPrice3Choice.secAddElement();
    CDMPrice2_To_Price2(CDMTransactionPrice3ChoiceElm.DealPric, TransactionPrice3ChoiceElm.DealPric);
    CDMProprietaryPrice2_To_ProprietaryPrice2(CDMTransactionPrice3ChoiceElm.Proprietary, TransactionPrice3ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionQuantities2Choice_To_TransactionQuantities1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionQuantities1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionQuantities2ChoiceElm in CDMTransactionQuantities2Choice) {
    def TransactionQuantities1ChoiceElm = TransactionQuantities1Choice.secAddElement();
    CDMFinancialInstrumentQuantityChoice_To_FinancialInstrumentQuantityChoice(CDMTransactionQuantities2ChoiceElm.Quantity, TransactionQuantities1ChoiceElm.Qty);
    CDMProprietaryQuantity1_To_ProprietaryQuantity1(CDMTransactionQuantities2ChoiceElm.Proprietary, TransactionQuantities1ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionQuantities2Choice_To_TransactionQuantities2Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionQuantities2ChoiceElm in CDMTransactionQuantities2Choice) {
    def TransactionQuantities2ChoiceElm = TransactionQuantities2Choice.secAddElement();
    CDMFinancialInstrumentQuantityChoice_To_FinancialInstrumentQuantityChoice(CDMTransactionQuantities2ChoiceElm.Quantity, TransactionQuantities2ChoiceElm.Qty);
    CDMOriginalAndCurrentQuantities1_To_OriginalAndCurrentQuantities1(CDMTransactionQuantities2ChoiceElm.OrgnlAndCurFaceAmt, TransactionQuantities2ChoiceElm.OrgnlAndCurFaceAmt);
    CDMProprietaryQuantity1_To_ProprietaryQuantity1(CDMTransactionQuantities2ChoiceElm.Proprietary, TransactionQuantities2ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionReferences3_To_TransactionReferences2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionReferences2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionReferences3Elm in CDMTransactionReferences3) {
    def TransactionReferences2Elm = TransactionReferences2.secAddElement();
    TransactionReferences2Elm.MsgId = CDMTransactionReferences3Elm.MessageIdentification;
    TransactionReferences2Elm.AcctSvcrRef = CDMTransactionReferences3Elm.AccountServicerReference;
    TransactionReferences2Elm.PmtInfId = CDMTransactionReferences3Elm.PaymentInformationIdentification;
    TransactionReferences2Elm.InstrId = CDMTransactionReferences3Elm.InstructionIdentification;
    TransactionReferences2Elm.EndToEndId = CDMTransactionReferences3Elm.EndToEndIdentification;
    TransactionReferences2Elm.TxId = CDMTransactionReferences3Elm.TransactionIdentification;
    TransactionReferences2Elm.MndtId = CDMTransactionReferences3Elm.MandateIdentification;
    TransactionReferences2Elm.ChqNb = CDMTransactionReferences3Elm.ChequeNumber;
    TransactionReferences2Elm.ClrSysRef = CDMTransactionReferences3Elm.ClearingSystemReference;

	//Todo - toVerify - 4 fields not mapped
    CDMProprietaryReference1_To_ProprietaryReference1(CDMTransactionReferences3Elm.Proprietary, TransactionReferences2Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionReferences3_To_TransactionReferences3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionReferences3Elm in CDMTransactionReferences3) {
    def TransactionReferences3Elm = TransactionReferences3.secAddElement();
    TransactionReferences3Elm.MsgId = CDMTransactionReferences3Elm.MessageIdentification;
    TransactionReferences3Elm.AcctSvcrRef = CDMTransactionReferences3Elm.AccountServicerReference;
    TransactionReferences3Elm.PmtInfId = CDMTransactionReferences3Elm.PaymentInformationIdentification;
    TransactionReferences3Elm.InstrId = CDMTransactionReferences3Elm.InstructionIdentification;
    TransactionReferences3Elm.EndToEndId = CDMTransactionReferences3Elm.EndToEndIdentification;
    TransactionReferences3Elm.TxId = CDMTransactionReferences3Elm.TransactionIdentification;
    TransactionReferences3Elm.MndtId = CDMTransactionReferences3Elm.MandateIdentification;
    TransactionReferences3Elm.ChqNb = CDMTransactionReferences3Elm.ChequeNumber;
    TransactionReferences3Elm.ClrSysRef = CDMTransactionReferences3Elm.ClearingSystemReference;
    TransactionReferences3Elm.AcctOwnrTxId = CDMTransactionReferences3Elm.AccountOwnerTransactionIdentification;
    TransactionReferences3Elm.AcctSvcrTxId = CDMTransactionReferences3Elm.AccountServicerTransactionIdentification;
    TransactionReferences3Elm.MktInfrstrctrTxId = CDMTransactionReferences3Elm.MarketInfrastructureTransactionIdentification;
    TransactionReferences3Elm.PrcgId = CDMTransactionReferences3Elm.ProcessingIdentification;
    CDMProprietaryReference1_To_ProprietaryReference1(CDMTransactionReferences3Elm.Proprietary, TransactionReferences3Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMYieldedOrValueType1Choice_To_YieldedOrValueType1Choice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMYieldedOrValueType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Type</description>
					</parameterfield>
					<parameterfield>
						<name>YieldedOrValueType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMYieldedOrValueType1ChoiceElm in CDMYieldedOrValueType1Choice) {
    def YieldedOrValueType1ChoiceElm = YieldedOrValueType1Choice.secAddElement();
    YieldedOrValueType1ChoiceElm.Yldd = CDMYieldedOrValueType1ChoiceElm.Yldd;
    YieldedOrValueType1ChoiceElm.ValTp = CDMYieldedOrValueType1ChoiceElm.ValTp;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<elementproperties>
				<propertymap>
				</propertymap>
			</elementproperties>
		</folder>
		<folder name="ISOToCDM" type="FunctionDefFolder">
			<FormulaFunctionDef name="AccountIdentification4Choice_To_CDMAccountIdentification4Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AccountIdentification4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAccountIdentification4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AccountIdentification4ChoiceElm in AccountIdentification4Choice) {
    def CDMAccountIdentification4ChoiceElm = CDMAccountIdentification4Choice.secAddElement();
    CDMAccountIdentification4ChoiceElm.IBAN = AccountIdentification4ChoiceElm.IBAN;
    GenericAccountIdentification1_To_CDMGenericAccountIdentification1(AccountIdentification4ChoiceElm.Othr, CDMAccountIdentification4ChoiceElm.Other);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AccountInterest2_To_CDMAccountInterest2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AccountInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.Intrst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAccountInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.Interest</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AccountInterest2Elm in AccountInterest2) {
    def CDMAccountInterest2Elm = CDMAccountInterest2.secAddElement();
    InterestType1Choice_To_CDMInterestType1Choice(AccountInterest2Elm.Tp, CDMAccountInterest2Elm.Type);
    Rate3_To_CDMRate3(AccountInterest2Elm.Rate, CDMAccountInterest2Elm.Rate);
    DateTimePeriodDetails_To_CDMDateTimePeriodDetails(AccountInterest2Elm.FrToDt, CDMAccountInterest2Elm.FromToDate);
    CDMAccountInterest2Elm.Reason = AccountInterest2Elm.Rsn;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AccountSchemeName1Choice_To_CDMAccountSchemeName1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AccountSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr.SchmeNm</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAccountSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other.SchemeName</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AccountSchemeName1ChoiceElm in AccountSchemeName1Choice) {
    def CDMAccountSchemeName1ChoiceElm = CDMAccountSchemeName1Choice.secAddElement();
    CDMAccountSchemeName1ChoiceElm.Code = AccountSchemeName1ChoiceElm.Cd;
    CDMAccountSchemeName1ChoiceElm.Proprietary = AccountSchemeName1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveCurrencyAndAmount_To_CDMActiveCurrencyAndAmount" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMActiveCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveCurrencyAndAmountElm in ActiveCurrencyAndAmount) {
    def CDMActiveCurrencyAndAmountElm = CDMActiveCurrencyAndAmount.secAddElement();
    CDMActiveCurrencyAndAmountElm.Ccy = ActiveCurrencyAndAmountElm.Ccy;
    CDMActiveCurrencyAndAmountElm.Value = ActiveCurrencyAndAmountElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveOrHistoricCurrencyAnd13DecimalAmount_To_CDMActiveOrHistoricCurrencyAnd13DecimalAmount" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAnd13DecimalAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMActiveOrHistoricCurrencyAnd13DecimalAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value.Amount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveOrHistoricCurrencyAnd13DecimalAmountElm in ActiveOrHistoricCurrencyAnd13DecimalAmount) {
    def CDMActiveOrHistoricCurrencyAnd13DecimalAmountElm = CDMActiveOrHistoricCurrencyAnd13DecimalAmount.secAddElement();
    CDMActiveOrHistoricCurrencyAnd13DecimalAmountElm.Ccy = ActiveOrHistoricCurrencyAnd13DecimalAmountElm.Ccy;
    CDMActiveOrHistoricCurrencyAnd13DecimalAmountElm.Value = ActiveOrHistoricCurrencyAnd13DecimalAmountElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.ChrgsInf.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.ChrgsInf.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.ChargesInformation.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.ChargesInformation.Amount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[
foreach(def ActiveOrHistoricCurrencyAndAmountElm in ActiveOrHistoricCurrencyAndAmount) {
    def CDMActiveOrHistoricCurrencyAndAmountElm = CDMActiveOrHistoricCurrencyAndAmount.secAddElement();
    CDMActiveOrHistoricCurrencyAndAmountElm.Ccy = ActiveOrHistoricCurrencyAndAmountElm.Ccy;
    CDMActiveOrHistoricCurrencyAndAmountElm.Value = ActiveOrHistoricCurrencyAndAmountElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveOrHistoricCurrencyAndAmount_To_CDMDiscountAmountAndType1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveOrHistoricCurrencyAndAmountElm in ActiveOrHistoricCurrencyAndAmount) {
    def CDMDiscountAmountAndType1Elm = CDMDiscountAmountAndType1.secAddElement();
    
    //TODO - toVerify
    AssignSrcElmToDestSec (ActiveOrHistoricCurrencyAndAmountElm, CDMDiscountAmountAndType1Elm.Amount, 
    			"ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount");

}
 //TODO : OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.Type -> ?
//TODO : OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.Amount -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveOrHistoricCurrencyAndAmount_To_CDMPrice2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveOrHistoricCurrencyAndAmountElm in ActiveOrHistoricCurrencyAndAmount) {
    def CDMPrice2Elm = CDMPrice2.secAddElement();
    // Todo - toVerify
	AssignSrcElmToDestSec(ActiveOrHistoricCurrencyAndAmountElm, CDMPrice2Elm.Value.SecAddElement().Amount, 
			"ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount");
    
}
 //TODO : Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Type -> ?
//TODO : Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value -> BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Value
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveOrHistoricCurrencyAndAmount_To_CDMTaxAmountAndType1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.TaxAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveOrHistoricCurrencyAndAmountElm in ActiveOrHistoricCurrencyAndAmount) {
    def CDMTaxAmountAndType1Elm = CDMTaxAmountAndType1.secAddElement();
    AssignSrcElmToDestSec (ActiveOrHistoricCurrencyAndAmountElm, CDMTaxAmountAndType1Elm.Amount,
    			"ActiveCurrencyAndAmount_To_CDMActiveCurrencyAndAmount");
}
 //TODO : OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.Type -> ?
//TODO : OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.Amount -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmendmentInformationDetails6_To_CDMAmendmentInformationDetails8" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmendmentInformationDetails6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmendmentInformationDetails8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmendmentInformationDetails6Elm in AmendmentInformationDetails6) {
    def CDMAmendmentInformationDetails8Elm = CDMAmendmentInformationDetails8.secAddElement();
    CDMAmendmentInformationDetails8Elm.OriginalMandateIdentification = AmendmentInformationDetails6Elm.OrgnlMndtId;
    PartyIdentification32_To_CDMPartyIdentification43(AmendmentInformationDetails6Elm.OrgnlCdtrSchmeId, CDMAmendmentInformationDetails8Elm.OriginalCreditorSchemeIdentification);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(AmendmentInformationDetails6Elm.OrgnlCdtrAgt, CDMAmendmentInformationDetails8Elm.OriginalCreditorAgent);
    CashAccount16_To_CDMCashAccount24(AmendmentInformationDetails6Elm.OrgnlCdtrAgtAcct, CDMAmendmentInformationDetails8Elm.OriginalCreditorAgentAccount);
    PartyIdentification32_To_CDMPartyIdentification43(AmendmentInformationDetails6Elm.OrgnlDbtr, CDMAmendmentInformationDetails8Elm.OriginalDebtor);
    CashAccount16_To_CDMCashAccount24(AmendmentInformationDetails6Elm.OrgnlDbtrAcct, CDMAmendmentInformationDetails8Elm.OriginalDebtorAccount);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(AmendmentInformationDetails6Elm.OrgnlDbtrAgt, CDMAmendmentInformationDetails8Elm.OriginalDebtorAgent);
    CashAccount16_To_CDMCashAccount24(AmendmentInformationDetails6Elm.OrgnlDbtrAgtAcct, CDMAmendmentInformationDetails8Elm.OriginalDebtorAgentAccount);
    CDMAmendmentInformationDetails8Elm.OriginalFinalCollectionDate = AmendmentInformationDetails6Elm.OrgnlFnlColltnDt;
    CDMAmendmentInformationDetails8Elm.OriginalFrequency = AmendmentInformationDetails6Elm.OrgnlFrqcy;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmendmentInformationDetails8_To_CDMAmendmentInformationDetails8" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmendmentInformationDetails8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf.AmdmntInfDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmendmentInformationDetails8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation.AmendmentInformationDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmendmentInformationDetails8Elm in AmendmentInformationDetails8) {
    def CDMAmendmentInformationDetails8Elm = CDMAmendmentInformationDetails8.secAddElement();
    CDMAmendmentInformationDetails8Elm.OriginalMandateIdentification = AmendmentInformationDetails8Elm.OrgnlMndtId;
    PartyIdentification43_To_CDMPartyIdentification43(AmendmentInformationDetails8Elm.OrgnlCdtrSchmeId, CDMAmendmentInformationDetails8Elm.OriginalCreditorSchemeIdentification);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(AmendmentInformationDetails8Elm.OrgnlCdtrAgt, CDMAmendmentInformationDetails8Elm.OriginalCreditorAgent);
    CashAccount24_To_CDMCashAccount24(AmendmentInformationDetails8Elm.OrgnlCdtrAgtAcct, CDMAmendmentInformationDetails8Elm.OriginalCreditorAgentAccount);
    PartyIdentification43_To_CDMPartyIdentification43(AmendmentInformationDetails8Elm.OrgnlDbtr, CDMAmendmentInformationDetails8Elm.OriginalDebtor);
    CashAccount24_To_CDMCashAccount24(AmendmentInformationDetails8Elm.OrgnlDbtrAcct, CDMAmendmentInformationDetails8Elm.OriginalDebtorAccount);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(AmendmentInformationDetails8Elm.OrgnlDbtrAgt, CDMAmendmentInformationDetails8Elm.OriginalDebtorAgent);
    CashAccount24_To_CDMCashAccount24(AmendmentInformationDetails8Elm.OrgnlDbtrAgtAcct, CDMAmendmentInformationDetails8Elm.OriginalDebtorAgentAccount);
    CDMAmendmentInformationDetails8Elm.OriginalFinalCollectionDate = AmendmentInformationDetails8Elm.OrgnlFnlColltnDt;
    CDMAmendmentInformationDetails8Elm.OriginalFrequency = AmendmentInformationDetails8Elm.OrgnlFrqcy;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchange3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountAndCurrencyExchange3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchange3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountAndCurrencyExchange3Elm in AmountAndCurrencyExchange3) {
    def CDMAmountAndCurrencyExchange3Elm = CDMAmountAndCurrencyExchange3.secAddElement();
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetails3(AmountAndCurrencyExchange3Elm.InstdAmt, CDMAmountAndCurrencyExchange3Elm.InstructedAmount);
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetails3(AmountAndCurrencyExchange3Elm.TxAmt, CDMAmountAndCurrencyExchange3Elm.TransactionAmount);
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetails3(AmountAndCurrencyExchange3Elm.CntrValAmt, CDMAmountAndCurrencyExchange3Elm.CounterValueAmount);
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetails3(AmountAndCurrencyExchange3Elm.AnncdPstngAmt, CDMAmountAndCurrencyExchange3Elm.AnnouncedPostingAmount);
    AmountAndCurrencyExchangeDetails4_To_CDMAmountAndCurrencyExchangeDetails4(AmountAndCurrencyExchange3Elm.PrtryAmt, CDMAmountAndCurrencyExchange3Elm.ProprietaryAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetails3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeDetails3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountAndCurrencyExchangeDetails3Elm in AmountAndCurrencyExchangeDetails3) {
    def CDMAmountAndCurrencyExchangeDetails3Elm = CDMAmountAndCurrencyExchangeDetails3.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(AmountAndCurrencyExchangeDetails3Elm.Amt, CDMAmountAndCurrencyExchangeDetails3Elm.Amount);
    CurrencyExchange5_To_CDMCurrencyExchange5(AmountAndCurrencyExchangeDetails3Elm.CcyXchg, CDMAmountAndCurrencyExchangeDetails3Elm.CurrencyExchange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountAndCurrencyExchangeDetails4_To_CDMAmountAndCurrencyExchangeDetails4" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.PrtryAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.PrtryAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeDetails4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.ProprietaryAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.ProprietaryAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountAndCurrencyExchangeDetails4Elm in AmountAndCurrencyExchangeDetails4) {
    def CDMAmountAndCurrencyExchangeDetails4Elm = CDMAmountAndCurrencyExchangeDetails4.secAddElement();
    CDMAmountAndCurrencyExchangeDetails4Elm.Type = AmountAndCurrencyExchangeDetails4Elm.Tp;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(AmountAndCurrencyExchangeDetails4Elm.Amt, CDMAmountAndCurrencyExchangeDetails4Elm.Amount);
    CurrencyExchange5_To_CDMCurrencyExchange5(AmountAndCurrencyExchangeDetails4Elm.CcyXchg, CDMAmountAndCurrencyExchangeDetails4Elm.CurrencyExchange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountRangeBoundary1_To_CDMAmountRangeBoundary1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountRangeBoundary1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountRangeBoundary1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountRangeBoundary1Elm in AmountRangeBoundary1) {
    def CDMAmountRangeBoundary1Elm = CDMAmountRangeBoundary1.secAddElement();
    CDMAmountRangeBoundary1Elm.BoundaryAmount = AmountRangeBoundary1Elm.BdryAmt;
    CDMAmountRangeBoundary1Elm.Included = AmountRangeBoundary1Elm.Incl;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountType3Choice_To_CDMAmountType3Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountType3ChoiceElm in AmountType3Choice) {
    def CDMAmountType3ChoiceElm = CDMAmountType3Choice.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(AmountType3ChoiceElm.InstdAmt, CDMAmountType3ChoiceElm.InstructedAmount);
    EquivalentAmount2_To_CDMEquivalentAmount2(AmountType3ChoiceElm.EqvtAmt, CDMAmountType3ChoiceElm.EqvtAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Authorisation1Choice_To_CDMAuthorisation1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Authorisation1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.GrpHdr.Authstn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.GrpHdr.Authstn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAuthorisation1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.GroupHeader.Authorisation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.GroupHeader.Authorisation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Authorisation1ChoiceElm in Authorisation1Choice) {
    def CDMAuthorisation1ChoiceElm = CDMAuthorisation1Choice.secAddElement();
    CDMAuthorisation1ChoiceElm.Code = Authorisation1ChoiceElm.Cd;
    CDMAuthorisation1ChoiceElm.Proprietary = Authorisation1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BalanceSubType1Choice_To_CDMBalanceSubType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BalanceSubType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.SubTp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.SubTp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBalanceSubType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.SubType</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.SubType</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BalanceSubType1ChoiceElm in BalanceSubType1Choice) {
    def CDMBalanceSubType1ChoiceElm = CDMBalanceSubType1Choice.secAddElement();
    CDMBalanceSubType1ChoiceElm.Code = BalanceSubType1ChoiceElm.Cd;
    CDMBalanceSubType1ChoiceElm.Proprietary = BalanceSubType1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BalanceType12_To_CDMBalanceType12" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BalanceType12</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBalanceType12</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BalanceType12Elm in BalanceType12) {
    def CDMBalanceType12Elm = CDMBalanceType12.secAddElement();
    BalanceType5Choice_To_CDMBalanceType5Choice(BalanceType12Elm.CdOrPrtry, CDMBalanceType12Elm.CodeOrProprietary);
    BalanceSubType1Choice_To_CDMBalanceSubType1Choice(BalanceType12Elm.SubTp, CDMBalanceType12Elm.SubType);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BalanceType5Choice_To_CDMBalanceType5Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BalanceType5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.CdOrPrtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Tp.CdOrPrtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBalanceType5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.CodeOrProprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Type.CodeOrProprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BalanceType5ChoiceElm in BalanceType5Choice) {
    def CDMBalanceType5ChoiceElm = CDMBalanceType5Choice.secAddElement();
    CDMBalanceType5ChoiceElm.Code = BalanceType5ChoiceElm.Cd;
    CDMBalanceType5ChoiceElm.Proprietary = BalanceType5ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BankTransactionCodeStructure4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBankTransactionCodeStructure4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BankTransactionCodeStructure4Elm in BankTransactionCodeStructure4) {
    def CDMBankTransactionCodeStructure4Elm = CDMBankTransactionCodeStructure4.secAddElement();
    BankTransactionCodeStructure5_To_CDMBankTransactionCodeStructure5(BankTransactionCodeStructure4Elm.Domn, CDMBankTransactionCodeStructure4Elm.Domain);
    ProprietaryBankTransactionCodeStructure1_To_CDMProprietaryBankTransactionCodeStructure1(BankTransactionCodeStructure4Elm.Prtry, CDMBankTransactionCodeStructure4Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BankTransactionCodeStructure5_To_CDMBankTransactionCodeStructure5" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BankTransactionCodeStructure5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBankTransactionCodeStructure5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BankTransactionCodeStructure5Elm in BankTransactionCodeStructure5) {
    def CDMBankTransactionCodeStructure5Elm = CDMBankTransactionCodeStructure5.secAddElement();
    CDMBankTransactionCodeStructure5Elm.Code = BankTransactionCodeStructure5Elm.Cd;
    BankTransactionCodeStructure6_To_CDMBankTransactionCodeStructure6(BankTransactionCodeStructure5Elm.Fmly, CDMBankTransactionCodeStructure5Elm.Family);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BankTransactionCodeStructure6_To_CDMBankTransactionCodeStructure6" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BankTransactionCodeStructure6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn.Fmly</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Domn.Fmly</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBankTransactionCodeStructure6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain.Family</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Domain.Family</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BankTransactionCodeStructure6Elm in BankTransactionCodeStructure6) {
    def CDMBankTransactionCodeStructure6Elm = CDMBankTransactionCodeStructure6.secAddElement();
    CDMBankTransactionCodeStructure6Elm.Code = BankTransactionCodeStructure6Elm.Cd;
    CDMBankTransactionCodeStructure6Elm.SubFamilyCode = BankTransactionCodeStructure6Elm.SubFmlyCd;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BatchInformation2_To_CDMBatchInformation2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BatchInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.Btch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.Btch</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBatchInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.Batch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.Batch</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BatchInformation2Elm in BatchInformation2) {
    def CDMBatchInformation2Elm = CDMBatchInformation2.secAddElement();
    CDMBatchInformation2Elm.MessageIdentification = BatchInformation2Elm.MsgId;
    CDMBatchInformation2Elm.PaymentInformationIdentification = BatchInformation2Elm.PmtInfId;
    CDMBatchInformation2Elm.NumberOfTransactions = BatchInformation2Elm.NbOfTxs;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(BatchInformation2Elm.TtlAmt, CDMBatchInformation2Elm.TotalAmount);
    CDMBatchInformation2Elm.CreditDebitIndicator = BatchInformation2Elm.CdtDbtInd;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BranchAndFinancialInstitutionIdentification4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BranchAndFinancialInstitutionIdentification4Elm in BranchAndFinancialInstitutionIdentification4) {
    def CDMBranchAndFinancialInstitutionIdentification5Elm = CDMBranchAndFinancialInstitutionIdentification5.secAddElement();
    FinancialInstitutionIdentification7_To_CDMFinancialInstitutionIdentification8(BranchAndFinancialInstitutionIdentification4Elm.FinInstnId, CDMBranchAndFinancialInstitutionIdentification5Elm.FinancialInstitutionIdentification);
    BranchData2_To_CDMBranchData2(BranchAndFinancialInstitutionIdentification4Elm.BrnchId, CDMBranchAndFinancialInstitutionIdentification5Elm.BranchIdentification);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BranchAndFinancialInstitutionIdentification5Elm in BranchAndFinancialInstitutionIdentification5) {
    def CDMBranchAndFinancialInstitutionIdentification5Elm = CDMBranchAndFinancialInstitutionIdentification5.secAddElement();
    FinancialInstitutionIdentification8_To_CDMFinancialInstitutionIdentification8(BranchAndFinancialInstitutionIdentification5Elm.FinInstnId, CDMBranchAndFinancialInstitutionIdentification5Elm.FinancialInstitutionIdentification);
    BranchData2_To_CDMBranchData2(BranchAndFinancialInstitutionIdentification5Elm.BrnchId, CDMBranchAndFinancialInstitutionIdentification5Elm.BranchIdentification);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BranchData2_To_CDMBranchData2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BranchData2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.BrnchId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.BrnchId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBranchData2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.BranchIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.BranchIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BranchData2Elm in BranchData2) {
    def CDMBranchData2Elm = CDMBranchData2.secAddElement();
    CDMBranchData2Elm.Identification = BranchData2Elm.Id;
    CDMBranchData2Elm.Name = BranchData2Elm.Nm;
    PostalAddress6_To_CDMPostalAddress6(BranchData2Elm.PstlAdr, CDMBranchData2Elm.PostalAddress);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardAggregated1_To_CDMCardAggregated1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardAggregated1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardAggregated1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardAggregated1Elm in CardAggregated1) {
    def CDMCardAggregated1Elm = CDMCardAggregated1.secAddElement();
    CDMCardAggregated1Elm.AdditionalService = CardAggregated1Elm.AddtlSvc;
    CDMCardAggregated1Elm.TransactionCategory = CardAggregated1Elm.TxCtgy;
    CDMCardAggregated1Elm.SaleReconciliationIdentification = CardAggregated1Elm.SaleRcncltnId;
    CardSequenceNumberRange1_To_CDMCardSequenceNumberRange1(CardAggregated1Elm.SeqNbRg, CDMCardAggregated1Elm.SequenceNumberRange);
    DateOrDateTimePeriodChoice_To_CDMDateOrDateTimePeriodChoice(CardAggregated1Elm.TxDtRg, CDMCardAggregated1Elm.TransactionDateRange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardDataReading1Code_To_CDMCardDataReading1Code" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardDataReading1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardDataReading1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardDataReading1CodeElm in CardDataReading1Code) {
    def CDMCardDataReading1CodeElm = CDMCardDataReading1Code.secAddElement();
    CDMCardDataReading1CodeElm.Value = CardDataReading1CodeElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardEntry1_To_CDMCardEntry1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardEntry1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardEntry1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardEntry1Elm in CardEntry1) {
    def CDMCardEntry1Elm = CDMCardEntry1.secAddElement();
    PaymentCard4_To_CDMPaymentCard4(CardEntry1Elm.Card, CDMCardEntry1Elm.Card);
    PointOfInteraction1_To_CDMPointOfInteraction1(CardEntry1Elm.POI, CDMCardEntry1Elm.POI);
    CardAggregated1_To_CDMCardAggregated1(CardEntry1Elm.AggtdNtry, CDMCardEntry1Elm.AggregatedEntry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardholderVerificationCapability1Code_To_CDMCardholderVerificationCapability1Code" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardholderVerificationCapability1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardholderVerificationCapability1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardholderVerificationCapability1CodeElm in CardholderVerificationCapability1Code) {
    def CDMCardholderVerificationCapability1CodeElm = CDMCardholderVerificationCapability1Code.secAddElement();
    CDMCardholderVerificationCapability1CodeElm.Value = CardholderVerificationCapability1CodeElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardIndividualTransaction1_To_CDMCardIndividualTransaction1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardIndividualTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardIndividualTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardIndividualTransaction1Elm in CardIndividualTransaction1) {
    def CDMCardIndividualTransaction1Elm = CDMCardIndividualTransaction1.secAddElement();
    CDMCardIndividualTransaction1Elm.AdditionalService = CardIndividualTransaction1Elm.AddtlSvc;
    CDMCardIndividualTransaction1Elm.TransactionCategory = CardIndividualTransaction1Elm.TxCtgy;
    CDMCardIndividualTransaction1Elm.SaleReconciliationIdentification = CardIndividualTransaction1Elm.SaleRcncltnId;
    CDMCardIndividualTransaction1Elm.SaleReferenceNumber = CardIndividualTransaction1Elm.SaleRefNb;
    CDMCardIndividualTransaction1Elm.SequenceNumber = CardIndividualTransaction1Elm.SeqNb;
    TransactionIdentifier1_To_CDMTransactionIdentifier1(CardIndividualTransaction1Elm.TxId, CDMCardIndividualTransaction1Elm.TransactionIdentification);
    Product2_To_CDMProduct2(CardIndividualTransaction1Elm.Pdct, CDMCardIndividualTransaction1Elm.Product);
    CDMCardIndividualTransaction1Elm.ValidationDate = CardIndividualTransaction1Elm.VldtnDt;
    CDMCardIndividualTransaction1Elm.ValidationSequenceNumber = CardIndividualTransaction1Elm.VldtnSeqNb;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardSecurityInformation1_To_CDMCardSecurityInformation1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardSecurityInformation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardSecurityInformation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardSecurityInformation1Elm in CardSecurityInformation1) {
    def CDMCardSecurityInformation1Elm = CDMCardSecurityInformation1.secAddElement();
    CDMCardSecurityInformation1Elm.CSCManagement = CardSecurityInformation1Elm.CSCMgmt;
    CDMCardSecurityInformation1Elm.CSCValue = CardSecurityInformation1Elm.CSCVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardSequenceNumberRange1_To_CDMCardSequenceNumberRange1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardSequenceNumberRange1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.SeqNbRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.SeqNbRg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardSequenceNumberRange1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardSequenceNumberRange1Elm in CardSequenceNumberRange1) {
    def CDMCardSequenceNumberRange1Elm = CDMCardSequenceNumberRange1.secAddElement();
    CDMCardSequenceNumberRange1Elm.FirstTransaction = CardSequenceNumberRange1Elm.FrstTx;
    CDMCardSequenceNumberRange1Elm.LastTransaction = CardSequenceNumberRange1Elm.LastTx;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardTransaction1_To_CDMCardTransaction1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardTransaction1Elm in CardTransaction1) {
    def CDMCardTransaction1Elm = CDMCardTransaction1.secAddElement();
    PaymentCard4_To_CDMPaymentCard4(CardTransaction1Elm.Card, CDMCardTransaction1Elm.Card);
    PointOfInteraction1_To_CDMPointOfInteraction1(CardTransaction1Elm.POI, CDMCardTransaction1Elm.POI);
    CardTransaction1Choice_To_CDMCardTransaction1Choice(CardTransaction1Elm.Tx, CDMCardTransaction1Elm.Transaction);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardTransaction1Choice_To_CDMCardTransaction1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardTransaction1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardTransaction1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardTransaction1ChoiceElm in CardTransaction1Choice) {
    def CDMCardTransaction1ChoiceElm = CDMCardTransaction1Choice.secAddElement();
    CardAggregated1_To_CDMCardAggregated1(CardTransaction1ChoiceElm.Aggtd, CDMCardTransaction1ChoiceElm.Aggtd);
    CardIndividualTransaction1_To_CDMCardIndividualTransaction1(CardTransaction1ChoiceElm.Indv, CDMCardTransaction1ChoiceElm.Individual);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount16_To_CDMCashAccount24" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount16</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount16Elm in CashAccount16) {
    def CDMCashAccount24Elm = CDMCashAccount24.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIdentification4Choice(CashAccount16Elm.Id, CDMCashAccount24Elm.Identification);
    CashAccountType2_To_CDMCashAccountType2Choice(CashAccount16Elm.Tp, CDMCashAccount24Elm.Type);
    CDMCashAccount24Elm.Currency = CashAccount16Elm.Ccy;
    CDMCashAccount24Elm.Name = CashAccount16Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount16_To_CDMSecuritiesAccount13" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount16</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount16Elm in CashAccount16) {
    def CDMSecuritiesAccount13Elm = CDMSecuritiesAccount13.secAddElement();
    //TODO : Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Identification -> BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Id
    //CashAccountType2_To_CDMGenericIdentification20(CashAccount16Elm.Tp, CDMSecuritiesAccount13Elm.Type);
    
    //Todo - toVerify
    def srcId = CashAccount16Elm.Id[0];
    if (srcId.IBAN.IsNotNull()) {
    	CDMSecuritiesAccount13Elm.Identification = srcId.IBAN;
    }
    else {
    	CDMSecuritiesAccount13Elm.Identification = srcId.Othr[0].Id;	
    }
    
    CDMSecuritiesAccount13Elm.Name = CashAccount16Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount20_To_CDMCashAccount25" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Acct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Acct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount20Elm in CashAccount20) {
    def CDMCashAccount25Elm = CDMCashAccount25.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIdentification4Choice(CashAccount20Elm.Id, CDMCashAccount25Elm.Identification);
    CashAccountType2_To_CDMCashAccountType2Choice(CashAccount20Elm.Tp, CDMCashAccount25Elm.Type);
    CDMCashAccount25Elm.Currency = CashAccount20Elm.Ccy;
    CDMCashAccount25Elm.Name = CashAccount20Elm.Nm;
    PartyIdentification32_To_CDMPartyIdentification43(CashAccount20Elm.Ownr, CDMCashAccount25Elm.Owner);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(CashAccount20Elm.Svcr, CDMCashAccount25Elm.Servicer);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount24_To_CDMCashAccount24" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RltdAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RltdAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.RelatedAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.RelatedAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount24Elm in CashAccount24) {
    def CDMCashAccount24Elm = CDMCashAccount24.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIdentification4Choice(CashAccount24Elm.Id, CDMCashAccount24Elm.Identification);
    CashAccountType2Choice_To_CDMCashAccountType2Choice(CashAccount24Elm.Tp, CDMCashAccount24Elm.Type);
    CDMCashAccount24Elm.Currency = CashAccount24Elm.Ccy;
    CDMCashAccount24Elm.Name = CashAccount24Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount25_To_CDMCashAccount25" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount25Elm in CashAccount25) {
    def CDMCashAccount25Elm = CDMCashAccount25.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIdentification4Choice(CashAccount25Elm.Id, CDMCashAccount25Elm.Identification);
    CashAccountType2Choice_To_CDMCashAccountType2Choice(CashAccount25Elm.Tp, CDMCashAccount25Elm.Type);
    CDMCashAccount25Elm.Currency = CashAccount25Elm.Ccy;
    CDMCashAccount25Elm.Name = CashAccount25Elm.Nm;
    PartyIdentification43_To_CDMPartyIdentification43(CashAccount25Elm.Ownr, CDMCashAccount25Elm.Owner);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(CashAccount25Elm.Svcr, CDMCashAccount25Elm.Servicer);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccountType2_To_CDMCashAccountType2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccountType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccountType2Elm in CashAccountType2) {
    def CDMCashAccountType2ChoiceElm = CDMCashAccountType2Choice.secAddElement();
    CDMCashAccountType2ChoiceElm.Code = CashAccountType2Elm.Cd;
    CDMCashAccountType2ChoiceElm.Proprietary = CashAccountType2Elm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccountType2_To_CDMGenericIdentification20" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccountType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericIdentification20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccountType2Elm in CashAccountType2) {
    def CDMGenericIdentification20Elm = CDMGenericIdentification20.secAddElement();
    
    //Todo - toVerify
    CDMGenericIdentification20Elm.Identification = CashAccountType2Elm.Cd;
    CDMGenericIdentification20Elm.Issuer = CashAccountType2Elm.Prtry;
}
 //TODO : Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type.Identification -> ?
//TODO : Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type.Issuer -> ?
//TODO : Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type.SchemeName -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccountType2Choice_To_CDMCashAccountType2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccountType2ChoiceElm in CashAccountType2Choice) {
    def CDMCashAccountType2ChoiceElm = CDMCashAccountType2Choice.secAddElement();
    CDMCashAccountType2ChoiceElm.Code = CashAccountType2ChoiceElm.Cd;
    CDMCashAccountType2ChoiceElm.Proprietary = CashAccountType2ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashBalance3_To_CDMCashBalance3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashBalance3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashBalance3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashBalance3Elm in CashBalance3) {
    def CDMCashBalance3Elm = CDMCashBalance3.secAddElement();
    BalanceType12_To_CDMBalanceType12(CashBalance3Elm.Tp, CDMCashBalance3Elm.Type);
    CreditLine2_To_CDMCreditLine2(CashBalance3Elm.CdtLine, CDMCashBalance3Elm.CreditLine);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(CashBalance3Elm.Amt, CDMCashBalance3Elm.Amount);
    CDMCashBalance3Elm.CreditDebitIndicator = CashBalance3Elm.CdtDbtInd;
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice(CashBalance3Elm.Dt, CDMCashBalance3Elm.Date);
    CashBalanceAvailability2_To_CDMCashBalanceAvailability2(CashBalance3Elm.Avlbty, CDMCashBalance3Elm.Availability);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashBalanceAvailability2_To_CDMCashBalanceAvailability2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashBalanceAvailability2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashBalanceAvailability2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashBalanceAvailability2Elm in CashBalanceAvailability2) {
    def CDMCashBalanceAvailability2Elm = CDMCashBalanceAvailability2.secAddElement();
    CashBalanceAvailabilityDate1_To_CDMCashBalanceAvailabilityDate1(CashBalanceAvailability2Elm.Dt, CDMCashBalanceAvailability2Elm.Date);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(CashBalanceAvailability2Elm.Amt, CDMCashBalanceAvailability2Elm.Amount);
    CDMCashBalanceAvailability2Elm.CreditDebitIndicator = CashBalanceAvailability2Elm.CdtDbtInd;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashBalanceAvailabilityDate1_To_CDMCashBalanceAvailabilityDate1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashBalanceAvailabilityDate1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty.Dt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Avlbty.Dt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashBalanceAvailabilityDate1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability.Date</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Availability.Date</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashBalanceAvailabilityDate1Elm in CashBalanceAvailabilityDate1) {
    def CDMCashBalanceAvailabilityDate1Elm = CDMCashBalanceAvailabilityDate1.secAddElement();
	if (CashBalanceAvailabilityDate1Elm.NbOfDays.IsNotNull())
    CDMCashBalanceAvailabilityDate1Elm.NbOfDays = toBigInteger(CashBalanceAvailabilityDate1Elm.NbOfDays);
    CDMCashBalanceAvailabilityDate1Elm.ActlDt = CashBalanceAvailabilityDate1Elm.ActlDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashDeposit1_To_CDMCashDeposit1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashDeposit1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CshDpst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashDeposit1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CashDeposit</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashDeposit1Elm in CashDeposit1) {
    def CDMCashDeposit1Elm = CDMCashDeposit1.secAddElement();
    ActiveCurrencyAndAmount_To_CDMActiveCurrencyAndAmount(CashDeposit1Elm.NoteDnmtn, CDMCashDeposit1Elm.NoteDenomination);
    CDMCashDeposit1Elm.NumberOfNotes = CashDeposit1Elm.NbOfNotes;
    ActiveCurrencyAndAmount_To_CDMActiveCurrencyAndAmount(CashDeposit1Elm.Amt, CDMCashDeposit1Elm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CategoryPurpose1Choice_To_CDMCategoryPurpose1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CategoryPurpose1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.CtgyPurp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.CtgyPurp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCategoryPurpose1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.CategoryPurpose</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.CategoryPurpose</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CategoryPurpose1ChoiceElm in CategoryPurpose1Choice) {
    def CDMCategoryPurpose1ChoiceElm = CDMCategoryPurpose1Choice.secAddElement();
    CDMCategoryPurpose1ChoiceElm.Code = CategoryPurpose1ChoiceElm.Cd;
    CDMCategoryPurpose1ChoiceElm.Proprietary = CategoryPurpose1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Charges3_To_CDMCharges3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Charges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCharges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Charges3Elm in Charges3) {
    def CDMCharges3Elm = CDMCharges3.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(Charges3Elm.TtlChrgsAndTaxAmt, CDMCharges3Elm.TotalChargesAndTaxAmount);
    ChargesRecord1_To_CDMChargesRecord1(Charges3Elm.Rcrd, CDMCharges3Elm.Record);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ChargesInformation6_To_CDMCharges3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ChargesInformation6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCharges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ChargesInformation6Elm in ChargesInformation6) {
    def CDMCharges3Elm = CDMCharges3.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(ChargesInformation6Elm.TtlChrgsAndTaxAmt, CDMCharges3Elm.TotalChargesAndTaxAmount);
    def CDMChargesRecord1Elm = CDMCharges3Elm.Record.SecAddElement(); 
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(ChargesInformation6Elm.Amt,CDMChargesRecord1Elm.Amount);	
    CDMChargesRecord1Elm.CreditDebitIndicator = ChargesInformation6Elm.CdtDbtInd;
    ChargeType2Choice_To_CDMChargeType3Choice(ChargesInformation6Elm.Tp, CDMChargesRecord1Elm.Type);
    CDMChargesRecord1Elm.Rate = ChargesInformation6Elm.Rate;
    CDMChargesRecord1Elm.Bearer = ChargesInformation6Elm.Br;
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(ChargesInformation6Elm.Pty, CDMChargesRecord1Elm.Agent);
    TaxCharges2_To_CDMTaxCharges2(ChargesInformation6Elm.Tax, CDMChargesRecord1Elm.Tax);
    
}
 //TODO : Report.Entry.Charges.Record -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ChargesRecord1_To_CDMChargesRecord1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ChargesRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMChargesRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ChargesRecord1Elm in ChargesRecord1) {
    def CDMChargesRecord1Elm = CDMChargesRecord1.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(ChargesRecord1Elm.Amt, CDMChargesRecord1Elm.Amount);
    CDMChargesRecord1Elm.CreditDebitIndicator = ChargesRecord1Elm.CdtDbtInd;
    ChargeType3Choice_To_CDMChargeType3Choice(ChargesRecord1Elm.Tp, CDMChargesRecord1Elm.Type);
    CDMChargesRecord1Elm.Rate = ChargesRecord1Elm.Rate;
    CDMChargesRecord1Elm.Bearer = ChargesRecord1Elm.Br;
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(ChargesRecord1Elm.Agt, CDMChargesRecord1Elm.Agent);
    TaxCharges2_To_CDMTaxCharges2(ChargesRecord1Elm.Tax, CDMChargesRecord1Elm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ChargeType3Choice_To_CDMChargeType3Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ChargeType3ChoiceElm in ChargeType3Choice) {
    def CDMChargeType3ChoiceElm = CDMChargeType3Choice.secAddElement();
    CDMChargeType3ChoiceElm.Code = ChargeType3ChoiceElm.Cd;
    GenericIdentification3_To_CDMGenericIdentification3(ChargeType3ChoiceElm.Prtry, CDMChargeType3ChoiceElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ClearingSystemIdentification2Choice_To_CDMClearingSystemIdentification2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ClearingSystemIdentification2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMClearingSystemIdentification2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification.ClearingSystemIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification.ClearingSystemIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ClearingSystemIdentification2ChoiceElm in ClearingSystemIdentification2Choice) {
    def CDMClearingSystemIdentification2ChoiceElm = CDMClearingSystemIdentification2Choice.secAddElement();
    CDMClearingSystemIdentification2ChoiceElm.Code = ClearingSystemIdentification2ChoiceElm.Cd;
    CDMClearingSystemIdentification2ChoiceElm.Proprietary = ClearingSystemIdentification2ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ClearingSystemIdentification3Choice_To_CDMClearingSystemIdentification3Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ClearingSystemIdentification3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_CustomerPaymentReversalV03.Data.CstmrPmtRvsl.OrgnlPmtInfAndRvsl.TxInf.OrgnlTxRef.SttlmInf.ClrSys</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_CustomerPaymentReversalV03.Data.CstmrPmtRvsl.OrgnlPmtInfAndRvsl.TxInf.OrgnlTxRef.SttlmInf.ClrSys</description>
					</parameterfield>
					<parameterfield>
						<name>CDMClearingSystemIdentification3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentReversalV1.Data.OriginalPaymentInformationAndReversal.TransactionInformation.OriginalTransactionReference.SettlementInformation.ClearingSystem</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentReversalV1.Data.OriginalPaymentInformationAndReversal.TransactionInformation.OriginalTransactionReference.SettlementInformation.ClearingSystem</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ClearingSystemIdentification3ChoiceElm in ClearingSystemIdentification3Choice) {
    def CDMClearingSystemIdentification3ChoiceElm = CDMClearingSystemIdentification3Choice.secAddElement();
    CDMClearingSystemIdentification3ChoiceElm.Code = ClearingSystemIdentification3ChoiceElm.Cd;
    CDMClearingSystemIdentification3ChoiceElm.Proprietary = ClearingSystemIdentification3ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ClearingSystemMemberIdentification2_To_CDMClearingSystemMemberIdentification2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ClearingSystemMemberIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMClearingSystemMemberIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.ClearingSystemMemberIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ClearingSystemMemberIdentification2Elm in ClearingSystemMemberIdentification2) {
    def CDMClearingSystemMemberIdentification2Elm = CDMClearingSystemMemberIdentification2.secAddElement();
    ClearingSystemIdentification2Choice_To_CDMClearingSystemIdentification2Choice(ClearingSystemMemberIdentification2Elm.ClrSysId, CDMClearingSystemMemberIdentification2Elm.ClearingSystemIdentification);
    CDMClearingSystemMemberIdentification2Elm.MemberIdentification = ClearingSystemMemberIdentification2Elm.MmbId;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ContactDetails2_To_CDMContactDetails2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ContactDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.CtctDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.CtctDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMContactDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.ContactDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.ContactDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ContactDetails2Elm in ContactDetails2) {
    def CDMContactDetails2Elm = CDMContactDetails2.secAddElement();
    CDMContactDetails2Elm.NamePrefix = ContactDetails2Elm.NmPrfx;
    CDMContactDetails2Elm.Name = ContactDetails2Elm.Nm;
    CDMContactDetails2Elm.PhoneNumber = ContactDetails2Elm.PhneNb;
    CDMContactDetails2Elm.MobileNumber = ContactDetails2Elm.MobNb;
    CDMContactDetails2Elm.FaxNumber = ContactDetails2Elm.FaxNb;
    CDMContactDetails2Elm.EmailAddress = ContactDetails2Elm.EmailAdr;
    CDMContactDetails2Elm.Other = ContactDetails2Elm.Othr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CorporateAction1_To_CDMCorporateAction9" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CorporateAction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CorporateAction1Elm in CorporateAction1) {
    def CDMCorporateAction9Elm = CDMCorporateAction9.secAddElement();
    //todo - toVerify
    CDMCorporateAction9Elm.EventType = CorporateAction1Elm.Cd;
    CDMCorporateAction9Elm.EventIdentification = CorporateAction1Elm.Nb;
}
 //TODO : Report.Entry.EntryDetails.TransactionDetails.CorporateAction.EventType -> ?
//TODO : Report.Entry.EntryDetails.TransactionDetails.CorporateAction.EventIdentification -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CorporateAction9_To_CDMCorporateAction9" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CorpActn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CorporateAction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CorporateAction9Elm in CorporateAction9) {
    def CDMCorporateAction9Elm = CDMCorporateAction9.secAddElement();
    CDMCorporateAction9Elm.EventType = CorporateAction9Elm.EvtTp;
    CDMCorporateAction9Elm.EventIdentification = CorporateAction9Elm.EvtId;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CreditLine2_To_CDMCreditLine2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CreditLine2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.CdtLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.CdtLine</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCreditLine2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.CreditLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.CreditLine</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CreditLine2Elm in CreditLine2) {
    def CDMCreditLine2Elm = CDMCreditLine2.secAddElement();
    CDMCreditLine2Elm.Included = CreditLine2Elm.Incl;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(CreditLine2Elm.Amt, CDMCreditLine2Elm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CreditorReferenceInformation2_To_CDMCreditorReferenceInformation2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CreditorReferenceInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCreditorReferenceInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CreditorReferenceInformation2Elm in CreditorReferenceInformation2) {
    def CDMCreditorReferenceInformation2Elm = CDMCreditorReferenceInformation2.secAddElement();
    CreditorReferenceType2_To_CDMCreditorReferenceType2(CreditorReferenceInformation2Elm.Tp, CDMCreditorReferenceInformation2Elm.Type);
    CDMCreditorReferenceInformation2Elm.Reference = CreditorReferenceInformation2Elm.Ref;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CreditorReferenceType1Choice_To_CDMCreditorReferenceType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CreditorReferenceType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp.CdOrPrtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp.CdOrPrtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCreditorReferenceType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type.CodeOrProprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type.CodeOrProprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CreditorReferenceType1ChoiceElm in CreditorReferenceType1Choice) {
    def CDMCreditorReferenceType1ChoiceElm = CDMCreditorReferenceType1Choice.secAddElement();
    CDMCreditorReferenceType1ChoiceElm.Code = CreditorReferenceType1ChoiceElm.Cd;
    CDMCreditorReferenceType1ChoiceElm.Proprietary = CreditorReferenceType1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CreditorReferenceType2_To_CDMCreditorReferenceType2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CreditorReferenceType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.CdtrRefInf.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCreditorReferenceType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.CreditorReferenceInformation.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CreditorReferenceType2Elm in CreditorReferenceType2) {
    def CDMCreditorReferenceType2Elm = CDMCreditorReferenceType2.secAddElement();
    CreditorReferenceType1Choice_To_CDMCreditorReferenceType1Choice(CreditorReferenceType2Elm.CdOrPrtry, CDMCreditorReferenceType2Elm.CodeOrProprietary);
    CDMCreditorReferenceType2Elm.Issuer = CreditorReferenceType2Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CurrencyAndAmountRange2_To_CDMCurrencyAndAmountRange2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CurrencyAndAmountRange2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCurrencyAndAmountRange2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CurrencyAndAmountRange2Elm in CurrencyAndAmountRange2) {
    def CDMCurrencyAndAmountRange2Elm = CDMCurrencyAndAmountRange2.secAddElement();
    ImpliedCurrencyAmountRangeChoice_To_CDMImpliedCurrencyAmountRangeChoice(CurrencyAndAmountRange2Elm.Amt, CDMCurrencyAndAmountRange2Elm.Amount);
    CDMCurrencyAndAmountRange2Elm.CreditDebitIndicator = CurrencyAndAmountRange2Elm.CdtDbtInd;
    CDMCurrencyAndAmountRange2Elm.Currency = CurrencyAndAmountRange2Elm.Ccy;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CurrencyExchange5_To_CDMCurrencyExchange5" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CurrencyExchange5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt.CcyXchg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AmtDtls.InstdAmt.CcyXchg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCurrencyExchange5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount.CurrencyExchange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AmountDetails.InstructedAmount.CurrencyExchange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CurrencyExchange5Elm in CurrencyExchange5) {
    def CDMCurrencyExchange5Elm = CDMCurrencyExchange5.secAddElement();
    CDMCurrencyExchange5Elm.SourceCurrency = CurrencyExchange5Elm.SrcCcy;
    CDMCurrencyExchange5Elm.TargetCurrency = CurrencyExchange5Elm.TrgtCcy;
    CDMCurrencyExchange5Elm.UnitCurrency = CurrencyExchange5Elm.UnitCcy;
    CDMCurrencyExchange5Elm.ExchangeRate = CurrencyExchange5Elm.XchgRate;
    CDMCurrencyExchange5Elm.ContractIdentification = CurrencyExchange5Elm.CtrctId;
    CDMCurrencyExchange5Elm.QuotationDate = CurrencyExchange5Elm.QtnDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DateAndDateTimeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Dt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Bal.Dt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDateAndDateTimeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Date</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Balance.Date</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DateAndDateTimeChoiceElm in DateAndDateTimeChoice) {
    def CDMDateAndDateTimeChoiceElm = CDMDateAndDateTimeChoice.secAddElement();
    CDMDateAndDateTimeChoiceElm.Date = DateAndDateTimeChoiceElm.Dt;
    CDMDateAndDateTimeChoiceElm.DateTime = DateAndDateTimeChoiceElm.DtTm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DateAndPlaceOfBirth_To_CDMDateAndPlaceOfBirth" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DateAndPlaceOfBirth</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.DtAndPlcOfBirth</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.DtAndPlcOfBirth</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDateAndPlaceOfBirth</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.DateAndPlaceOfBirth</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.DateAndPlaceOfBirth</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DateAndPlaceOfBirthElm in DateAndPlaceOfBirth) {
    def CDMDateAndPlaceOfBirthElm = CDMDateAndPlaceOfBirth.secAddElement();
    CDMDateAndPlaceOfBirthElm.BirthDate = DateAndPlaceOfBirthElm.BirthDt;
    CDMDateAndPlaceOfBirthElm.ProvinceOfBirth = DateAndPlaceOfBirthElm.PrvcOfBirth;
    CDMDateAndPlaceOfBirthElm.CityOfBirth = DateAndPlaceOfBirthElm.CityOfBirth;
    CDMDateAndPlaceOfBirthElm.CountryOfBirth = DateAndPlaceOfBirthElm.CtryOfBirth;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DateOrDateTimePeriodChoice_To_CDMDateOrDateTimePeriodChoice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DateOrDateTimePeriodChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.TxDtRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.AggtdNtry.TxDtRg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDateOrDateTimePeriodChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.TransactionDateRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.AggregatedEntry.TransactionDateRange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DateOrDateTimePeriodChoiceElm in DateOrDateTimePeriodChoice) {
    def CDMDateOrDateTimePeriodChoiceElm = CDMDateOrDateTimePeriodChoice.secAddElement();
    DatePeriodDetails_To_CDMDatePeriodDetails(DateOrDateTimePeriodChoiceElm.Dt, CDMDateOrDateTimePeriodChoiceElm.Date);
    DateTimePeriodDetails_To_CDMDateTimePeriodDetails(DateOrDateTimePeriodChoiceElm.DtTm, CDMDateOrDateTimePeriodChoiceElm.DateTime);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DatePeriodDetails_To_CDMDatePeriodDetails" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DatePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd.FrToDt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd.FrToDt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDatePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period.FromToDate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period.FromToDate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DatePeriodDetailsElm in DatePeriodDetails) {
    def CDMDatePeriodDetailsElm = CDMDatePeriodDetails.secAddElement();
    CDMDatePeriodDetailsElm.FromDate = DatePeriodDetailsElm.FrDt;
    CDMDatePeriodDetailsElm.ToDate = DatePeriodDetailsElm.ToDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DateTimePeriodDetails_To_CDMDateTimePeriodDetails" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DateTimePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.FrToDt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.FrToDt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDateTimePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.FromToDate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.FromToDate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DateTimePeriodDetailsElm in DateTimePeriodDetails) {
    def CDMDateTimePeriodDetailsElm = CDMDateTimePeriodDetails.secAddElement();
    CDMDateTimePeriodDetailsElm.FromDateTime = DateTimePeriodDetailsElm.FrDtTm;
    CDMDateTimePeriodDetailsElm.ToDateTime = DateTimePeriodDetailsElm.ToDtTm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DiscountAmountAndType1_To_CDMDiscountAmountAndType1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DiscountAmountAndType1Elm in DiscountAmountAndType1) {
    def CDMDiscountAmountAndType1Elm = CDMDiscountAmountAndType1.secAddElement();
    DiscountAmountType1Choice_To_CDMDiscountAmountType1Choice(DiscountAmountAndType1Elm.Tp, CDMDiscountAmountAndType1Elm.Type);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(DiscountAmountAndType1Elm.Amt, CDMDiscountAmountAndType1Elm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DiscountAmountType1Choice_To_CDMDiscountAmountType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DiscountAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDiscountAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DiscountAmountType1ChoiceElm in DiscountAmountType1Choice) {
    def CDMDiscountAmountType1ChoiceElm = CDMDiscountAmountType1Choice.secAddElement();
    CDMDiscountAmountType1ChoiceElm.Code = DiscountAmountType1ChoiceElm.Cd;
    CDMDiscountAmountType1ChoiceElm.Proprietary = DiscountAmountType1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DisplayCapabilities1_To_CDMDisplayCapabilities1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DisplayCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.DispCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties.DispCpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDisplayCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DisplayCapabilities1Elm in DisplayCapabilities1) {
    def CDMDisplayCapabilities1Elm = CDMDisplayCapabilities1.secAddElement();
    CDMDisplayCapabilities1Elm.DisplayType = DisplayCapabilities1Elm.DispTp;
    CDMDisplayCapabilities1Elm.NumberOfLines = DisplayCapabilities1Elm.NbOfLines;
    if (DisplayCapabilities1Elm.LineWidth.IsNotNull())
    CDMDisplayCapabilities1Elm.LineWidth = toBigInteger(DisplayCapabilities1Elm.LineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DocumentAdjustment1_To_CDMDocumentAdjustment1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DocumentAdjustment1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.AdjstmntAmtAndRsn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt.AdjstmntAmtAndRsn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDocumentAdjustment1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.AdjustmentAmountAndReason</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount.AdjustmentAmountAndReason</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DocumentAdjustment1Elm in DocumentAdjustment1) {
    def CDMDocumentAdjustment1Elm = CDMDocumentAdjustment1.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(DocumentAdjustment1Elm.Amt, CDMDocumentAdjustment1Elm.Amount);
    CDMDocumentAdjustment1Elm.CreditDebitIndicator = DocumentAdjustment1Elm.CdtDbtInd;
    CDMDocumentAdjustment1Elm.Reason = DocumentAdjustment1Elm.Rsn;
    CDMDocumentAdjustment1Elm.AdditionalInformation = DocumentAdjustment1Elm.AddtlInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EntryDetails1_To_CDMEntryDetails2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EntryDetails1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EntryDetails1Elm in EntryDetails1) {
    def CDMEntryDetails2Elm = CDMEntryDetails2.secAddElement();
    BatchInformation2_To_CDMBatchInformation2(EntryDetails1Elm.Btch, CDMEntryDetails2Elm.Batch);
    EntryTransaction2_To_CDMEntryTransaction3(EntryDetails1Elm.TxDtls, CDMEntryDetails2Elm.TransactionDetails);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EntryDetails2_To_CDMEntryDetails2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EntryDetails2Elm in EntryDetails2) {
    def CDMEntryDetails2Elm = CDMEntryDetails2.secAddElement();
    BatchInformation2_To_CDMBatchInformation2(EntryDetails2Elm.Btch, CDMEntryDetails2Elm.Batch);
    EntryTransaction3_To_CDMEntryTransaction3(EntryDetails2Elm.TxDtls, CDMEntryDetails2Elm.TransactionDetails);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EntryTransaction2_To_CDMEntryTransaction3" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EntryTransaction2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EntryTransaction2Elm in EntryTransaction2) {
    def CDMEntryTransaction3Elm = CDMEntryTransaction3.secAddElement();
    TransactionReferences2_To_CDMTransactionReferences3(EntryTransaction2Elm.Refs, CDMEntryTransaction3Elm.References);

	//Todo - toVerify
	def amt  = CDMEntryTransaction3Elm.Amount.SecAddElement();
	amt.Ccy = "USD";
	amt.Value = 0m;
	CDMEntryTransaction3Elm.CreditDebitIndicator = "CRDT";
    //TODO : Report.Entry.EntryDetails.TransactionDetails.Amount -> ?
    //TODO : Report.Entry.EntryDetails.TransactionDetails.CreditDebitIndicator -> ?
    AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchange3(EntryTransaction2Elm.AmtDtls, CDMEntryTransaction3Elm.AmountDetails);
    CashBalanceAvailability2_To_CDMCashBalanceAvailability2(EntryTransaction2Elm.Avlbty, CDMEntryTransaction3Elm.Availability);
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(EntryTransaction2Elm.BkTxCd, CDMEntryTransaction3Elm.BankTransactionCode);
    ChargesInformation6_To_CDMCharges3(EntryTransaction2Elm.Chrgs, CDMEntryTransaction3Elm.Charges);
    TransactionInterest2_To_CDMTransactionInterest3(EntryTransaction2Elm.Intrst, CDMEntryTransaction3Elm.Interest);
    TransactionParty2_To_CDMTransactionParties3(EntryTransaction2Elm.RltdPties, CDMEntryTransaction3Elm.RelatedParties);
    TransactionAgents2_To_CDMTransactionAgents3(EntryTransaction2Elm.RltdAgts, CDMEntryTransaction3Elm.RelatedAgents);
    Purpose2Choice_To_CDMPurpose2Choice(EntryTransaction2Elm.Purp, CDMEntryTransaction3Elm.Purpose);
    RemittanceLocation2_To_CDMRemittanceLocation2(EntryTransaction2Elm.RltdRmtInf, CDMEntryTransaction3Elm.RelatedRemittanceInformation);
    RemittanceInformation5_To_CDMRemittanceInformation7(EntryTransaction2Elm.RmtInf, CDMEntryTransaction3Elm.RemittanceInformation);
    TransactionDates2_To_CDMTransactionDates2(EntryTransaction2Elm.RltdDts, CDMEntryTransaction3Elm.RelatedDates);
    TransactionPrice2Choice_To_CDMTransactionPrice3Choice(EntryTransaction2Elm.RltdPric, CDMEntryTransaction3Elm.RelatedPrice);
    TransactionQuantities1Choice_To_CDMTransactionQuantities2Choice(EntryTransaction2Elm.RltdQties, CDMEntryTransaction3Elm.RelatedQuantities);
    SecurityIdentification4Choice_To_CDMSecurityIdentification14(EntryTransaction2Elm.FinInstrmId, CDMEntryTransaction3Elm.FinancialInstrumentIdentification);
    TaxInformation3_To_CDMTaxInformation3(EntryTransaction2Elm.Tax, CDMEntryTransaction3Elm.Tax);
    ReturnReasonInformation10_To_CDMPaymentReturnReason2(EntryTransaction2Elm.RtrInf, CDMEntryTransaction3Elm.ReturnInformation);
    CorporateAction1_To_CDMCorporateAction9(EntryTransaction2Elm.CorpActn, CDMEntryTransaction3Elm.CorporateAction);
    CashAccount16_To_CDMSecuritiesAccount13(EntryTransaction2Elm.SfkpgAcct, CDMEntryTransaction3Elm.SafekeepingAccount);
    //TODO : Report.Entry.EntryDetails.TransactionDetails.CashDeposit -> ?
    //TODO : Report.Entry.EntryDetails.TransactionDetails.CardTransaction -> ?
    CDMEntryTransaction3Elm.AdditionalTransactionInformation = EntryTransaction2Elm.AddtlTxInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EntryTransaction3_To_CDMEntryTransaction3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EntryTransaction3Elm in EntryTransaction3) {
    def CDMEntryTransaction3Elm = CDMEntryTransaction3.secAddElement();
    TransactionReferences3_To_CDMTransactionReferences3(EntryTransaction3Elm.Refs, CDMEntryTransaction3Elm.References);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(EntryTransaction3Elm.Amt, CDMEntryTransaction3Elm.Amount);
    CDMEntryTransaction3Elm.CreditDebitIndicator = EntryTransaction3Elm.CdtDbtInd;
    AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchange3(EntryTransaction3Elm.AmtDtls, CDMEntryTransaction3Elm.AmountDetails);
    CashBalanceAvailability2_To_CDMCashBalanceAvailability2(EntryTransaction3Elm.Avlbty, CDMEntryTransaction3Elm.Availability);
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(EntryTransaction3Elm.BkTxCd, CDMEntryTransaction3Elm.BankTransactionCode);
    Charges3_To_CDMCharges3(EntryTransaction3Elm.Chrgs, CDMEntryTransaction3Elm.Charges);
    TransactionInterest3_To_CDMTransactionInterest3(EntryTransaction3Elm.Intrst, CDMEntryTransaction3Elm.Interest);
    TransactionParties3_To_CDMTransactionParties3(EntryTransaction3Elm.RltdPties, CDMEntryTransaction3Elm.RelatedParties);
    TransactionAgents3_To_CDMTransactionAgents3(EntryTransaction3Elm.RltdAgts, CDMEntryTransaction3Elm.RelatedAgents);
    Purpose2Choice_To_CDMPurpose2Choice(EntryTransaction3Elm.Purp, CDMEntryTransaction3Elm.Purpose);
    RemittanceLocation2_To_CDMRemittanceLocation2(EntryTransaction3Elm.RltdRmtInf, CDMEntryTransaction3Elm.RelatedRemittanceInformation);
    RemittanceInformation7_To_CDMRemittanceInformation7(EntryTransaction3Elm.RmtInf, CDMEntryTransaction3Elm.RemittanceInformation);
    TransactionDates2_To_CDMTransactionDates2(EntryTransaction3Elm.RltdDts, CDMEntryTransaction3Elm.RelatedDates);
    TransactionPrice3Choice_To_CDMTransactionPrice3Choice(EntryTransaction3Elm.RltdPric, CDMEntryTransaction3Elm.RelatedPrice);
    TransactionQuantities2Choice_To_CDMTransactionQuantities2Choice(EntryTransaction3Elm.RltdQties, CDMEntryTransaction3Elm.RelatedQuantities);
    SecurityIdentification14_To_CDMSecurityIdentification14(EntryTransaction3Elm.FinInstrmId, CDMEntryTransaction3Elm.FinancialInstrumentIdentification);
    TaxInformation3_To_CDMTaxInformation3(EntryTransaction3Elm.Tax, CDMEntryTransaction3Elm.Tax);
    PaymentReturnReason2_To_CDMPaymentReturnReason2(EntryTransaction3Elm.RtrInf, CDMEntryTransaction3Elm.ReturnInformation);
    CorporateAction9_To_CDMCorporateAction9(EntryTransaction3Elm.CorpActn, CDMEntryTransaction3Elm.CorporateAction);
    SecuritiesAccount13_To_CDMSecuritiesAccount13(EntryTransaction3Elm.SfkpgAcct, CDMEntryTransaction3Elm.SafekeepingAccount);
    CashDeposit1_To_CDMCashDeposit1(EntryTransaction3Elm.CshDpst, CDMEntryTransaction3Elm.CashDeposit);
    CardTransaction1_To_CDMCardTransaction1(EntryTransaction3Elm.CardTx, CDMEntryTransaction3Elm.CardTransaction);
    CDMEntryTransaction3Elm.AdditionalTransactionInformation = EntryTransaction3Elm.AddtlTxInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EquivalentAmount2_To_CDMEquivalentAmount2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EquivalentAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt.EqvtAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.Amt.EqvtAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEquivalentAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount.EqvtAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.Amount.EqvtAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EquivalentAmount2Elm in EquivalentAmount2) {
    def CDMEquivalentAmount2Elm = CDMEquivalentAmount2.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(EquivalentAmount2Elm.Amt, CDMEquivalentAmount2Elm.Amount);
    CDMEquivalentAmount2Elm.CurrencyOfTransfer = EquivalentAmount2Elm.CcyOfTrf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FinancialIdentificationSchemeName1Choice_To_CDMFinancialIdentificationSchemeName1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FinancialIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFinancialIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other.SchemeName</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FinancialIdentificationSchemeName1ChoiceElm in FinancialIdentificationSchemeName1Choice) {
    def CDMFinancialIdentificationSchemeName1ChoiceElm = CDMFinancialIdentificationSchemeName1Choice.secAddElement();
    CDMFinancialIdentificationSchemeName1ChoiceElm.Code = FinancialIdentificationSchemeName1ChoiceElm.Cd;
    CDMFinancialIdentificationSchemeName1ChoiceElm.Proprietary = FinancialIdentificationSchemeName1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FinancialInstitutionIdentification7_To_CDMFinancialInstitutionIdentification8" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FinancialInstitutionIdentification7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FinancialInstitutionIdentification7Elm in FinancialInstitutionIdentification7) {
    def CDMFinancialInstitutionIdentification8Elm = CDMFinancialInstitutionIdentification8.secAddElement();
    CDMFinancialInstitutionIdentification8Elm.BICFI = FinancialInstitutionIdentification7Elm.BIC;
    ClearingSystemMemberIdentification2_To_CDMClearingSystemMemberIdentification2(FinancialInstitutionIdentification7Elm.ClrSysMmbId, CDMFinancialInstitutionIdentification8Elm.ClearingSystemMemberIdentification);
    CDMFinancialInstitutionIdentification8Elm.Name = FinancialInstitutionIdentification7Elm.Nm;
    PostalAddress6_To_CDMPostalAddress6(FinancialInstitutionIdentification7Elm.PstlAdr, CDMFinancialInstitutionIdentification8Elm.PostalAddress);
    GenericFinancialIdentification1_To_CDMGenericFinancialIdentification1(FinancialInstitutionIdentification7Elm.Othr, CDMFinancialInstitutionIdentification8Elm.Other);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FinancialInstitutionIdentification8_To_CDMFinancialInstitutionIdentification8" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr.FinInstnId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Acct.Svcr.FinInstnId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer.FinancialInstitutionIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Account.Servicer.FinancialInstitutionIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FinancialInstitutionIdentification8Elm in FinancialInstitutionIdentification8) {
    def CDMFinancialInstitutionIdentification8Elm = CDMFinancialInstitutionIdentification8.secAddElement();
    CDMFinancialInstitutionIdentification8Elm.BICFI = FinancialInstitutionIdentification8Elm.BICFI;
    ClearingSystemMemberIdentification2_To_CDMClearingSystemMemberIdentification2(FinancialInstitutionIdentification8Elm.ClrSysMmbId, CDMFinancialInstitutionIdentification8Elm.ClearingSystemMemberIdentification);
    CDMFinancialInstitutionIdentification8Elm.Name = FinancialInstitutionIdentification8Elm.Nm;
    PostalAddress6_To_CDMPostalAddress6(FinancialInstitutionIdentification8Elm.PstlAdr, CDMFinancialInstitutionIdentification8Elm.PostalAddress);
    GenericFinancialIdentification1_To_CDMGenericFinancialIdentification1(FinancialInstitutionIdentification8Elm.Othr, CDMFinancialInstitutionIdentification8Elm.Other);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FinancialInstrumentQuantityChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Qty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Qty</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFinancialInstrumentQuantityChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Quantity</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Quantity</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FinancialInstrumentQuantityChoiceElm in FinancialInstrumentQuantityChoice) {
    def CDMFinancialInstrumentQuantityChoiceElm = CDMFinancialInstrumentQuantityChoice.secAddElement();
    CDMFinancialInstrumentQuantityChoiceElm.Unit = FinancialInstrumentQuantityChoiceElm.Unit;
    CDMFinancialInstrumentQuantityChoiceElm.FaceAmount = FinancialInstrumentQuantityChoiceElm.FaceAmt;
    CDMFinancialInstrumentQuantityChoiceElm.AmortisedValue = FinancialInstrumentQuantityChoiceElm.AmtsdVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FromToAmountRange_To_CDMFromToAmountRange" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FromToAmountRange</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrToAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt.FrToAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFromToAmountRange</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromToAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount.FromToAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FromToAmountRangeElm in FromToAmountRange) {
    def CDMFromToAmountRangeElm = CDMFromToAmountRange.secAddElement();
    AmountRangeBoundary1_To_CDMAmountRangeBoundary1(FromToAmountRangeElm.FrAmt, CDMFromToAmountRangeElm.FromAmount);
    AmountRangeBoundary1_To_CDMAmountRangeBoundary1(FromToAmountRangeElm.ToAmt, CDMFromToAmountRangeElm.ToAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericAccountIdentification1_To_CDMGenericAccountIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericAccountIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.SttlmInf.SttlmAcct.Id.Othr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericAccountIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.SettlementInformation.SettlementAccount.Identification.Other</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericAccountIdentification1Elm in GenericAccountIdentification1) {
    def CDMGenericAccountIdentification1Elm = CDMGenericAccountIdentification1.secAddElement();
    CDMGenericAccountIdentification1Elm.Identification = GenericAccountIdentification1Elm.Id;
    AccountSchemeName1Choice_To_CDMAccountSchemeName1Choice(GenericAccountIdentification1Elm.SchmeNm, CDMGenericAccountIdentification1Elm.SchemeName);
    CDMGenericAccountIdentification1Elm.Issuer = GenericAccountIdentification1Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericFinancialIdentification1_To_CDMGenericFinancialIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericFinancialIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.FwdgAgt.FinInstnId.Othr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericFinancialIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.ForwardingAgent.FinancialInstitutionIdentification.Other</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericFinancialIdentification1Elm in GenericFinancialIdentification1) {
    def CDMGenericFinancialIdentification1Elm = CDMGenericFinancialIdentification1.secAddElement();
    CDMGenericFinancialIdentification1Elm.Identification = GenericFinancialIdentification1Elm.Id;
    FinancialIdentificationSchemeName1Choice_To_CDMFinancialIdentificationSchemeName1Choice(GenericFinancialIdentification1Elm.SchmeNm, CDMGenericFinancialIdentification1Elm.SchemeName);
    CDMGenericFinancialIdentification1Elm.Issuer = GenericFinancialIdentification1Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericIdentification1_To_CDMGenericIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.CardBrnd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.CardBrnd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.CardBrand</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.CardBrand</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericIdentification1Elm in GenericIdentification1) {
    def CDMGenericIdentification1Elm = CDMGenericIdentification1.secAddElement();
    CDMGenericIdentification1Elm.Identification = GenericIdentification1Elm.Id;
    CDMGenericIdentification1Elm.SchemeName = GenericIdentification1Elm.SchmeNm;
    CDMGenericIdentification1Elm.Issuer = GenericIdentification1Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericIdentification20_To_CDMGenericIdentification20" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericIdentification20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericIdentification20</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericIdentification20Elm in GenericIdentification20) {
    def CDMGenericIdentification20Elm = CDMGenericIdentification20.secAddElement();
    CDMGenericIdentification20Elm.Identification = GenericIdentification20Elm.Id;
    CDMGenericIdentification20Elm.Issuer = GenericIdentification20Elm.Issr;
    CDMGenericIdentification20Elm.SchemeName = GenericIdentification20Elm.SchmeNm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericIdentification32_To_CDMGenericIdentification32" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Id</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Identification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericIdentification32Elm in GenericIdentification32) {
    def CDMGenericIdentification32Elm = CDMGenericIdentification32.secAddElement();
    CDMGenericIdentification32Elm.Identification = GenericIdentification32Elm.Id;
    CDMGenericIdentification32Elm.Type = GenericIdentification32Elm.Tp;
    CDMGenericIdentification32Elm.Issuer = GenericIdentification32Elm.Issr;
    CDMGenericIdentification32Elm.ShortName = GenericIdentification32Elm.ShrtNm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericIdentification3_To_CDMGenericIdentification3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericIdentification3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Rcrd.Tp.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericIdentification3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericIdentification3Elm in GenericIdentification3) {
    def CDMGenericIdentification3Elm = CDMGenericIdentification3.secAddElement();
    CDMGenericIdentification3Elm.Identification = GenericIdentification3Elm.Id;
    CDMGenericIdentification3Elm.Issuer = GenericIdentification3Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericOrganisationIdentification1_To_CDMGenericOrganisationIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericOrganisationIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericOrganisationIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericOrganisationIdentification1Elm in GenericOrganisationIdentification1) {
    def CDMGenericOrganisationIdentification1Elm = CDMGenericOrganisationIdentification1.secAddElement();
    CDMGenericOrganisationIdentification1Elm.Identification = GenericOrganisationIdentification1Elm.Id;
    OrganisationIdentificationSchemeName1Choice_To_CDMOrganisationIdentificationSchemeName1Choice(GenericOrganisationIdentification1Elm.SchmeNm, CDMGenericOrganisationIdentification1Elm.SchemeName);
    CDMGenericOrganisationIdentification1Elm.Issuer = GenericOrganisationIdentification1Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericPersonIdentification1_To_CDMGenericPersonIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericPersonIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericPersonIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericPersonIdentification1Elm in GenericPersonIdentification1) {
    def CDMGenericPersonIdentification1Elm = CDMGenericPersonIdentification1.secAddElement();
    CDMGenericPersonIdentification1Elm.Identification = GenericPersonIdentification1Elm.Id;
    PersonIdentificationSchemeName1Choice_To_CDMPersonIdentificationSchemeName1Choice(GenericPersonIdentification1Elm.SchmeNm, CDMGenericPersonIdentification1Elm.SchemeName);
    CDMGenericPersonIdentification1Elm.Issuer = GenericPersonIdentification1Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GroupHeader42_To_CDMGroupHeader58" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GroupHeader42</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.GrpHdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.GrpHdr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GroupHeader42Elm in GroupHeader42) {
    def CDMGroupHeader58Elm = CDMGroupHeader58.secAddElement();
    CDMGroupHeader58Elm.MessageIdentification = GroupHeader42Elm.MsgId;
    CDMGroupHeader58Elm.CreationDateTime = GroupHeader42Elm.CreDtTm;
    PartyIdentification32_To_CDMPartyIdentification43(GroupHeader42Elm.MsgRcpt, CDMGroupHeader58Elm.MessageRecipient);
    Pagination_To_CDMPagination(GroupHeader42Elm.MsgPgntn, CDMGroupHeader58Elm.MessagePagination);
    //TODO : GroupHeader.OriginalBusinessQuery -> ?
    CDMGroupHeader58Elm.AdditionalInformation = GroupHeader42Elm.AddtlInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GroupHeader58_To_CDMGroupHeader58" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GroupHeader58Elm in GroupHeader58) {
    def CDMGroupHeader58Elm = CDMGroupHeader58.secAddElement();
    CDMGroupHeader58Elm.MessageIdentification = GroupHeader58Elm.MsgId;
    CDMGroupHeader58Elm.CreationDateTime = GroupHeader58Elm.CreDtTm;
    PartyIdentification43_To_CDMPartyIdentification43(GroupHeader58Elm.MsgRcpt, CDMGroupHeader58Elm.MessageRecipient);
    Pagination_To_CDMPagination(GroupHeader58Elm.MsgPgntn, CDMGroupHeader58Elm.MessagePagination);
    OriginalBusinessQuery1_To_CDMOriginalBusinessQuery1(GroupHeader58Elm.OrgnlBizQry, CDMGroupHeader58Elm.OriginalBusinessQuery);
    CDMGroupHeader58Elm.AdditionalInformation = GroupHeader58Elm.AddtlInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="IdentificationSource3Choice_To_CDMIdentificationSource3Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>IdentificationSource3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMIdentificationSource3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def IdentificationSource3ChoiceElm in IdentificationSource3Choice) {
    def CDMIdentificationSource3ChoiceElm = CDMIdentificationSource3Choice.secAddElement();
    CDMIdentificationSource3ChoiceElm.Code = IdentificationSource3ChoiceElm.Cd;
    CDMIdentificationSource3ChoiceElm.Proprietary = IdentificationSource3ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ImpliedCurrencyAmountRangeChoice_To_CDMImpliedCurrencyAmountRangeChoice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ImpliedCurrencyAmountRangeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.VldtyRg.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMImpliedCurrencyAmountRangeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.ValidityRange.Amount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ImpliedCurrencyAmountRangeChoiceElm in ImpliedCurrencyAmountRangeChoice) {
    def CDMImpliedCurrencyAmountRangeChoiceElm = CDMImpliedCurrencyAmountRangeChoice.secAddElement();
    AmountRangeBoundary1_To_CDMAmountRangeBoundary1(ImpliedCurrencyAmountRangeChoiceElm.FrAmt, CDMImpliedCurrencyAmountRangeChoiceElm.FromAmount);
    AmountRangeBoundary1_To_CDMAmountRangeBoundary1(ImpliedCurrencyAmountRangeChoiceElm.ToAmt, CDMImpliedCurrencyAmountRangeChoiceElm.ToAmount);
    FromToAmountRange_To_CDMFromToAmountRange(ImpliedCurrencyAmountRangeChoiceElm.FrToAmt, CDMImpliedCurrencyAmountRangeChoiceElm.FromToAmount);
    CDMImpliedCurrencyAmountRangeChoiceElm.EqualAmount = ImpliedCurrencyAmountRangeChoiceElm.EQAmt;
    CDMImpliedCurrencyAmountRangeChoiceElm.NotEqualAmount = ImpliedCurrencyAmountRangeChoiceElm.NEQAmt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="InterestRecord1_To_CDMInterestRecord1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>InterestRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst.Rcrd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMInterestRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest.Record</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def InterestRecord1Elm in InterestRecord1) {
    def CDMInterestRecord1Elm = CDMInterestRecord1.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(InterestRecord1Elm.Amt, CDMInterestRecord1Elm.Amount);
    CDMInterestRecord1Elm.CreditDebitIndicator = InterestRecord1Elm.CdtDbtInd;
    InterestType1Choice_To_CDMInterestType1Choice(InterestRecord1Elm.Tp, CDMInterestRecord1Elm.Type);
    Rate3_To_CDMRate3(InterestRecord1Elm.Rate, CDMInterestRecord1Elm.Rate);
    DateTimePeriodDetails_To_CDMDateTimePeriodDetails(InterestRecord1Elm.FrToDt, CDMInterestRecord1Elm.FromToDate);
    CDMInterestRecord1Elm.Reason = InterestRecord1Elm.Rsn;
    TaxCharges2_To_CDMTaxCharges2(InterestRecord1Elm.Tax, CDMInterestRecord1Elm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="InterestType1Choice_To_CDMInterestType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>InterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMInterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def InterestType1ChoiceElm in InterestType1Choice) {
    def CDMInterestType1ChoiceElm = CDMInterestType1Choice.secAddElement();
    CDMInterestType1ChoiceElm.Code = InterestType1ChoiceElm.Cd;
    CDMInterestType1ChoiceElm.Proprietary = InterestType1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="LocalInstrument2Choice_To_CDMLocalInstrument2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>LocalInstrument2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.LclInstrm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.LclInstrm</description>
					</parameterfield>
					<parameterfield>
						<name>CDMLocalInstrument2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.LocalInstrument</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.LocalInstrument</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def LocalInstrument2ChoiceElm in LocalInstrument2Choice) {
    def CDMLocalInstrument2ChoiceElm = CDMLocalInstrument2Choice.secAddElement();
    CDMLocalInstrument2ChoiceElm.Code = LocalInstrument2ChoiceElm.Cd;
    CDMLocalInstrument2ChoiceElm.Proprietary = LocalInstrument2ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="MandateRelatedInformation6_To_CDMMandateRelatedInformation8" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>MandateRelatedInformation6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMMandateRelatedInformation8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def MandateRelatedInformation6Elm in MandateRelatedInformation6) {
    def CDMMandateRelatedInformation8Elm = CDMMandateRelatedInformation8.secAddElement();
    CDMMandateRelatedInformation8Elm.MandateIdentification = MandateRelatedInformation6Elm.MndtId;
    CDMMandateRelatedInformation8Elm.DateOfSignature = MandateRelatedInformation6Elm.DtOfSgntr;
    CDMMandateRelatedInformation8Elm.AmendmentIndicator = MandateRelatedInformation6Elm.AmdmntInd;
    AmendmentInformationDetails6_To_CDMAmendmentInformationDetails8(MandateRelatedInformation6Elm.AmdmntInfDtls, CDMMandateRelatedInformation8Elm.AmendmentInformationDetails);
    CDMMandateRelatedInformation8Elm.ElectronicSignature = MandateRelatedInformation6Elm.ElctrncSgntr;
    CDMMandateRelatedInformation8Elm.FirstCollectionDate = MandateRelatedInformation6Elm.FrstColltnDt;
    CDMMandateRelatedInformation8Elm.FinalCollectionDate = MandateRelatedInformation6Elm.FnlColltnDt;
    CDMMandateRelatedInformation8Elm.Frequency = MandateRelatedInformation6Elm.Frqcy;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="MandateRelatedInformation8_To_CDMMandateRelatedInformation8" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>MandateRelatedInformation8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_CustomerDirectDebitInitiationV03.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.DrctDbtTx.MndtRltdInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMMandateRelatedInformation8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.DirectDebitTransaction.MandateRelatedInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def MandateRelatedInformation8Elm in MandateRelatedInformation8) {
    def CDMMandateRelatedInformation8Elm = CDMMandateRelatedInformation8.secAddElement();
    CDMMandateRelatedInformation8Elm.MandateIdentification = MandateRelatedInformation8Elm.MndtId;
    CDMMandateRelatedInformation8Elm.DateOfSignature = MandateRelatedInformation8Elm.DtOfSgntr;
    CDMMandateRelatedInformation8Elm.AmendmentIndicator = MandateRelatedInformation8Elm.AmdmntInd;
    AmendmentInformationDetails8_To_CDMAmendmentInformationDetails8(MandateRelatedInformation8Elm.AmdmntInfDtls, CDMMandateRelatedInformation8Elm.AmendmentInformationDetails);
    CDMMandateRelatedInformation8Elm.ElectronicSignature = MandateRelatedInformation8Elm.ElctrncSgntr;
    CDMMandateRelatedInformation8Elm.FirstCollectionDate = MandateRelatedInformation8Elm.FrstColltnDt;
    CDMMandateRelatedInformation8Elm.FinalCollectionDate = MandateRelatedInformation8Elm.FnlColltnDt;
    CDMMandateRelatedInformation8Elm.Frequency = MandateRelatedInformation8Elm.Frqcy;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Max105Text_To_CDMstring" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Max105Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Max105TextElm in Max105Text) {
    def CDMstringElm = CDMstring.secAddElement();
    CDMstringElm.Value = Max105TextElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Max140Text_To_CDMstring" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Max140Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Ustrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Ustrd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Unstructured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Unstructured</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Max140TextElm in Max140Text) {
    def CDMstringElm = CDMstring.secAddElement();
    CDMstringElm.Value = Max140TextElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Max35Text_To_CDMstring" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Max35Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls.Inf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls.Inf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details.Information</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details.Information</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Max35TextElm in Max35Text) {
    def CDMstringElm = CDMstring.secAddElement();
    CDMstringElm.Value = Max35TextElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Max70Text_To_CDMstring" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Max70Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr.AdrLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr.AdrLine</description>
					</parameterfield>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress.AddressLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress.AddressLine</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Max70TextElm in Max70Text) {
    def CDMstringElm = CDMstring.secAddElement();
    CDMstringElm.Value = Max70TextElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="MessageIdentification2_To_CDMMessageIdentification2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>MessageIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AddtlInfInd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.AddtlInfInd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMMessageIdentification2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AdditionalInformationIndicator</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.AdditionalInformationIndicator</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def MessageIdentification2Elm in MessageIdentification2) {
    def CDMMessageIdentification2Elm = CDMMessageIdentification2.secAddElement();
    CDMMessageIdentification2Elm.MessageNameIdentification = MessageIdentification2Elm.MsgNmId;
    CDMMessageIdentification2Elm.MessageIdentification = MessageIdentification2Elm.MsgId;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="NameAndAddress10_To_CDMNameAndAddress10" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>NameAndAddress10</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf.RmtLctnPstlAdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf.RmtLctnPstlAdr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMNameAndAddress10</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation.RemittanceLocationPostalAddress</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation.RemittanceLocationPostalAddress</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def NameAndAddress10Elm in NameAndAddress10) {
    def CDMNameAndAddress10Elm = CDMNameAndAddress10.secAddElement();
    CDMNameAndAddress10Elm.Name = NameAndAddress10Elm.Nm;
    PostalAddress6_To_CDMPostalAddress6(NameAndAddress10Elm.Adr, CDMNameAndAddress10Elm.Address);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="NumberAndSumOfTransactions1_To_CDMNumberAndSumOfTransactions1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>NumberAndSumOfTransactions1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlCdtNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlCdtNtries</description>
					</parameterfield>
					<parameterfield>
						<name>CDMNumberAndSumOfTransactions1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalCreditEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalCreditEntries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def NumberAndSumOfTransactions1Elm in NumberAndSumOfTransactions1) {
    def CDMNumberAndSumOfTransactions1Elm = CDMNumberAndSumOfTransactions1.secAddElement();
    CDMNumberAndSumOfTransactions1Elm.NumberOfEntries = NumberAndSumOfTransactions1Elm.NbOfNtries;
    CDMNumberAndSumOfTransactions1Elm.Sum = NumberAndSumOfTransactions1Elm.Sum;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="NumberAndSumOfTransactions2_To_CDMNumberAndSumOfTransactions2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>NumberAndSumOfTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</description>
					</parameterfield>
					<parameterfield>
						<name>CDMNumberAndSumOfTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary.TotalEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary.TotalEntries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def NumberAndSumOfTransactions2Elm in NumberAndSumOfTransactions2) {
    def CDMNumberAndSumOfTransactions2Elm = CDMNumberAndSumOfTransactions2.secAddElement();
    CDMNumberAndSumOfTransactions2Elm.NumberOfEntries = NumberAndSumOfTransactions2Elm.NbOfNtries;
    CDMNumberAndSumOfTransactions2Elm.Sum = NumberAndSumOfTransactions2Elm.Sum;
    CDMNumberAndSumOfTransactions2Elm.TotalNetEntryAmount = NumberAndSumOfTransactions2Elm.TtlNetNtryAmt;
    CDMNumberAndSumOfTransactions2Elm.CreditDebitIndicator = NumberAndSumOfTransactions2Elm.CdtDbtInd;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OrganisationIdentification4_To_CDMOrganisationIdentification8" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OrganisationIdentification4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOrganisationIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OrganisationIdentification4Elm in OrganisationIdentification4) {
    def CDMOrganisationIdentification8Elm = CDMOrganisationIdentification8.secAddElement();
    CDMOrganisationIdentification8Elm.AnyBIC = OrganisationIdentification4Elm.BICOrBEI;
    GenericOrganisationIdentification1_To_CDMGenericOrganisationIdentification1(OrganisationIdentification4Elm.Othr, CDMOrganisationIdentification8Elm.Other);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OrganisationIdentification8_To_CDMOrganisationIdentification8" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OrganisationIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id.OrgId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id.OrgId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOrganisationIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification.OrganisationIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification.OrganisationIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OrganisationIdentification8Elm in OrganisationIdentification8) {
    def CDMOrganisationIdentification8Elm = CDMOrganisationIdentification8.secAddElement();
    CDMOrganisationIdentification8Elm.AnyBIC = OrganisationIdentification8Elm.AnyBIC;
    GenericOrganisationIdentification1_To_CDMGenericOrganisationIdentification1(OrganisationIdentification8Elm.Othr, CDMOrganisationIdentification8Elm.Other);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OrganisationIdentificationSchemeName1Choice_To_CDMOrganisationIdentificationSchemeName1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OrganisationIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.OrgId.Othr.SchmeNm</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOrganisationIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.OrganisationIdentification.Other.SchemeName</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OrganisationIdentificationSchemeName1ChoiceElm in OrganisationIdentificationSchemeName1Choice) {
    def CDMOrganisationIdentificationSchemeName1ChoiceElm = CDMOrganisationIdentificationSchemeName1Choice.secAddElement();
    CDMOrganisationIdentificationSchemeName1ChoiceElm.Code = OrganisationIdentificationSchemeName1ChoiceElm.Cd;
    CDMOrganisationIdentificationSchemeName1ChoiceElm.Proprietary = OrganisationIdentificationSchemeName1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OriginalAndCurrentQuantities1_To_CDMOriginalAndCurrentQuantities1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OriginalAndCurrentQuantities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOriginalAndCurrentQuantities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OriginalAndCurrentQuantities1Elm in OriginalAndCurrentQuantities1) {
    def CDMOriginalAndCurrentQuantities1Elm = CDMOriginalAndCurrentQuantities1.secAddElement();
    CDMOriginalAndCurrentQuantities1Elm.FaceAmount = OriginalAndCurrentQuantities1Elm.FaceAmt;
    CDMOriginalAndCurrentQuantities1Elm.AmortisedValue = OriginalAndCurrentQuantities1Elm.AmtsdVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OriginalBusinessQuery1_To_CDMOriginalBusinessQuery1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OriginalBusinessQuery1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.OrgnlBizQry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.OrgnlBizQry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOriginalBusinessQuery1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.OriginalBusinessQuery</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.OriginalBusinessQuery</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OriginalBusinessQuery1Elm in OriginalBusinessQuery1) {
    def CDMOriginalBusinessQuery1Elm = CDMOriginalBusinessQuery1.secAddElement();
    CDMOriginalBusinessQuery1Elm.MessageIdentification = OriginalBusinessQuery1Elm.MsgId;
    CDMOriginalBusinessQuery1Elm.MessageNameIdentification = OriginalBusinessQuery1Elm.MsgNmId;
    CDMOriginalBusinessQuery1Elm.CreationDateTime = OriginalBusinessQuery1Elm.CreDtTm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OtherIdentification1_To_CDMOtherIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OtherIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId.OthrId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOtherIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OtherIdentification1Elm in OtherIdentification1) {
    def CDMOtherIdentification1Elm = CDMOtherIdentification1.secAddElement();
    CDMOtherIdentification1Elm.Identification = OtherIdentification1Elm.Id;
    CDMOtherIdentification1Elm.Suffix = OtherIdentification1Elm.Sfx;
    IdentificationSource3Choice_To_CDMIdentificationSource3Choice(OtherIdentification1Elm.Tp, CDMOtherIdentification1Elm.Type);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Pagination_To_CDMPagination" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Pagination</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgPgntn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgPgntn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPagination</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessagePagination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessagePagination</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaginationElm in Pagination) {
    def CDMPaginationElm = CDMPagination.secAddElement();
    CDMPaginationElm.PageNumber = PaginationElm.PgNb;
    CDMPaginationElm.LastPageIndicator = PaginationElm.LastPgInd;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Party11Choice_To_CDMParty11Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Party11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt.Id</description>
					</parameterfield>
					<parameterfield>
						<name>CDMParty11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient.Identification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Party11ChoiceElm in Party11Choice) {
    def CDMParty11ChoiceElm = CDMParty11Choice.secAddElement();
    OrganisationIdentification8_To_CDMOrganisationIdentification8(Party11ChoiceElm.OrgId, CDMParty11ChoiceElm.OrganisationIdentification);
    PersonIdentification5_To_CDMPersonIdentification5(Party11ChoiceElm.PrvtId, CDMParty11ChoiceElm.PrivateIdentification);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Party6Choice_To_CDMParty11Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Party6Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id</description>
					</parameterfield>
					<parameterfield>
						<name>CDMParty11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Party6ChoiceElm in Party6Choice) {
    def CDMParty11ChoiceElm = CDMParty11Choice.secAddElement();
    OrganisationIdentification4_To_CDMOrganisationIdentification8(Party6ChoiceElm.OrgId, CDMParty11ChoiceElm.OrganisationIdentification);
    PersonIdentification5_To_CDMPersonIdentification5(Party6ChoiceElm.PrvtId, CDMParty11ChoiceElm.PrivateIdentification);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PartyIdentification32_To_CDMPartyIdentification43" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PartyIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PartyIdentification32Elm in PartyIdentification32) {
    def CDMPartyIdentification43Elm = CDMPartyIdentification43.secAddElement();
    CDMPartyIdentification43Elm.Name = PartyIdentification32Elm.Nm;
    PostalAddress6_To_CDMPostalAddress6(PartyIdentification32Elm.PstlAdr, CDMPartyIdentification43Elm.PostalAddress);
    Party6Choice_To_CDMParty11Choice(PartyIdentification32Elm.Id, CDMPartyIdentification43Elm.Identification);
    CDMPartyIdentification43Elm.CountryOfResidence = PartyIdentification32Elm.CtryOfRes;
    ContactDetails2_To_CDMContactDetails2(PartyIdentification32Elm.CtctDtls, CDMPartyIdentification43Elm.ContactDetails);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PartyIdentification43_To_CDMPartyIdentification43" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.GrpHdr.MsgRcpt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.GroupHeader.MessageRecipient</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PartyIdentification43Elm in PartyIdentification43) {
    def CDMPartyIdentification43Elm = CDMPartyIdentification43.secAddElement();
    CDMPartyIdentification43Elm.Name = PartyIdentification43Elm.Nm;
    PostalAddress6_To_CDMPostalAddress6(PartyIdentification43Elm.PstlAdr, CDMPartyIdentification43Elm.PostalAddress);
    Party11Choice_To_CDMParty11Choice(PartyIdentification43Elm.Id, CDMPartyIdentification43Elm.Identification);
    CDMPartyIdentification43Elm.CountryOfResidence = PartyIdentification43Elm.CtryOfRes;
    ContactDetails2_To_CDMContactDetails2(PartyIdentification43Elm.CtctDtls, CDMPartyIdentification43Elm.ContactDetails);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PaymentCard4_To_CDMPaymentCard4" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PaymentCard4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaymentCard4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaymentCard4Elm in PaymentCard4) {
    def CDMPaymentCard4Elm = CDMPaymentCard4.secAddElement();
    PlainCardData1_To_CDMPlainCardData1(PaymentCard4Elm.PlainCardData, CDMPaymentCard4Elm.PlainCardData);
    CDMPaymentCard4Elm.CardCountryCode = PaymentCard4Elm.CardCtryCd;
    GenericIdentification1_To_CDMGenericIdentification1(PaymentCard4Elm.CardBrnd, CDMPaymentCard4Elm.CardBrand);
    CDMPaymentCard4Elm.AdditionalCardData = PaymentCard4Elm.AddtlCardData;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PaymentIdentification1_To_CDMPaymentIdentification1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PaymentIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.PmtId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.PmtId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaymentIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.PaymentIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.PaymentIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaymentIdentification1Elm in PaymentIdentification1) {
    def CDMPaymentIdentification1Elm = CDMPaymentIdentification1.secAddElement();
    CDMPaymentIdentification1Elm.InstructionIdentification = PaymentIdentification1Elm.InstrId;
    CDMPaymentIdentification1Elm.EndToEndIdentification = PaymentIdentification1Elm.EndToEndId;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PaymentReturnReason2_To_CDMPaymentReturnReason2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaymentReturnReason2Elm in PaymentReturnReason2) {
    def CDMPaymentReturnReason2Elm = CDMPaymentReturnReason2.secAddElement();
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(PaymentReturnReason2Elm.OrgnlBkTxCd, CDMPaymentReturnReason2Elm.OriginalBankTransactionCode);
    PartyIdentification43_To_CDMPartyIdentification43(PaymentReturnReason2Elm.Orgtr, CDMPaymentReturnReason2Elm.Originator);
    ReturnReason5Choice_To_CDMReturnReason5Choice(PaymentReturnReason2Elm.Rsn, CDMPaymentReturnReason2Elm.Reason);
    Max105Text_To_CDMstring(PaymentReturnReason2Elm.AddtlInf, CDMPaymentReturnReason2Elm.AdditionalInformation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PersonIdentification5_To_CDMPersonIdentification5" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PersonIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPersonIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PersonIdentification5Elm in PersonIdentification5) {
    def CDMPersonIdentification5Elm = CDMPersonIdentification5.secAddElement();
    DateAndPlaceOfBirth_To_CDMDateAndPlaceOfBirth(PersonIdentification5Elm.DtAndPlcOfBirth, CDMPersonIdentification5Elm.DateAndPlaceOfBirth);
    GenericPersonIdentification1_To_CDMGenericPersonIdentification1(PersonIdentification5Elm.Othr, CDMPersonIdentification5Elm.Other);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PersonIdentificationSchemeName1Choice_To_CDMPersonIdentificationSchemeName1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PersonIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr.SchmeNm</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.Id.PrvtId.Othr.SchmeNm</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPersonIdentificationSchemeName1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other.SchemeName</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.Identification.PrivateIdentification.Other.SchemeName</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PersonIdentificationSchemeName1ChoiceElm in PersonIdentificationSchemeName1Choice) {
    def CDMPersonIdentificationSchemeName1ChoiceElm = CDMPersonIdentificationSchemeName1Choice.secAddElement();
    CDMPersonIdentificationSchemeName1ChoiceElm.Code = PersonIdentificationSchemeName1ChoiceElm.Cd;
    CDMPersonIdentificationSchemeName1ChoiceElm.Proprietary = PersonIdentificationSchemeName1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PlainCardData1_To_CDMPlainCardData1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PlainCardData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPlainCardData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PlainCardData1Elm in PlainCardData1) {
    def CDMPlainCardData1Elm = CDMPlainCardData1.secAddElement();
    CDMPlainCardData1Elm.PAN = PlainCardData1Elm.PAN;
    CDMPlainCardData1Elm.CardSequenceNumber = PlainCardData1Elm.CardSeqNb;
    CDMPlainCardData1Elm.EffectiveDate = PlainCardData1Elm.FctvDt;
    CDMPlainCardData1Elm.ExpiryDate = PlainCardData1Elm.XpryDt;
    CDMPlainCardData1Elm.ServiceCode = PlainCardData1Elm.SvcCd;
    TrackData1_To_CDMTrackData1(PlainCardData1Elm.TrckData, CDMPlainCardData1Elm.TrackData);
    CardSecurityInformation1_To_CDMCardSecurityInformation1(PlainCardData1Elm.CardSctyCd, CDMPlainCardData1Elm.CardSecurityCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PointOfInteraction1_To_CDMPointOfInteraction1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PointOfInteraction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPointOfInteraction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PointOfInteraction1Elm in PointOfInteraction1) {
    def CDMPointOfInteraction1Elm = CDMPointOfInteraction1.secAddElement();
    GenericIdentification32_To_CDMGenericIdentification32(PointOfInteraction1Elm.Id, CDMPointOfInteraction1Elm.Identification);
    CDMPointOfInteraction1Elm.SystemName = PointOfInteraction1Elm.SysNm;
    CDMPointOfInteraction1Elm.GroupIdentification = PointOfInteraction1Elm.GrpId;
    PointOfInteractionCapabilities1_To_CDMPointOfInteractionCapabilities1(PointOfInteraction1Elm.Cpblties, CDMPointOfInteraction1Elm.Capabilities);
    PointOfInteractionComponent1_To_CDMPointOfInteractionComponent1(PointOfInteraction1Elm.Cmpnt, CDMPointOfInteraction1Elm.Component);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PointOfInteractionCapabilities1_To_CDMPointOfInteractionCapabilities1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PointOfInteractionCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPointOfInteractionCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Capabilities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PointOfInteractionCapabilities1Elm in PointOfInteractionCapabilities1) {
    def CDMPointOfInteractionCapabilities1Elm = CDMPointOfInteractionCapabilities1.secAddElement();
    CardDataReading1Code_To_CDMCardDataReading1Code(PointOfInteractionCapabilities1Elm.CardRdngCpblties, CDMPointOfInteractionCapabilities1Elm.CardReadingCapabilities);
    CardholderVerificationCapability1Code_To_CDMCardholderVerificationCapability1Code(PointOfInteractionCapabilities1Elm.CrdhldrVrfctnCpblties, CDMPointOfInteractionCapabilities1Elm.CardholderVerificationCapabilities);
    CDMPointOfInteractionCapabilities1Elm.OnLineCapabilities = PointOfInteractionCapabilities1Elm.OnLineCpblties;
    DisplayCapabilities1_To_CDMDisplayCapabilities1(PointOfInteractionCapabilities1Elm.DispCpblties, CDMPointOfInteractionCapabilities1Elm.DisplayCapabilities);
    if (PointOfInteractionCapabilities1Elm.PrtLineWidth.IsNotNull())
    CDMPointOfInteractionCapabilities1Elm.PrintLineWidth = toBigInteger(PointOfInteractionCapabilities1Elm.PrtLineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PointOfInteractionComponent1_To_CDMPointOfInteractionComponent1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PointOfInteractionComponent1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cmpnt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.POI.Cmpnt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPointOfInteractionComponent1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Component</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.POI.Component</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PointOfInteractionComponent1Elm in PointOfInteractionComponent1) {
    def CDMPointOfInteractionComponent1Elm = CDMPointOfInteractionComponent1.secAddElement();
    CDMPointOfInteractionComponent1Elm.POIComponentType = PointOfInteractionComponent1Elm.POICmpntTp;
    CDMPointOfInteractionComponent1Elm.ManufacturerIdentification = PointOfInteractionComponent1Elm.ManfctrId;
    CDMPointOfInteractionComponent1Elm.Model = PointOfInteractionComponent1Elm.Mdl;
    CDMPointOfInteractionComponent1Elm.VersionNumber = PointOfInteractionComponent1Elm.VrsnNb;
    CDMPointOfInteractionComponent1Elm.SerialNumber = PointOfInteractionComponent1Elm.SrlNb;
    Max70Text_To_CDMstring(PointOfInteractionComponent1Elm.ApprvlNb, CDMPointOfInteractionComponent1Elm.ApprovalNumber);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PostalAddress6_To_CDMPostalAddress6" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PostalAddress6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.GrpHdr.InitgPty.PstlAdr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPostalAddress6</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.GroupHeader.InitiatingParty.PostalAddress</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PostalAddress6Elm in PostalAddress6) {
    def CDMPostalAddress6Elm = CDMPostalAddress6.secAddElement();
    CDMPostalAddress6Elm.AddressType = PostalAddress6Elm.AdrTp;
    CDMPostalAddress6Elm.Department = PostalAddress6Elm.Dept;
    CDMPostalAddress6Elm.SubDepartment = PostalAddress6Elm.SubDept;
    CDMPostalAddress6Elm.StreetName = PostalAddress6Elm.StrtNm;
    CDMPostalAddress6Elm.BuildingNumber = PostalAddress6Elm.BldgNb;
    CDMPostalAddress6Elm.PostCode = PostalAddress6Elm.PstCd;
    CDMPostalAddress6Elm.TownName = PostalAddress6Elm.TwnNm;
    CDMPostalAddress6Elm.CountrySubDivision = PostalAddress6Elm.CtrySubDvsn;
    CDMPostalAddress6Elm.Country = PostalAddress6Elm.Ctry;
    Max70Text_To_CDMstring(PostalAddress6Elm.AdrLine, CDMPostalAddress6Elm.AddressLine);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Price2_To_CDMPrice2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Price2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Price2Elm in Price2) {
    def CDMPrice2Elm = CDMPrice2.secAddElement();
    YieldedOrValueType1Choice_To_CDMYieldedOrValueType1Choice(Price2Elm.Tp, CDMPrice2Elm.Type);
    PriceRateOrAmountChoice_To_CDMPriceRateOrAmountChoice(Price2Elm.Val, CDMPrice2Elm.Value);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PriceRateOrAmountChoice_To_CDMPriceRateOrAmountChoice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PriceRateOrAmountChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPriceRateOrAmountChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Value</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PriceRateOrAmountChoiceElm in PriceRateOrAmountChoice) {
    def CDMPriceRateOrAmountChoiceElm = CDMPriceRateOrAmountChoice.secAddElement();
    CDMPriceRateOrAmountChoiceElm.Rate = PriceRateOrAmountChoiceElm.Rate;
    ActiveOrHistoricCurrencyAnd13DecimalAmount_To_CDMActiveOrHistoricCurrencyAnd13DecimalAmount(PriceRateOrAmountChoiceElm.Amt, CDMPriceRateOrAmountChoiceElm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Product2_To_CDMProduct2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Product2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProduct2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Product2Elm in Product2) {
    def CDMProduct2Elm = CDMProduct2.secAddElement();
    CDMProduct2Elm.ProductCode = Product2Elm.PdctCd;
    CDMProduct2Elm.UnitOfMeasure = Product2Elm.UnitOfMeasr;
    CDMProduct2Elm.ProductQuantity = Product2Elm.PdctQty;
    CDMProduct2Elm.UnitPrice = Product2Elm.UnitPric;
    CDMProduct2Elm.ProductAmount = Product2Elm.PdctAmt;
    CDMProduct2Elm.TaxType = Product2Elm.TaxTp;
    CDMProduct2Elm.AdditionalProductInformation = Product2Elm.AddtlPdctInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryAgent2_To_CDMProprietaryAgent3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryAgent2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryAgent2Elm in ProprietaryAgent2) {
    def CDMProprietaryAgent3Elm = CDMProprietaryAgent3.secAddElement();
    CDMProprietaryAgent3Elm.Type = ProprietaryAgent2Elm.Tp;
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(ProprietaryAgent2Elm.Agt, CDMProprietaryAgent3Elm.Agent);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryAgent3_To_CDMProprietaryAgent3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryAgent3Elm in ProprietaryAgent3) {
    def CDMProprietaryAgent3Elm = CDMProprietaryAgent3.secAddElement();
    CDMProprietaryAgent3Elm.Type = ProprietaryAgent3Elm.Tp;
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(ProprietaryAgent3Elm.Agt, CDMProprietaryAgent3Elm.Agent);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryBankTransactionCodeStructure1_To_CDMProprietaryBankTransactionCodeStructure1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryBankTransactionCodeStructure1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryBankTransactionCodeStructure1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransactionCode.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryBankTransactionCodeStructure1Elm in ProprietaryBankTransactionCodeStructure1) {
    def CDMProprietaryBankTransactionCodeStructure1Elm = CDMProprietaryBankTransactionCodeStructure1.secAddElement();
    CDMProprietaryBankTransactionCodeStructure1Elm.Code = ProprietaryBankTransactionCodeStructure1Elm.Cd;
    CDMProprietaryBankTransactionCodeStructure1Elm.Issuer = ProprietaryBankTransactionCodeStructure1Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryDate2_To_CDMProprietaryDate2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryDate2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryDate2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryDate2Elm in ProprietaryDate2) {
    def CDMProprietaryDate2Elm = CDMProprietaryDate2.secAddElement();
    CDMProprietaryDate2Elm.Type = ProprietaryDate2Elm.Tp;
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice(ProprietaryDate2Elm.Dt, CDMProprietaryDate2Elm.Date);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryParty2_To_CDMProprietaryParty3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryParty2Elm in ProprietaryParty2) {
    def CDMProprietaryParty3Elm = CDMProprietaryParty3.secAddElement();
    CDMProprietaryParty3Elm.Type = ProprietaryParty2Elm.Tp;
    PartyIdentification32_To_CDMPartyIdentification43(ProprietaryParty2Elm.Pty, CDMProprietaryParty3Elm.Party);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryParty3_To_CDMProprietaryParty3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryParty3Elm in ProprietaryParty3) {
    def CDMProprietaryParty3Elm = CDMProprietaryParty3.secAddElement();
    CDMProprietaryParty3Elm.Type = ProprietaryParty3Elm.Tp;
    PartyIdentification43_To_CDMPartyIdentification43(ProprietaryParty3Elm.Pty, CDMProprietaryParty3Elm.Party);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryPrice2_To_CDMProprietaryPrice2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryPrice2Elm in ProprietaryPrice2) {
    def CDMProprietaryPrice2Elm = CDMProprietaryPrice2.secAddElement();
    CDMProprietaryPrice2Elm.Type = ProprietaryPrice2Elm.Tp;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(ProprietaryPrice2Elm.Pric, CDMProprietaryPrice2Elm.Price);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryQuantity1_To_CDMProprietaryQuantity1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryQuantity1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryQuantity1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryQuantity1Elm in ProprietaryQuantity1) {
    def CDMProprietaryQuantity1Elm = CDMProprietaryQuantity1.secAddElement();
    CDMProprietaryQuantity1Elm.Type = ProprietaryQuantity1Elm.Tp;
    CDMProprietaryQuantity1Elm.Quantity = ProprietaryQuantity1Elm.Qty;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryReference1_To_CDMProprietaryReference1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryReference1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryReference1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryReference1Elm in ProprietaryReference1) {
    def CDMProprietaryReference1Elm = CDMProprietaryReference1.secAddElement();
    CDMProprietaryReference1Elm.Type = ProprietaryReference1Elm.Tp;
    CDMProprietaryReference1Elm.Reference = ProprietaryReference1Elm.Ref;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Purpose2Choice_To_CDMPurpose2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Purpose2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Purp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Purp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPurpose2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Purpose</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Purpose</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Purpose2ChoiceElm in Purpose2Choice) {
    def CDMPurpose2ChoiceElm = CDMPurpose2Choice.secAddElement();
    CDMPurpose2ChoiceElm.Code = Purpose2ChoiceElm.Cd;
    CDMPurpose2ChoiceElm.Proprietary = Purpose2ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Rate3_To_CDMRate3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Rate3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRate3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Rate3Elm in Rate3) {
    def CDMRate3Elm = CDMRate3.secAddElement();
    RateType4Choice_To_CDMRateType4Choice(Rate3Elm.Tp, CDMRate3Elm.Type);
    CurrencyAndAmountRange2_To_CDMCurrencyAndAmountRange2(Rate3Elm.VldtyRg, CDMRate3Elm.ValidityRange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RateType4Choice_To_CDMRateType4Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RateType4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Rate.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRateType4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Rate.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RateType4ChoiceElm in RateType4Choice) {
    def CDMRateType4ChoiceElm = CDMRateType4Choice.secAddElement();
    CDMRateType4ChoiceElm.Pctg = RateType4ChoiceElm.Pctg;
    CDMRateType4ChoiceElm.Other = RateType4ChoiceElm.Othr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReferredDocumentInformation3_To_CDMReferredDocumentInformation3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReferredDocumentInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReferredDocumentInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReferredDocumentInformation3Elm in ReferredDocumentInformation3) {
    def CDMReferredDocumentInformation3Elm = CDMReferredDocumentInformation3.secAddElement();
    ReferredDocumentType2_To_CDMReferredDocumentType2(ReferredDocumentInformation3Elm.Tp, CDMReferredDocumentInformation3Elm.Type);
    CDMReferredDocumentInformation3Elm.Number = ReferredDocumentInformation3Elm.Nb;
    CDMReferredDocumentInformation3Elm.RelatedDate = ReferredDocumentInformation3Elm.RltdDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReferredDocumentType1Choice_To_CDMReferredDocumentType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReferredDocumentType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp.CdOrPrtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp.CdOrPrtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReferredDocumentType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type.CodeOrProprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type.CodeOrProprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReferredDocumentType1ChoiceElm in ReferredDocumentType1Choice) {
    def CDMReferredDocumentType1ChoiceElm = CDMReferredDocumentType1Choice.secAddElement();
    CDMReferredDocumentType1ChoiceElm.Code = ReferredDocumentType1ChoiceElm.Cd;
    CDMReferredDocumentType1ChoiceElm.Proprietary = ReferredDocumentType1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReferredDocumentType2_To_CDMReferredDocumentType2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReferredDocumentType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocInf.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReferredDocumentType2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentInformation.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReferredDocumentType2Elm in ReferredDocumentType2) {
    def CDMReferredDocumentType2Elm = CDMReferredDocumentType2.secAddElement();
    ReferredDocumentType1Choice_To_CDMReferredDocumentType1Choice(ReferredDocumentType2Elm.CdOrPrtry, CDMReferredDocumentType2Elm.CodeOrProprietary);
    CDMReferredDocumentType2Elm.Issuer = ReferredDocumentType2Elm.Issr;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RegulatoryAuthority2_To_CDMRegulatoryAuthority2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RegulatoryAuthority2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Authrty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Authrty</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRegulatoryAuthority2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Authority</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Authority</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RegulatoryAuthority2Elm in RegulatoryAuthority2) {
    def CDMRegulatoryAuthority2Elm = CDMRegulatoryAuthority2.secAddElement();
    CDMRegulatoryAuthority2Elm.Name = RegulatoryAuthority2Elm.Nm;
    CDMRegulatoryAuthority2Elm.Country = RegulatoryAuthority2Elm.Ctry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RegulatoryReporting3_To_CDMRegulatoryReporting3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RegulatoryReporting3Elm in RegulatoryReporting3) {
    def CDMRegulatoryReporting3Elm = CDMRegulatoryReporting3.secAddElement();
    CDMRegulatoryReporting3Elm.DebitCreditReportingIndicator = RegulatoryReporting3Elm.DbtCdtRptgInd;
    RegulatoryAuthority2_To_CDMRegulatoryAuthority2(RegulatoryReporting3Elm.Authrty, CDMRegulatoryReporting3Elm.Authority);
    StructuredRegulatoryReporting3_To_CDMStructuredRegulatoryReporting3(RegulatoryReporting3Elm.Dtls, CDMRegulatoryReporting3Elm.Details);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceAmount1_To_CDMRemittanceAmount2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceAmount1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd.RfrdDocAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured.ReferredDocumentAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceAmount1Elm in RemittanceAmount1) {
    def CDMRemittanceAmount2Elm = CDMRemittanceAmount2.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(RemittanceAmount1Elm.DuePyblAmt, CDMRemittanceAmount2Elm.DuePayableAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMDiscountAmountAndType1(RemittanceAmount1Elm.DscntApldAmt, CDMRemittanceAmount2Elm.DiscountAppliedAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(RemittanceAmount1Elm.CdtNoteAmt, CDMRemittanceAmount2Elm.CreditNoteAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMTaxAmountAndType1(RemittanceAmount1Elm.TaxAmt, CDMRemittanceAmount2Elm.TaxAmount);
    DocumentAdjustment1_To_CDMDocumentAdjustment1(RemittanceAmount1Elm.AdjstmntAmtAndRsn, CDMRemittanceAmount2Elm.AdjustmentAmountAndReason);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(RemittanceAmount1Elm.RmtdAmt, CDMRemittanceAmount2Elm.RemittedAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceAmount2_To_CDMRemittanceAmount2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceAmount2Elm in RemittanceAmount2) {
    def CDMRemittanceAmount2Elm = CDMRemittanceAmount2.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(RemittanceAmount2Elm.DuePyblAmt, CDMRemittanceAmount2Elm.DuePayableAmount);
    DiscountAmountAndType1_To_CDMDiscountAmountAndType1(RemittanceAmount2Elm.DscntApldAmt, CDMRemittanceAmount2Elm.DiscountAppliedAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(RemittanceAmount2Elm.CdtNoteAmt, CDMRemittanceAmount2Elm.CreditNoteAmount);
    TaxAmountAndType1_To_CDMTaxAmountAndType1(RemittanceAmount2Elm.TaxAmt, CDMRemittanceAmount2Elm.TaxAmount);
    DocumentAdjustment1_To_CDMDocumentAdjustment1(RemittanceAmount2Elm.AdjstmntAmtAndRsn, CDMRemittanceAmount2Elm.AdjustmentAmountAndReason);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(RemittanceAmount2Elm.RmtdAmt, CDMRemittanceAmount2Elm.RemittedAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceInformation5_To_CDMRemittanceInformation7" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceInformation5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceInformation5Elm in RemittanceInformation5) {
    def CDMRemittanceInformation7Elm = CDMRemittanceInformation7.secAddElement();
    Max140Text_To_CDMstring(RemittanceInformation5Elm.Ustrd, CDMRemittanceInformation7Elm.Unstructured);
    StructuredRemittanceInformation7_To_CDMStructuredRemittanceInformation9(RemittanceInformation5Elm.Strd, CDMRemittanceInformation7Elm.Structured);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceInformation7_To_CDMRemittanceInformation7" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceInformation7Elm in RemittanceInformation7) {
    def CDMRemittanceInformation7Elm = CDMRemittanceInformation7.secAddElement();
    Max140Text_To_CDMstring(RemittanceInformation7Elm.Ustrd, CDMRemittanceInformation7Elm.Unstructured);
    StructuredRemittanceInformation9_To_CDMStructuredRemittanceInformation9(RemittanceInformation7Elm.Strd, CDMRemittanceInformation7Elm.Structured);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceLocation2_To_CDMRemittanceLocation2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceLocation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RltdRmtInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceLocation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RelatedRemittanceInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceLocation2Elm in RemittanceLocation2) {
    def CDMRemittanceLocation2Elm = CDMRemittanceLocation2.secAddElement();
    CDMRemittanceLocation2Elm.RemittanceIdentification = RemittanceLocation2Elm.RmtId;
    CDMRemittanceLocation2Elm.RemittanceLocationMethod = RemittanceLocation2Elm.RmtLctnMtd;
    CDMRemittanceLocation2Elm.RemittanceLocationElectronicAddress = RemittanceLocation2Elm.RmtLctnElctrncAdr;
    NameAndAddress10_To_CDMNameAndAddress10(RemittanceLocation2Elm.RmtLctnPstlAdr, CDMRemittanceLocation2Elm.RemittanceLocationPostalAddress);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReportEntry2_To_CDMReportEntry3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReportEntry2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReportEntry2Elm in ReportEntry2) {
    def CDMReportEntry3Elm = CDMReportEntry3.secAddElement();
    CDMReportEntry3Elm.EntryReference = ReportEntry2Elm.NtryRef;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(ReportEntry2Elm.Amt, CDMReportEntry3Elm.Amount);
    CDMReportEntry3Elm.CreditDebitIndicator = ReportEntry2Elm.CdtDbtInd;
    CDMReportEntry3Elm.ReversalIndicator = ReportEntry2Elm.RvslInd;
    CDMReportEntry3Elm.Status = ReportEntry2Elm.Sts;
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice(ReportEntry2Elm.BookgDt, CDMReportEntry3Elm.BookingDate);
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice(ReportEntry2Elm.ValDt, CDMReportEntry3Elm.ValueDate);
    CDMReportEntry3Elm.AccountServicerReference = ReportEntry2Elm.AcctSvcrRef;
    CashBalanceAvailability2_To_CDMCashBalanceAvailability2(ReportEntry2Elm.Avlbty, CDMReportEntry3Elm.Availability);
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(ReportEntry2Elm.BkTxCd, CDMReportEntry3Elm.BankTransactionCode);
    CDMReportEntry3Elm.CommissionWaiverIndicator = ReportEntry2Elm.ComssnWvrInd;
    MessageIdentification2_To_CDMMessageIdentification2(ReportEntry2Elm.AddtlInfInd, CDMReportEntry3Elm.AdditionalInformationIndicator);
    AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchange3(ReportEntry2Elm.AmtDtls, CDMReportEntry3Elm.AmountDetails);
    ChargesInformation6_To_CDMCharges3(ReportEntry2Elm.Chrgs, CDMReportEntry3Elm.Charges);
    TechnicalInputChannel1Choice_To_CDMTechnicalInputChannel1Choice(ReportEntry2Elm.TechInptChanl, CDMReportEntry3Elm.TechnicalInputChannel);
    TransactionInterest2_To_CDMTransactionInterest3(ReportEntry2Elm.Intrst, CDMReportEntry3Elm.Interest);
    //TODO : Report.Entry.CardTransaction -> ?
    EntryDetails1_To_CDMEntryDetails2(ReportEntry2Elm.NtryDtls, CDMReportEntry3Elm.EntryDetails);
    CDMReportEntry3Elm.AdditionalEntryInformation = ReportEntry2Elm.AddtlNtryInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReportEntry3_To_CDMReportEntry3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReportEntry3Elm in ReportEntry3) {
    def CDMReportEntry3Elm = CDMReportEntry3.secAddElement();
    CDMReportEntry3Elm.EntryReference = ReportEntry3Elm.NtryRef;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(ReportEntry3Elm.Amt, CDMReportEntry3Elm.Amount);
    CDMReportEntry3Elm.CreditDebitIndicator = ReportEntry3Elm.CdtDbtInd;
    CDMReportEntry3Elm.ReversalIndicator = ReportEntry3Elm.RvslInd;
    CDMReportEntry3Elm.Status = ReportEntry3Elm.Sts;
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice(ReportEntry3Elm.BookgDt, CDMReportEntry3Elm.BookingDate);
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoice(ReportEntry3Elm.ValDt, CDMReportEntry3Elm.ValueDate);
    CDMReportEntry3Elm.AccountServicerReference = ReportEntry3Elm.AcctSvcrRef;
    CashBalanceAvailability2_To_CDMCashBalanceAvailability2(ReportEntry3Elm.Avlbty, CDMReportEntry3Elm.Availability);
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(ReportEntry3Elm.BkTxCd, CDMReportEntry3Elm.BankTransactionCode);
    CDMReportEntry3Elm.CommissionWaiverIndicator = ReportEntry3Elm.ComssnWvrInd;
    MessageIdentification2_To_CDMMessageIdentification2(ReportEntry3Elm.AddtlInfInd, CDMReportEntry3Elm.AdditionalInformationIndicator);
    AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchange3(ReportEntry3Elm.AmtDtls, CDMReportEntry3Elm.AmountDetails);
    Charges3_To_CDMCharges3(ReportEntry3Elm.Chrgs, CDMReportEntry3Elm.Charges);
    TechnicalInputChannel1Choice_To_CDMTechnicalInputChannel1Choice(ReportEntry3Elm.TechInptChanl, CDMReportEntry3Elm.TechnicalInputChannel);
    TransactionInterest3_To_CDMTransactionInterest3(ReportEntry3Elm.Intrst, CDMReportEntry3Elm.Interest);
    CardEntry1_To_CDMCardEntry1(ReportEntry3Elm.CardTx, CDMReportEntry3Elm.CardTransaction);
    EntryDetails2_To_CDMEntryDetails2(ReportEntry3Elm.NtryDtls, CDMReportEntry3Elm.EntryDetails);
    CDMReportEntry3Elm.AdditionalEntryInformation = ReportEntry3Elm.AddtlNtryInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReportingSource1Choice_To_CDMReportingSource1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReportingSource1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RptgSrc</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.RptgSrc</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReportingSource1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.ReportingSource</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.ReportingSource</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReportingSource1ChoiceElm in ReportingSource1Choice) {
    def CDMReportingSource1ChoiceElm = CDMReportingSource1Choice.secAddElement();
    CDMReportingSource1ChoiceElm.Code = ReportingSource1ChoiceElm.Cd;
    CDMReportingSource1ChoiceElm.Proprietary = ReportingSource1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReturnReason5Choice_To_CDMReturnReason5Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReturnReason5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReturnReason5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation.Reason</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation.Reason</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReturnReason5ChoiceElm in ReturnReason5Choice) {
    def CDMReturnReason5ChoiceElm = CDMReturnReason5Choice.secAddElement();
    CDMReturnReason5ChoiceElm.Code = ReturnReason5ChoiceElm.Cd;
    CDMReturnReason5ChoiceElm.Proprietary = ReturnReason5ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReturnReasonInformation10_To_CDMPaymentReturnReason2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReturnReasonInformation10</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RtrInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.ReturnInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReturnReasonInformation10Elm in ReturnReasonInformation10) {
    def CDMPaymentReturnReason2Elm = CDMPaymentReturnReason2.secAddElement();
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(ReturnReasonInformation10Elm.OrgnlBkTxCd, CDMPaymentReturnReason2Elm.OriginalBankTransactionCode);
    PartyIdentification32_To_CDMPartyIdentification43(ReturnReasonInformation10Elm.Orgtr, CDMPaymentReturnReason2Elm.Originator);
    ReturnReason5Choice_To_CDMReturnReason5Choice(ReturnReasonInformation10Elm.Rsn, CDMPaymentReturnReason2Elm.Reason);
    Max105Text_To_CDMstring(ReturnReasonInformation10Elm.AddtlInf, CDMPaymentReturnReason2Elm.AdditionalInformation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SecuritiesAccount13_To_CDMSecuritiesAccount13" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.SfkpgAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SecuritiesAccount13Elm in SecuritiesAccount13) {
    def CDMSecuritiesAccount13Elm = CDMSecuritiesAccount13.secAddElement();
    CDMSecuritiesAccount13Elm.Identification = SecuritiesAccount13Elm.Id;
    GenericIdentification20_To_CDMGenericIdentification20(SecuritiesAccount13Elm.Tp, CDMSecuritiesAccount13Elm.Type);
    CDMSecuritiesAccount13Elm.Name = SecuritiesAccount13Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SecurityIdentification14_To_CDMSecurityIdentification14" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SecurityIdentification14Elm in SecurityIdentification14) {
    def CDMSecurityIdentification14Elm = CDMSecurityIdentification14.secAddElement();
    CDMSecurityIdentification14Elm.ISIN = SecurityIdentification14Elm.ISIN;
    OtherIdentification1_To_CDMOtherIdentification1(SecurityIdentification14Elm.OthrId, CDMSecurityIdentification14Elm.OtherIdentification);
    CDMSecurityIdentification14Elm.Description = SecurityIdentification14Elm.Desc;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SecurityIdentification4Choice_To_CDMSecurityIdentification14" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SecurityIdentification4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.FinInstrmId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SecurityIdentification4ChoiceElm in SecurityIdentification4Choice) {
    def CDMSecurityIdentification14Elm = CDMSecurityIdentification14.secAddElement();
    // Todo - toVerify
    
    CDMSecurityIdentification14Elm.ISIN = SecurityIdentification4ChoiceElm.ISIN;
    if (SecurityIdentification4ChoiceElm.ISIN.IsNull()) {
    	def otherID = CDMSecurityIdentification14Elm.OtherIdentification.SecAddElement();
    	otherID.Identification = SecurityIdentification4ChoiceElm.Prtry[0].Id;
    	otherID.Type.SecAddElement().Code = SecurityIdentification4ChoiceElm.Prtry[0].Tp;
    }
}
 //TODO : Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.OtherIdentification -> ?
//TODO : Report.Entry.EntryDetails.TransactionDetails.FinancialInstrumentIdentification.Description -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ServiceLevel8Choice_To_CDMServiceLevel8Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ServiceLevel8Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.SvcLvl</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.PmtTpInf.SvcLvl</description>
					</parameterfield>
					<parameterfield>
						<name>CDMServiceLevel8Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.ServiceLevel</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.PaymentTypeInformation.ServiceLevel</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ServiceLevel8ChoiceElm in ServiceLevel8Choice) {
    def CDMServiceLevel8ChoiceElm = CDMServiceLevel8Choice.secAddElement();
    CDMServiceLevel8ChoiceElm.Code = ServiceLevel8ChoiceElm.Cd;
    CDMServiceLevel8ChoiceElm.Proprietary = ServiceLevel8ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="StructuredRegulatoryReporting3_To_CDMStructuredRegulatoryReporting3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>StructuredRegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.RgltryRptg.Dtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMStructuredRegulatoryReporting3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.RegulatoryReporting.Details</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def StructuredRegulatoryReporting3Elm in StructuredRegulatoryReporting3) {
    def CDMStructuredRegulatoryReporting3Elm = CDMStructuredRegulatoryReporting3.secAddElement();
    CDMStructuredRegulatoryReporting3Elm.Type = StructuredRegulatoryReporting3Elm.Tp;
    CDMStructuredRegulatoryReporting3Elm.Date = StructuredRegulatoryReporting3Elm.Dt;
    CDMStructuredRegulatoryReporting3Elm.Country = StructuredRegulatoryReporting3Elm.Ctry;
    CDMStructuredRegulatoryReporting3Elm.Code = StructuredRegulatoryReporting3Elm.Cd;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(StructuredRegulatoryReporting3Elm.Amt, CDMStructuredRegulatoryReporting3Elm.Amount);
    Max35Text_To_CDMstring(StructuredRegulatoryReporting3Elm.Inf, CDMStructuredRegulatoryReporting3Elm.Information);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="StructuredRemittanceInformation7_To_CDMStructuredRemittanceInformation9" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>StructuredRemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerPaymentStatusReportV03.Data.CstmrPmtStsRpt.OrgnlPmtInfAndSts.TxInfAndSts.OrgnlTxRef.RmtInf.Strd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMStructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerPaymentStatusReportV1.Data.OriginalPaymentInformationAndStatus.TransactionInformationAndStatus.OriginalTransactionReference.RemittanceInformation.Structured</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def StructuredRemittanceInformation7Elm in StructuredRemittanceInformation7) {
    def CDMStructuredRemittanceInformation9Elm = CDMStructuredRemittanceInformation9.secAddElement();
    ReferredDocumentInformation3_To_CDMReferredDocumentInformation3(StructuredRemittanceInformation7Elm.RfrdDocInf, CDMStructuredRemittanceInformation9Elm.ReferredDocumentInformation);
    RemittanceAmount1_To_CDMRemittanceAmount2(StructuredRemittanceInformation7Elm.RfrdDocAmt, CDMStructuredRemittanceInformation9Elm.ReferredDocumentAmount);
    CreditorReferenceInformation2_To_CDMCreditorReferenceInformation2(StructuredRemittanceInformation7Elm.CdtrRefInf, CDMStructuredRemittanceInformation9Elm.CreditorReferenceInformation);
    PartyIdentification32_To_CDMPartyIdentification43(StructuredRemittanceInformation7Elm.Invcr, CDMStructuredRemittanceInformation9Elm.Invoicer);
    PartyIdentification32_To_CDMPartyIdentification43(StructuredRemittanceInformation7Elm.Invcee, CDMStructuredRemittanceInformation9Elm.Invoicee);
    Max140Text_To_CDMstring(StructuredRemittanceInformation7Elm.AddtlRmtInf, CDMStructuredRemittanceInformation9Elm.AdditionalRemittanceInformation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="StructuredRemittanceInformation9_To_CDMStructuredRemittanceInformation9" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>StructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMStructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def StructuredRemittanceInformation9Elm in StructuredRemittanceInformation9) {
    def CDMStructuredRemittanceInformation9Elm = CDMStructuredRemittanceInformation9.secAddElement();
    ReferredDocumentInformation3_To_CDMReferredDocumentInformation3(StructuredRemittanceInformation9Elm.RfrdDocInf, CDMStructuredRemittanceInformation9Elm.ReferredDocumentInformation);
    RemittanceAmount2_To_CDMRemittanceAmount2(StructuredRemittanceInformation9Elm.RfrdDocAmt, CDMStructuredRemittanceInformation9Elm.ReferredDocumentAmount);
    CreditorReferenceInformation2_To_CDMCreditorReferenceInformation2(StructuredRemittanceInformation9Elm.CdtrRefInf, CDMStructuredRemittanceInformation9Elm.CreditorReferenceInformation);
    PartyIdentification43_To_CDMPartyIdentification43(StructuredRemittanceInformation9Elm.Invcr, CDMStructuredRemittanceInformation9Elm.Invoicer);
    PartyIdentification43_To_CDMPartyIdentification43(StructuredRemittanceInformation9Elm.Invcee, CDMStructuredRemittanceInformation9Elm.Invoicee);
    Max140Text_To_CDMstring(StructuredRemittanceInformation9Elm.AddtlRmtInf, CDMStructuredRemittanceInformation9Elm.AdditionalRemittanceInformation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SupplementaryData1_To_CDMSupplementaryData1" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SupplementaryData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSupplementaryData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SupplementaryData1Elm in SupplementaryData1) {
    def CDMSupplementaryData1Elm = CDMSupplementaryData1.secAddElement();
    CDMSupplementaryData1Elm.PlaceAndName = SupplementaryData1Elm.PlcAndNm;
    SupplementaryDataEnvelope1_To_CDMSupplementaryDataEnvelope1(SupplementaryData1Elm.Envlp, CDMSupplementaryData1Elm.Envelope);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SupplementaryDataEnvelope1_To_CDMSupplementaryDataEnvelope1" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SupplementaryDataEnvelope1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData.Envlp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.SplmtryData.Envlp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSupplementaryDataEnvelope1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData.Envelope</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.SupplementaryData.Envelope</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SupplementaryDataEnvelope1Elm in SupplementaryDataEnvelope1) {
    def CDMSupplementaryDataEnvelope1Elm = CDMSupplementaryDataEnvelope1.secAddElement();
   	copyAny (SupplementaryDataEnvelope1Elm.getSection ("any"), CDMSupplementaryDataEnvelope1Elm.getSection ("any"));
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxAmount1_To_CDMTaxAmount1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxAmount1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxAmount1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxAmount1Elm in TaxAmount1) {
    def CDMTaxAmount1Elm = CDMTaxAmount1.secAddElement();
    CDMTaxAmount1Elm.Rate = TaxAmount1Elm.Rate;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxAmount1Elm.TaxblBaseAmt, CDMTaxAmount1Elm.TaxableBaseAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxAmount1Elm.TtlAmt, CDMTaxAmount1Elm.TotalAmount);
    TaxRecordDetails1_To_CDMTaxRecordDetails1(TaxAmount1Elm.Dtls, CDMTaxAmount1Elm.Details);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxAmountAndType1_To_CDMTaxAmountAndType1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxAmountAndType1Elm in TaxAmountAndType1) {
    def CDMTaxAmountAndType1Elm = CDMTaxAmountAndType1.secAddElement();
    TaxAmountType1Choice_To_CDMTaxAmountType1Choice(TaxAmountAndType1Elm.Tp, CDMTaxAmountAndType1Elm.Type);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxAmountAndType1Elm.Amt, CDMTaxAmountAndType1Elm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxAmountType1Choice_To_CDMTaxAmountType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxAmountType1ChoiceElm in TaxAmountType1Choice) {
    def CDMTaxAmountType1ChoiceElm = CDMTaxAmountType1Choice.secAddElement();
    CDMTaxAmountType1ChoiceElm.Code = TaxAmountType1ChoiceElm.Cd;
    CDMTaxAmountType1ChoiceElm.Proprietary = TaxAmountType1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxAuthorisation1_To_CDMTaxAuthorisation1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxAuthorisation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr.Authstn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr.Authstn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxAuthorisation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor.Authorisation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor.Authorisation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxAuthorisation1Elm in TaxAuthorisation1) {
    def CDMTaxAuthorisation1Elm = CDMTaxAuthorisation1.secAddElement();
    CDMTaxAuthorisation1Elm.Title = TaxAuthorisation1Elm.Titl;
    CDMTaxAuthorisation1Elm.Name = TaxAuthorisation1Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxCharges2_To_CDMTaxCharges2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxCharges2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Intrst.Tax</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxCharges2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Interest.Tax</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxCharges2Elm in TaxCharges2) {
    def CDMTaxCharges2Elm = CDMTaxCharges2.secAddElement();
    CDMTaxCharges2Elm.Identification = TaxCharges2Elm.Id;
    CDMTaxCharges2Elm.Rate = TaxCharges2Elm.Rate;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxCharges2Elm.Amt, CDMTaxCharges2Elm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxInformation3_To_CDMTaxInformation3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxInformation3Elm in TaxInformation3) {
    def CDMTaxInformation3Elm = CDMTaxInformation3.secAddElement();
    TaxParty1_To_CDMTaxParty1(TaxInformation3Elm.Cdtr, CDMTaxInformation3Elm.Creditor);
    TaxParty2_To_CDMTaxParty2(TaxInformation3Elm.Dbtr, CDMTaxInformation3Elm.Debtor);
    CDMTaxInformation3Elm.AdministrationZone = TaxInformation3Elm.AdmstnZn;
    CDMTaxInformation3Elm.ReferenceNumber = TaxInformation3Elm.RefNb;
    CDMTaxInformation3Elm.Method = TaxInformation3Elm.Mtd;
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxInformation3Elm.TtlTaxblBaseAmt, CDMTaxInformation3Elm.TotalTaxableBaseAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxInformation3Elm.TtlTaxAmt, CDMTaxInformation3Elm.TotalTaxAmount);
    CDMTaxInformation3Elm.Date = TaxInformation3Elm.Dt;
    CDMTaxInformation3Elm.SequenceNumber = TaxInformation3Elm.SeqNb;
    TaxRecord1_To_CDMTaxRecord1(TaxInformation3Elm.Rcrd, CDMTaxInformation3Elm.Record);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxParty1_To_CDMTaxParty1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxParty1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Cdtr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Cdtr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxParty1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Creditor</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Creditor</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxParty1Elm in TaxParty1) {
    def CDMTaxParty1Elm = CDMTaxParty1.secAddElement();
    CDMTaxParty1Elm.TaxIdentification = TaxParty1Elm.TaxId;
    CDMTaxParty1Elm.RegistrationIdentification = TaxParty1Elm.RegnId;
    CDMTaxParty1Elm.TaxType = TaxParty1Elm.TaxTp;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxParty2_To_CDMTaxParty2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Dbtr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Debtor</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxParty2Elm in TaxParty2) {
    def CDMTaxParty2Elm = CDMTaxParty2.secAddElement();
    CDMTaxParty2Elm.TaxIdentification = TaxParty2Elm.TaxId;
    CDMTaxParty2Elm.RegistrationIdentification = TaxParty2Elm.RegnId;
    CDMTaxParty2Elm.TaxType = TaxParty2Elm.TaxTp;
    TaxAuthorisation1_To_CDMTaxAuthorisation1(TaxParty2Elm.Authstn, CDMTaxParty2Elm.Authorisation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxPeriod1_To_CDMTaxPeriod1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxPeriod1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.Prd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxPeriod1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.Period</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxPeriod1Elm in TaxPeriod1) {
    def CDMTaxPeriod1Elm = CDMTaxPeriod1.secAddElement();
    CDMTaxPeriod1Elm.Year = TaxPeriod1Elm.Yr;
    CDMTaxPeriod1Elm.Type = TaxPeriod1Elm.Tp;
    DatePeriodDetails_To_CDMDatePeriodDetails(TaxPeriod1Elm.FrToDt, CDMTaxPeriod1Elm.FromToDate);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxRecord1_To_CDMTaxRecord1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxRecord1Elm in TaxRecord1) {
    def CDMTaxRecord1Elm = CDMTaxRecord1.secAddElement();
    CDMTaxRecord1Elm.Type = TaxRecord1Elm.Tp;
    CDMTaxRecord1Elm.Category = TaxRecord1Elm.Ctgy;
    CDMTaxRecord1Elm.CategoryDetails = TaxRecord1Elm.CtgyDtls;
    CDMTaxRecord1Elm.DebtorStatus = TaxRecord1Elm.DbtrSts;
    CDMTaxRecord1Elm.CertificateIdentification = TaxRecord1Elm.CertId;
    CDMTaxRecord1Elm.FormsCode = TaxRecord1Elm.FrmsCd;
    TaxPeriod1_To_CDMTaxPeriod1(TaxRecord1Elm.Prd, CDMTaxRecord1Elm.Period);
    TaxAmount1_To_CDMTaxAmount1(TaxRecord1Elm.TaxAmt, CDMTaxRecord1Elm.TaxAmount);
    CDMTaxRecord1Elm.AdditionalInformation = TaxRecord1Elm.AddtlInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxRecordDetails1_To_CDMTaxRecordDetails1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxRecordDetails1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt.Dtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_CustomerDirectDebitInitiationV02.Data.CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf.Tax.Rcrd.TaxAmt.Dtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxRecordDetails1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount.Details</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_CustomerDirectDebitInitiationV1.Data.PaymentInformation.DirectDebitTransactionInformation.Tax.Record.TaxAmount.Details</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxRecordDetails1Elm in TaxRecordDetails1) {
    def CDMTaxRecordDetails1Elm = CDMTaxRecordDetails1.secAddElement();
    TaxPeriod1_To_CDMTaxPeriod1(TaxRecordDetails1Elm.Prd, CDMTaxRecordDetails1Elm.Period);
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TaxRecordDetails1Elm.Amt, CDMTaxRecordDetails1Elm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TechnicalInputChannel1Choice_To_CDMTechnicalInputChannel1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TechnicalInputChannel1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.TechInptChanl</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.TechInptChanl</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTechnicalInputChannel1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.TechnicalInputChannel</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.TechnicalInputChannel</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TechnicalInputChannel1ChoiceElm in TechnicalInputChannel1Choice) {
    def CDMTechnicalInputChannel1ChoiceElm = CDMTechnicalInputChannel1Choice.secAddElement();
    CDMTechnicalInputChannel1ChoiceElm.Code = TechnicalInputChannel1ChoiceElm.Cd;
    CDMTechnicalInputChannel1ChoiceElm.Proprietary = TechnicalInputChannel1ChoiceElm.Prtry;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TotalsPerBankTransactionCode2_To_CDMTotalsPerBankTransactionCode2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TotalsPerBankTransactionCode2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.TxsSummry.TtlNtriesPerBkTxCd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTotalsPerBankTransactionCode2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.TransactionsSummary.TotalEntriesPerBankTransactionCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TotalsPerBankTransactionCode2Elm in TotalsPerBankTransactionCode2) {
    def CDMTotalsPerBankTransactionCode2Elm = CDMTotalsPerBankTransactionCode2.secAddElement();
    CDMTotalsPerBankTransactionCode2Elm.NumberOfEntries = TotalsPerBankTransactionCode2Elm.NbOfNtries;
    CDMTotalsPerBankTransactionCode2Elm.Sum = TotalsPerBankTransactionCode2Elm.Sum;
    CDMTotalsPerBankTransactionCode2Elm.TotalNetEntryAmount = TotalsPerBankTransactionCode2Elm.TtlNetNtryAmt;
    CDMTotalsPerBankTransactionCode2Elm.CreditDebitIndicator = TotalsPerBankTransactionCode2Elm.CdtDbtInd;
    CDMTotalsPerBankTransactionCode2Elm.ForecastIndicator = TotalsPerBankTransactionCode2Elm.FcstInd;
    BankTransactionCodeStructure4_To_CDMBankTransactionCodeStructure4(TotalsPerBankTransactionCode2Elm.BkTxCd, CDMTotalsPerBankTransactionCode2Elm.BankTransactionCode);
    CashBalanceAvailability2_To_CDMCashBalanceAvailability2(TotalsPerBankTransactionCode2Elm.Avlbty, CDMTotalsPerBankTransactionCode2Elm.Availability);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TotalTransactions2_To_CDMTotalTransactions2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TotalTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerStatementV02.Data.BkToCstmrStmt.Stmt.TxsSummry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTotalTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV1.Data.Statement.TransactionsSummary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TotalTransactions2Elm in TotalTransactions2) {
    def CDMTotalTransactions2Elm = CDMTotalTransactions2.secAddElement();
    NumberAndSumOfTransactions2_To_CDMNumberAndSumOfTransactions2(TotalTransactions2Elm.TtlNtries, CDMTotalTransactions2Elm.TotalEntries);
    NumberAndSumOfTransactions1_To_CDMNumberAndSumOfTransactions1(TotalTransactions2Elm.TtlCdtNtries, CDMTotalTransactions2Elm.TotalCreditEntries);
    NumberAndSumOfTransactions1_To_CDMNumberAndSumOfTransactions1(TotalTransactions2Elm.TtlDbtNtries, CDMTotalTransactions2Elm.TotalDebitEntries);
    TotalsPerBankTransactionCode2_To_CDMTotalsPerBankTransactionCode2(TotalTransactions2Elm.TtlNtriesPerBkTxCd, CDMTotalTransactions2Elm.TotalEntriesPerBankTransactionCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TrackData1_To_CDMTrackData1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TrackData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.TrckData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.CardTx.Card.PlainCardData.TrckData</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTrackData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.TrackData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.CardTransaction.Card.PlainCardData.TrackData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TrackData1Elm in TrackData1) {
    def CDMTrackData1Elm = CDMTrackData1.secAddElement();
    CDMTrackData1Elm.TrackNumber = TrackData1Elm.TrckNb;
    CDMTrackData1Elm.TrackValue = TrackData1Elm.TrckVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionAgents2_To_CDMTransactionAgents3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionAgents2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionAgents2Elm in TransactionAgents2) {
    def CDMTransactionAgents3Elm = CDMTransactionAgents3.secAddElement();
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.DbtrAgt, CDMTransactionAgents3Elm.DebtorAgent);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.CdtrAgt, CDMTransactionAgents3Elm.CreditorAgent);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.IntrmyAgt1, CDMTransactionAgents3Elm.IntermediaryAgent1);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.IntrmyAgt2, CDMTransactionAgents3Elm.IntermediaryAgent2);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.IntrmyAgt3, CDMTransactionAgents3Elm.IntermediaryAgent3);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.RcvgAgt, CDMTransactionAgents3Elm.ReceivingAgent);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.DlvrgAgt, CDMTransactionAgents3Elm.DeliveringAgent);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.IssgAgt, CDMTransactionAgents3Elm.IssuingAgent);
    BranchAndFinancialInstitutionIdentification4_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents2Elm.SttlmPlc, CDMTransactionAgents3Elm.SettlementPlace);
    ProprietaryAgent2_To_CDMProprietaryAgent3(TransactionAgents2Elm.Prtry, CDMTransactionAgents3Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionAgents3_To_CDMTransactionAgents3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdAgts</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedAgents</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionAgents3Elm in TransactionAgents3) {
    def CDMTransactionAgents3Elm = CDMTransactionAgents3.secAddElement();
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.DbtrAgt, CDMTransactionAgents3Elm.DebtorAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.CdtrAgt, CDMTransactionAgents3Elm.CreditorAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.IntrmyAgt1, CDMTransactionAgents3Elm.IntermediaryAgent1);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.IntrmyAgt2, CDMTransactionAgents3Elm.IntermediaryAgent2);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.IntrmyAgt3, CDMTransactionAgents3Elm.IntermediaryAgent3);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.RcvgAgt, CDMTransactionAgents3Elm.ReceivingAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.DlvrgAgt, CDMTransactionAgents3Elm.DeliveringAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.IssgAgt, CDMTransactionAgents3Elm.IssuingAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionIdentification5(TransactionAgents3Elm.SttlmPlc, CDMTransactionAgents3Elm.SettlementPlace);
    ProprietaryAgent3_To_CDMProprietaryAgent3(TransactionAgents3Elm.Prtry, CDMTransactionAgents3Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionDates2_To_CDMTransactionDates2" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionDates2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdDts</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionDates2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedDates</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionDates2Elm in TransactionDates2) {
    def CDMTransactionDates2Elm = CDMTransactionDates2.secAddElement();
    CDMTransactionDates2Elm.AcceptanceDateTime = TransactionDates2Elm.AccptncDtTm;
    CDMTransactionDates2Elm.TradActvtyCtrctlSttlmDt = TransactionDates2Elm.TradActvtyCtrctlSttlmDt;
    CDMTransactionDates2Elm.TradeDate = TransactionDates2Elm.TradDt;
    CDMTransactionDates2Elm.InterbankSettlementDate = TransactionDates2Elm.IntrBkSttlmDt;
    CDMTransactionDates2Elm.StartDate = TransactionDates2Elm.StartDt;
    CDMTransactionDates2Elm.EndDate = TransactionDates2Elm.EndDt;
    CDMTransactionDates2Elm.TransactionDateTime = TransactionDates2Elm.TxDtTm;
    ProprietaryDate2_To_CDMProprietaryDate2(TransactionDates2Elm.Prtry, CDMTransactionDates2Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionIdentifier1_To_CDMTransactionIdentifier1" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionIdentifier1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.TxId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.TxId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionIdentifier1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.TransactionIdentification</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.TransactionIdentification</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionIdentifier1Elm in TransactionIdentifier1) {
    def CDMTransactionIdentifier1Elm = CDMTransactionIdentifier1.secAddElement();
    CDMTransactionIdentifier1Elm.TransactionDateTime = TransactionIdentifier1Elm.TxDtTm;
    CDMTransactionIdentifier1Elm.TransactionReference = TransactionIdentifier1Elm.TxRef;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionInterest2_To_CDMTransactionInterest3" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionInterest2Elm in TransactionInterest2) {
    def CDMTransactionInterest3Elm = CDMTransactionInterest3.secAddElement();
    def InterestRecord1Elm = CDMTransactionInterest3Elm.Record.SecAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TransactionInterest2Elm.Amt, InterestRecord1Elm.Amount);
    InterestRecord1Elm.CreditDebitIndicator = TransactionInterest2Elm.CdtDbtInd;
    InterestType1Choice_To_CDMInterestType1Choice(TransactionInterest2Elm.Tp, InterestRecord1Elm.Type);
    Rate3_To_CDMRate3(TransactionInterest2Elm.Rate, InterestRecord1Elm.Rate);
    DateTimePeriodDetails_To_CDMDateTimePeriodDetails(TransactionInterest2Elm.FrToDt, InterestRecord1Elm.FromToDate);
    InterestRecord1Elm.Reason = TransactionInterest2Elm.Rsn;
}
 //TODO : Report.Entry.Interest.TotalInterestAndTaxAmount -> ?
 //TODO : Report.Entry.Interest.Record.Tax - > ?

]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionInterest3_To_CDMTransactionInterest3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.Intrst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Interest</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionInterest3Elm in TransactionInterest3) {
    def CDMTransactionInterest3Elm = CDMTransactionInterest3.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMActiveOrHistoricCurrencyAndAmount(TransactionInterest3Elm.TtlIntrstAndTaxAmt, CDMTransactionInterest3Elm.TotalInterestAndTaxAmount);
    InterestRecord1_To_CDMInterestRecord1(TransactionInterest3Elm.Rcrd, CDMTransactionInterest3Elm.Record);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionParties3_To_CDMTransactionParties3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionParties3Elm in TransactionParties3) {
    def CDMTransactionParties3Elm = CDMTransactionParties3.secAddElement();
    PartyIdentification43_To_CDMPartyIdentification43(TransactionParties3Elm.InitgPty, CDMTransactionParties3Elm.InitiatingParty);
    PartyIdentification43_To_CDMPartyIdentification43(TransactionParties3Elm.Dbtr, CDMTransactionParties3Elm.Debtor);
    CashAccount24_To_CDMCashAccount24(TransactionParties3Elm.DbtrAcct, CDMTransactionParties3Elm.DebtorAccount);
    PartyIdentification43_To_CDMPartyIdentification43(TransactionParties3Elm.UltmtDbtr, CDMTransactionParties3Elm.UltimateDebtor);
    PartyIdentification43_To_CDMPartyIdentification43(TransactionParties3Elm.Cdtr, CDMTransactionParties3Elm.Creditor);
    CashAccount24_To_CDMCashAccount24(TransactionParties3Elm.CdtrAcct, CDMTransactionParties3Elm.CreditorAccount);
    PartyIdentification43_To_CDMPartyIdentification43(TransactionParties3Elm.UltmtCdtr, CDMTransactionParties3Elm.UltimateCreditor);
    PartyIdentification43_To_CDMPartyIdentification43(TransactionParties3Elm.TradgPty, CDMTransactionParties3Elm.TradingParty);
    ProprietaryParty3_To_CDMProprietaryParty3(TransactionParties3Elm.Prtry, CDMTransactionParties3Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionParty2_To_CDMTransactionParties3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionParty2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedParties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionParty2Elm in TransactionParty2) {
    def CDMTransactionParties3Elm = CDMTransactionParties3.secAddElement();
    PartyIdentification32_To_CDMPartyIdentification43(TransactionParty2Elm.InitgPty, CDMTransactionParties3Elm.InitiatingParty);
    PartyIdentification32_To_CDMPartyIdentification43(TransactionParty2Elm.Dbtr, CDMTransactionParties3Elm.Debtor);
    CashAccount16_To_CDMCashAccount24(TransactionParty2Elm.DbtrAcct, CDMTransactionParties3Elm.DebtorAccount);
    PartyIdentification32_To_CDMPartyIdentification43(TransactionParty2Elm.UltmtDbtr, CDMTransactionParties3Elm.UltimateDebtor);
    PartyIdentification32_To_CDMPartyIdentification43(TransactionParty2Elm.Cdtr, CDMTransactionParties3Elm.Creditor);
    CashAccount16_To_CDMCashAccount24(TransactionParty2Elm.CdtrAcct, CDMTransactionParties3Elm.CreditorAccount);
    PartyIdentification32_To_CDMPartyIdentification43(TransactionParty2Elm.UltmtCdtr, CDMTransactionParties3Elm.UltimateCreditor);
    PartyIdentification32_To_CDMPartyIdentification43(TransactionParty2Elm.TradgPty, CDMTransactionParties3Elm.TradingParty);
    ProprietaryParty2_To_CDMProprietaryParty3(TransactionParty2Elm.Prtry, CDMTransactionParties3Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionPrice2Choice_To_CDMTransactionPrice3Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionPrice2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionPrice2ChoiceElm in TransactionPrice2Choice) {
    def CDMTransactionPrice3ChoiceElm = CDMTransactionPrice3Choice.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMPrice2(TransactionPrice2ChoiceElm.DealPric, CDMTransactionPrice3ChoiceElm.DealPric);
    if (TransactionPrice2ChoiceElm.DealPric.length() > 0)
    	CDMTransactionPrice3ChoiceElm.DealPric[0].Type.SecAddElement().ValTp = "DISC";
    ProprietaryPrice2_To_CDMProprietaryPrice2(TransactionPrice2ChoiceElm.Prtry, CDMTransactionPrice3ChoiceElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionPrice3Choice_To_CDMTransactionPrice3Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionPrice3ChoiceElm in TransactionPrice3Choice) {
    def CDMTransactionPrice3ChoiceElm = CDMTransactionPrice3Choice.secAddElement();
    Price2_To_CDMPrice2(TransactionPrice3ChoiceElm.DealPric, CDMTransactionPrice3ChoiceElm.DealPric);
    ProprietaryPrice2_To_CDMProprietaryPrice2(TransactionPrice3ChoiceElm.Prtry, CDMTransactionPrice3ChoiceElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionQuantities1Choice_To_CDMTransactionQuantities2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionQuantities1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionQuantities1ChoiceElm in TransactionQuantities1Choice) {
    def CDMTransactionQuantities2ChoiceElm = CDMTransactionQuantities2Choice.secAddElement();
    FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoice(TransactionQuantities1ChoiceElm.Qty, CDMTransactionQuantities2ChoiceElm.Quantity);
    //TODO : Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt -> ?
    ProprietaryQuantity1_To_CDMProprietaryQuantity1(TransactionQuantities1ChoiceElm.Prtry, CDMTransactionQuantities2ChoiceElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionQuantities2Choice_To_CDMTransactionQuantities2Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdQties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedQuantities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionQuantities2ChoiceElm in TransactionQuantities2Choice) {
    def CDMTransactionQuantities2ChoiceElm = CDMTransactionQuantities2Choice.secAddElement();
    FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoice(TransactionQuantities2ChoiceElm.Qty, CDMTransactionQuantities2ChoiceElm.Quantity);
    OriginalAndCurrentQuantities1_To_CDMOriginalAndCurrentQuantities1(TransactionQuantities2ChoiceElm.OrgnlAndCurFaceAmt, CDMTransactionQuantities2ChoiceElm.OrgnlAndCurFaceAmt);
    ProprietaryQuantity1_To_CDMProprietaryQuantity1(TransactionQuantities2ChoiceElm.Prtry, CDMTransactionQuantities2ChoiceElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionReferences2_To_CDMTransactionReferences3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionReferences2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionReferences2Elm in TransactionReferences2) {
    def CDMTransactionReferences3Elm = CDMTransactionReferences3.secAddElement();
    CDMTransactionReferences3Elm.MessageIdentification = TransactionReferences2Elm.MsgId;
    CDMTransactionReferences3Elm.AccountServicerReference = TransactionReferences2Elm.AcctSvcrRef;
    CDMTransactionReferences3Elm.PaymentInformationIdentification = TransactionReferences2Elm.PmtInfId;
    CDMTransactionReferences3Elm.InstructionIdentification = TransactionReferences2Elm.InstrId;
    CDMTransactionReferences3Elm.EndToEndIdentification = TransactionReferences2Elm.EndToEndId;
    CDMTransactionReferences3Elm.TransactionIdentification = TransactionReferences2Elm.TxId;
    CDMTransactionReferences3Elm.MandateIdentification = TransactionReferences2Elm.MndtId;
    CDMTransactionReferences3Elm.ChequeNumber = TransactionReferences2Elm.ChqNb;
    CDMTransactionReferences3Elm.ClearingSystemReference = TransactionReferences2Elm.ClrSysRef;
	// Todo - toVerify - four fields not mapped
    //TODO : Report.Entry.EntryDetails.TransactionDetails.References.ProcessingIdentification -> ?
    ProprietaryReference1_To_CDMProprietaryReference1(TransactionReferences2Elm.Prtry, CDMTransactionReferences3Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionReferences3_To_CDMTransactionReferences3" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.Refs</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.References</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionReferences3Elm in TransactionReferences3) {
    def CDMTransactionReferences3Elm = CDMTransactionReferences3.secAddElement();
    CDMTransactionReferences3Elm.MessageIdentification = TransactionReferences3Elm.MsgId;
    CDMTransactionReferences3Elm.AccountServicerReference = TransactionReferences3Elm.AcctSvcrRef;
    CDMTransactionReferences3Elm.PaymentInformationIdentification = TransactionReferences3Elm.PmtInfId;
    CDMTransactionReferences3Elm.InstructionIdentification = TransactionReferences3Elm.InstrId;
    CDMTransactionReferences3Elm.EndToEndIdentification = TransactionReferences3Elm.EndToEndId;
    CDMTransactionReferences3Elm.TransactionIdentification = TransactionReferences3Elm.TxId;
    CDMTransactionReferences3Elm.MandateIdentification = TransactionReferences3Elm.MndtId;
    CDMTransactionReferences3Elm.ChequeNumber = TransactionReferences3Elm.ChqNb;
    CDMTransactionReferences3Elm.ClearingSystemReference = TransactionReferences3Elm.ClrSysRef;
    CDMTransactionReferences3Elm.AccountOwnerTransactionIdentification = TransactionReferences3Elm.AcctOwnrTxId;
    CDMTransactionReferences3Elm.AccountServicerTransactionIdentification = TransactionReferences3Elm.AcctSvcrTxId;
    CDMTransactionReferences3Elm.MarketInfrastructureTransactionIdentification = TransactionReferences3Elm.MktInfrstrctrTxId;
    CDMTransactionReferences3Elm.ProcessingIdentification = TransactionReferences3Elm.PrcgId;
    ProprietaryReference1_To_CDMProprietaryReference1(TransactionReferences3Elm.Prtry, CDMTransactionReferences3Elm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="YieldedOrValueType1Choice_To_CDMYieldedOrValueType1Choice" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>YieldedOrValueType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerAccountReportV03.Data.BkToCstmrAcctRpt.Rpt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMYieldedOrValueType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPric.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def YieldedOrValueType1ChoiceElm in YieldedOrValueType1Choice) {
    def CDMYieldedOrValueType1ChoiceElm = CDMYieldedOrValueType1Choice.secAddElement();
    CDMYieldedOrValueType1ChoiceElm.Yldd = YieldedOrValueType1ChoiceElm.Yldd;
    CDMYieldedOrValueType1ChoiceElm.ValTp = YieldedOrValueType1ChoiceElm.ValTp;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ChargeType2Choice_To_CDMChargeType3Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ChargeType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CGI_BankToCustomerAccountReportV02.Data.BkToCstmrAcctRpt.Rpt.Ntry.Chrgs.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CDMChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerAccountReportV1.Data.Report.Entry.Charges.Record.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ChargeType2ChoiceElm in ChargeType2Choice) {
    def CDMChargeType3ChoiceElm = CDMChargeType3Choice.secAddElement();
    CDMChargeType3ChoiceElm.Code = ChargeType2ChoiceElm.Cd;
    GenericIdentification3_To_CDMGenericIdentification3(ChargeType2ChoiceElm.Prtry, CDMChargeType3ChoiceElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<elementproperties>
				<propertymap>
				</propertymap>
			</elementproperties>
		</folder>
		<folder name="Common" type="FunctionDefFolder">
			<FormulaFunctionDef name="AssignSrcElmToDestSec" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>srcElm</name>
						<type>Any</type>
					</parameterfield>
					<parameterfield>
						<name>destSec</name>
						<type>Any</type>
					</parameterfield>
					<parameterfield>
						<name>$funcName__TOKEN</name>
						<type>Token</type>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[def srcSec = NewSection (srcElm);
srcSec.SecAddElement (srcElm);

$funcName__TOKEN (srcSec, destSec);
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="getCreditTransferValidationNameList" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>obj</name>
						<type>DataObject</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerCreditTransferInitiationV03</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>StringList</ReturnType>
				<Code><![CDATA[def ret = ["Default"];

def pmtInf = obj.Data.CstmrCdtTrfInitn[0].PmtInf;
def pmtMtdList = GetStrings (pmtInf, "PmtMtd");
def allSame = true;
def pmtInfObj = pmtInf[0];
for (def i=1; i<pmtInf.length(); i++) {
	if (pmtInf[i].PmtMtd != pmtInfObj.PmtMtd) {
		allSame = false;
		break;
	}
}

if (allSame) {
	if (pmtInfObj.PmtMtd == "CHK")
		ret.Add ("Cheques_Drafts");
	else if (pmtInfObj.PmtMtd == "TRF") {
		if ((pmtInfObj.PmtTpInf.length() > 0) && (pmtInfObj.PmtTpInf[0].SvcLvl.length() > 0) &&
				pmtInfObj.PmtTpInf[0].SvcLvl[0].Cd.IsNotNull() && (pmtInfObj.PmtTpInf[0].SvcLvl[0].Cd == "SEPA"))
			ret.Add ("SEPA");
		else
			ret.Add ("ACH");
	}
}

return ret;
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="getDirectDebitValidationNameList" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>obj</name>
						<type>DataObject</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerCreditTransferInitiationV03</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>StringList</ReturnType>
				<Code><![CDATA[def ret = ["Default", "CGI_Direct_Debit"];
return ret;
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="getPayStatRptValidationNameList" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>obj</name>
						<type>DataObject</type>
						<allow-any>true</allow-any>
						<message>CGI_CustomerPaymentStatusReportV03</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>StringList</ReturnType>
				<Code><![CDATA[def ret = ["Default", "Status"];
return ret;
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SetCreditTransferFilteringParams" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>fsnParams</name>
						<type>DataObject</type>
						<message>FSNParams</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>filteringSide</name>
						<type>Integer</type>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[fsnParams.SetFilteringParams (filteringSide, "CstmrCdtTrfInitn.PmtInf", "CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf", "PmtId.EndToEndId", ["Amt.InstdAmt.Value", "Amt.EqvtAmt.Amt.Value"]);
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SetDirectDebitFilteringParams" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>fsnParams</name>
						<type>DataObject</type>
						<message>FSNParams</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>filteringSide</name>
						<type>Integer</type>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[fsnParams.SetFilteringParams (filteringSide, "CstmrDrctDbtInitn.PmtInf", "CstmrDrctDbtInitn.PmtInf.DrctDbtTxInf", "PmtId.EndToEndId", ["InstdAmt.Value"]);
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<elementproperties>
				<propertymap>
				</propertymap>
			</elementproperties>
		</folder>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</folder>
	<messageflow name="CreditTransferPostFilterCallBack" type="MessageFlow">
		<version>1.0</version>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>cgiObj</name>
					<type>DataObject</type>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>IN/OUT</variabletype>
					<message>CGI_CustomerCreditTransferInitiationV03</message>
					<fields>
					</fields>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="false"/>
		</additional-properties>
		<flowelement name="Start1" uid="6b6b7af4-20fe-4447-a958-fe1aa1182107" type="Start" xsi:type="Start" >
			<label>Start</label>
			<visual>
				<position x="335" y="147"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="e07da757-16f9-43e2-8cca-886b55e20c98" type="Invoke" xsi:type="Invoke" >
			<label>Update Header</label>
			<description><![CDATA[]]></description>
			<name>SAP_FW_UpdateISOCreditTransferFlow</name>
			<cascade-exceptions>false</cascade-exceptions>
			<input>
				<field>
					<name>obj</name>
					<type>DataObject</type>
					<value><![CDATA[cgiObj]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>forceComputeHeaderControlSum</name>
					<type>Boolean</type>
					<value><![CDATA[false]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>obj</name>
					<type>DataObject</type>
					<value><![CDATA[cgiObj]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="336" y="208"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="08e760aa-7f59-4214-908d-77f9de9a28ff" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<visual>
				<position x="335" y="271"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="6b6b7af4-20fe-4447-a958-fe1aa1182107" portindex="0"/>
			<inputport uid="e07da757-16f9-43e2-8cca-886b55e20c98" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="e07da757-16f9-43e2-8cca-886b55e20c98" portindex="1"/>
			<inputport uid="08e760aa-7f59-4214-908d-77f9de9a28ff" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="294" y="133" width="89" height="152"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<messageflow name="DirectDebitPostFilterCallBack" type="MessageFlow">
		<version>1.0</version>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>cgiObj</name>
					<type>DataObject</type>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>IN/OUT</variabletype>
					<message>CGI_CustomerDirectDebitInitiationV02</message>
					<fields>
					</fields>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="false"/>
		</additional-properties>
		<flowelement name="Start1" uid="6b6b7af4-20fe-4447-a958-fe1aa1182107" type="Start" xsi:type="Start" >
			<label>Start</label>
			<visual>
				<position x="335" y="147"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="e07da757-16f9-43e2-8cca-886b55e20c98" type="Invoke" xsi:type="Invoke" >
			<label>Update Header</label>
			<description><![CDATA[]]></description>
			<name>SAP_FW_UpdateISODirectDebitFlow</name>
			<cascade-exceptions>false</cascade-exceptions>
			<input>
				<field>
					<name>obj</name>
					<type>DataObject</type>
					<value><![CDATA[cgiObj]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>forceComputeHeaderControlSum</name>
					<type>Boolean</type>
					<value><![CDATA[false]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>obj</name>
					<type>DataObject</type>
					<value><![CDATA[cgiObj]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="336" y="209"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="08e760aa-7f59-4214-908d-77f9de9a28ff" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<visual>
				<position x="335" y="271"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="6b6b7af4-20fe-4447-a958-fe1aa1182107" portindex="0"/>
			<inputport uid="e07da757-16f9-43e2-8cca-886b55e20c98" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="e07da757-16f9-43e2-8cca-886b55e20c98" portindex="1"/>
			<inputport uid="08e760aa-7f59-4214-908d-77f9de9a28ff" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="294" y="133" width="89" height="152"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<elementproperties>
		<propertymap>
			<property name="DOCUMENT_PROPERTIES">
				<value>
					<propertymap>
						<property name="Creation Time" value="Thu Feb 21 16:31:48 IST 2013"/>
						<property name="Author" value="Partha"/>
						<property name="Title" value="GenericMapper"/>
						<property name="Client Id" value="Kanmani_08Oct13Win@Volante.com"/>
						<property name="Last Author" value="HOME"/>
						<property name="Last Save Time" value="Wed Oct 09 11:50:03 IST 2013"/>
						<property name="Designer Build" value="1432"/>
						<property name="Revision Number" value="303"/>
					</propertymap>
				</value>
			</property>
			<property name="CARTRIDGE_INFO">
				<value>
					<propertymap type="com.tplus.transform.design.CartridgeInfo">
						<property name="GeneratedFiles">
							<value>
								<propertymap>
								</propertymap>
							</value>
						</property>
						<property name="cartridgefilename" value="E:\Testing\Search\SAP-CDM-Mappings\Mappings\CDMV1\CGI_ISO\CGI_ISOLibrary\CGI_ISOLibrary.car"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.options">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.java.JavaCodeGeneratorOptions">
						<property name="isJBoss" value="true"/>
						<property name="resource-references">
							<value>
								<propertylist>
								</propertylist>
							</value>
						</property>
						<property name="isOSGI" value="true"/>
						<property name="isGenerateALSB" value="false"/>
						<property name="isEJB" value="true"/>
						<property name="osgi-options">
							<value>
								<propertymap>
									<property name="include-dependencies" value="false"/>
								</propertymap>
							</value>
						</property>
						<property name="isOrion" value="true"/>
						<property name="isWebSphere" value="true"/>
						<property name="isVolante" value="true"/>
						<property name="isRemote" value="true"/>
						<property name="isLocal" value="true"/>
						<property name="isWebLogic" value="true"/>
						<property name="isGeronimo" value="true"/>
						<property name="isGenerateJNDILinks" value="true"/>
						<property name="isWLEVS" value="false"/>
						<property name="isGenerateEAR" value="false"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.properties">
				<value>
					<propertymap type="com.tplus.transform.design.PropertiesDef">
						<property name="Java Package Name" value="com.transform.cartridge.%c"/>
						<property name="Max Class Length" value="150"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.bindings">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.DefaultLanguageMapping">
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.general">
				<value>
					<propertymap>
					</propertymap>
				</value>
			</property>
		</propertymap>
	</elementproperties>
	<workspace>
		<selected-element root="">SAP-CDM-BTMU-Mappings/Current/SAP-CDM-Mappings/Mappings/CDMV1/CGI_ISO/CGI_ISOLibrary/CGI_ISOLibrary/DirectDebitPostFilterCallBack</selected-element>
	</workspace>
</cartridge>

