<?xml version="1.0" encoding="UTF-8" ?>
<cartridge xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="6.2.0-SNAPSHOT" name="CDMV2_ISOV03_BankToCustomerStatement" type="Cartridge">
	<version>1.0</version>
	<read-only>false</read-only>
	<private>
		<summary>
			<service name="ISOV03ToCDMV2_BankToCustomerStatement" version="1.0" type="Mapping">
			</service>
			<service name="CDMV2ToISOV03_BankToCustomerStatement" version="1.0" type="Mapping">
			</service>
			<service name="ISOToCDMV2_BkToCstmrStmt" version="0.2" type="Message Flow">
				<entry-point>true</entry-point>
				<description>Converts ISO camt.053.001.03 to CDM V2 BankToCustomerStatement</description>
			</service>
			<service name="ISOToCDMV2_BkToCstmrStmtFSN" version="0.2" type="Message Flow">
				<entry-point>true</entry-point>
				<description>Converts ISO camt.053.001.03 wrapped in FSN to CDM V2 BankToCustomerStatement wrapped in FSN</description>
			</service>
			<service name="CDMV2ToISO_BkToCstmrStmt" version="0.2" type="Message Flow">
				<entry-point>true</entry-point>
				<description>Converts CDM V2 BankToCustomerStatement to ISO camt.053.001.03</description>
			</service>
			<service name="CDMV2ToISO_BkToCstmrStmtFSN" version="0.2" type="Message Flow">
				<entry-point>true</entry-point>
				<description>Converts CDM V2 BankToCustomerStatement wrapped in FSN to ISO camt.053.001.03 wrapped in FSN</description>
			</service>
			<function name="ISOV03ToCDMV2_BankToCustomerStatement"/>
			<function name="CDMV2ToISOV03_BankToCustomerStatement"/>
			<function name="AccountInterest2_To_CDMAccountInterestType"/>
			<function name="AccountStatement3_To_CDMAccountStatementType"/>
			<function name="ActiveCurrencyAndAmount_To_CDMAmountType"/>
			<function name="ActiveOrHistoricCurrencyAnd13DecimalAmount_To_CDMAmountType"/>
			<function name="AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchangeType"/>
			<function name="AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetailsType"/>
			<function name="AmountAndCurrencyExchangeDetails4_To_CDMProprietaryAmountAndCurrencyExchangeDetailsType"/>
			<function name="AmountRangeBoundary1_To_CDMAmountRangeBoundaryType"/>
			<function name="BalanceType12_To_CDMBalanceTypeCodeType"/>
			<function name="BankTransactionCodeStructure4_To_CDMBankTransactionType"/>
			<function name="BatchInformation2_To_CDMBatchInformationType"/>
			<function name="BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType"/>
			<function name="CardAggregated1_To_CDMCardAggregatedType"/>
			<function name="CardDataReading1Code_To_CDMCardDataReadingCodeType"/>
			<function name="CardEntry1_To_CDMCardEntryType"/>
			<function name="CardholderVerificationCapability1Code_To_CDMCardholderVerificationCapabilityCodeType"/>
			<function name="CardIndividualTransaction1_To_CDMCardIndividualTransactionType"/>
			<function name="CardSecurityInformation1_To_CDMCardSecurityInformationType"/>
			<function name="CardSequenceNumberRange1_To_CDMCardSequenceNumberRangeType"/>
			<function name="CardTransaction1_To_CDMCardTransactionType"/>
			<function name="CashAccount24_To_CDMCashAccountType"/>
			<function name="CashAccount24_To_CDMRelatedCashAccountType"/>
			<function name="CashAccount25_To_CDMCashAccountType"/>
			<function name="CashAccountType2Choice_To_CDMCashAccountTypeCodeType"/>
			<function name="CashBalance3_To_CDMCashBalanceType"/>
			<function name="CashBalanceAvailability2_To_CDMCashBalanceAvailabilityType"/>
			<function name="CashDeposit1_To_CDMCashDepositType"/>
			<function name="Charges3_To_CDMChargesType"/>
			<function name="ChargesRecord1_To_CDMChargesRecordType"/>
			<function name="ChargeType3Choice_To_CDMChargeTypeCodeType"/>
			<function name="CorporateAction9_To_CDMCorporateActionType"/>
			<function name="CreditLine2_To_CDMCreditLineType"/>
			<function name="CurrencyAndAmountRange2_To_CDMCurrencyAndAmountRangeType"/>
			<function name="CurrencyExchange5_To_CDMCurrencyExchangeType"/>
			<function name="DateAndDateTimeChoice_To_CDMDateAndDateTimeChoiceType"/>
			<function name="DateTimePeriodDetails_To_CDMDateTimePeriodDetailsType"/>
			<function name="DiscountAmountAndType1_To_CDMDiscountTypeAndAmountType"/>
			<function name="DiscountAmountType1Choice_To_CDMDiscountAmountTypeCodeType"/>
			<function name="DisplayCapabilities1_To_CDMDisplayCapabilitiesType"/>
			<function name="EntryDetails2_To_CDMEntryDetailsType"/>
			<function name="EntryTransaction3_To_CDMEntryTransactionType"/>
			<function name="FinancialInstitutionIdentification8_To_CDMFinancialInstitutionType"/>
			<function name="FromToAmountRange_To_CDMFromToAmountRangeType"/>
			<function name="GenericIdentification1_To_CDMGenericCardIDType"/>
			<function name="GenericIdentification32_To_CDMGenericCardIDType"/>
			<function name="GroupHeader58_To_CDMGroupHeaderType"/>
			<function name="ImpliedCurrencyAmountRangeChoice_To_CDMImpliedCurrencyAmountRangeChoiceType"/>
			<function name="InterestRecord1_To_CDMInterestRecordType"/>
			<function name="InterestType1Choice_To_CDMInterestTypeCodeType"/>
			<function name="InterestType1Choice_To_CDMTypeInterestType"/>
			<function name="Max105Text_To_CDMstring"/>
			<function name="MessageIdentification2_To_CDMAdditionalMessageIndicatorType"/>
			<function name="NumberAndSumOfTransactions1_To_CDMTotalCreditDebitTransactionsType"/>
			<function name="NumberAndSumOfTransactions2_To_CDMNumberAndSumOfTransactionsType"/>
			<function name="OriginalAndCurrentQuantities1_To_CDMOriginalAndCurrentQuantitiesType"/>
			<function name="OriginalBusinessQuery1_To_CDMOriginalBusinessQueryType"/>
			<function name="Pagination_To_CDMPaginationType"/>
			<function name="Party11Choice_To_CDMPartyIDType"/>
			<function name="PartyIdentification43_To_CDMPartyType"/>
			<function name="PaymentCard4_To_CDMPaymentCardType"/>
			<function name="PaymentReturnReason2_To_CDMPaymentReturnReasonType"/>
			<function name="PlainCardData1_To_CDMPlainCardDataType"/>
			<function name="PointOfInteraction1_To_CDMPointOfInteractionType"/>
			<function name="PointOfInteractionCapabilities1_To_CDMPointOfInteractionCapabilitiesType"/>
			<function name="PointOfInteractionComponent1_To_CDMPointOfInteractionComponentType"/>
			<function name="Price2_To_CDMPriceType"/>
			<function name="Product2_To_CDMProductType"/>
			<function name="ProprietaryAgent3_To_CDMProprietaryAgentType"/>
			<function name="ProprietaryDate2_To_CDMProprietaryDateType"/>
			<function name="ProprietaryParty3_To_CDMProprietaryPartyType"/>
			<function name="ProprietaryPrice2_To_CDMProprietaryPriceType"/>
			<function name="ProprietaryQuantity1_To_CDMProprietaryQuantityType"/>
			<function name="ProprietaryReference1_To_CDMReferencingIDType"/>
			<function name="Rate3_To_CDMInterestRateType"/>
			<function name="ReferredDocumentInformation3_To_CDMReferredDocumentType"/>
			<function name="RemittanceAmount2_To_CDMRemittanceAmountType"/>
			<function name="RemittanceInformation7_To_CDMRemittanceInformationType"/>
			<function name="ReportEntry3_To_CDMReportEntryType"/>
			<function name="ReportingSource1Choice_To_CDMReportingSourceCodeType"/>
			<function name="ReturnReason5Choice_To_CDMReturnReasonCodeType"/>
			<function name="SecuritiesAccount13_To_CDMSecuritiesAccountType"/>
			<function name="SecurityIdentification14_To_CDMSecurityIDType"/>
			<function name="StructuredRemittanceInformation9_To_CDMStructuredRemittanceInformationType"/>
			<function name="SupplementaryData1_To_CDMSupplementaryDataType"/>
			<function name="SupplementaryDataEnvelope1_To_CDMSupplementaryDataEnvelopeType"/>
			<function name="TaxAmountAndType1_To_CDMTaxTypeAndAmountType"/>
			<function name="TaxAmountType1Choice_To_CDMTaxAmountTypeCodeType"/>
			<function name="TaxCharges2_To_CDMTaxChargesType"/>
			<function name="TechnicalInputChannel1Choice_To_CDMTechnicalInputChannelCodeType"/>
			<function name="TotalsPerBankTransactionCode2_To_CDMBankTransactionCodeTotalsType"/>
			<function name="TotalTransactions2_To_CDMTotalTransactionsType"/>
			<function name="TrackData1_To_CDMTrackDataType"/>
			<function name="TransactionAgents3_To_CDMTransactionAgentsType"/>
			<function name="TransactionDates2_To_CDMTransactionDatesType"/>
			<function name="TransactionInterest3_To_CDMTransactionInterestType"/>
			<function name="TransactionParties3_To_CDMTransactionPartiesType"/>
			<function name="TransactionPrice3Choice_To_CDMTransactionPriceChoiceType"/>
			<function name="TransactionQuantities2Choice_To_CDMTransactionQuantitiesChoiceType"/>
			<function name="TransactionReferences3_To_CDMTransactionReferencesType"/>
			<function name="CardTransaction1Choice_To_CDMCardTransactionChoiceType"/>
			<function name="RateType4Choice_To_CDMRateTypeChoiceType"/>
			<function name="FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoiceType"/>
			<function name="YieldedOrValueType1Choice_To_CDMYieldedOrValueType1ChoiceType"/>
			<function name="PriceRateOrAmountChoice_To_CDMPriceRateOrAmountChoiceType"/>
			<function name="CDMAccountInterestType_To_AccountInterest2"/>
			<function name="CDMAccountStatementType_To_AccountStatement3"/>
			<function name="CDMAdditionalMessageIndicatorType_To_ActiveOrHistoricCurrencyAndAmount"/>
			<function name="CDMAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails3"/>
			<function name="CDMAmountAndCurrencyExchangeType_To_AmountAndCurrencyExchange3"/>
			<function name="CDMAmountRangeBoundaryType_To_AmountRangeBoundary1"/>
			<function name="CDMAmountType_To_ActiveCurrencyAndAmount"/>
			<function name="CDMAmountType_To_ActiveOrHistoricCurrencyAnd13DecimalAmount"/>
			<function name="CDMBalanceTypeCodeType_To_BalanceType12"/>
			<function name="CDMBankTransactionCodeTotalsType_To_TotalsPerBankTransactionCode2"/>
			<function name="CDMBankTransactionType_To_BankTransactionCodeStructure4"/>
			<function name="CDMBankTransactionType_To_PartyIdentification43"/>
			<function name="CDMBatchInformationType_To_BatchInformation2"/>
			<function name="CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5"/>
			<function name="CDMCardAggregatedType_To_CardAggregated1"/>
			<function name="CDMCardDataReadingCodeType_To_CardDataReading1Code"/>
			<function name="CDMCardEntryType_To_CardEntry1"/>
			<function name="CDMCardholderVerificationCapabilityCodeType_To_CardholderVerificationCapability1Code"/>
			<function name="CDMCardIndividualTransactionType_To_CardIndividualTransaction1"/>
			<function name="CDMCardSecurityInformationType_To_CardSecurityInformation1"/>
			<function name="CDMCardSequenceNumberRangeType_To_CardSequenceNumberRange1"/>
			<function name="CDMCardTransactionType_To_CardTransaction1"/>
			<function name="CDMCashAccountType_To_CashAccount24"/>
			<function name="CDMCashAccountType_To_CashAccount25"/>
			<function name="CDMCashAccountTypeCodeType_To_CashAccountType2Choice"/>
			<function name="CDMCashBalanceAvailabilityType_To_CashBalanceAvailability2"/>
			<function name="CDMCashBalanceType_To_CashBalance3"/>
			<function name="CDMCashDepositType_To_CashDeposit1"/>
			<function name="CDMChargesRecordType_To_ChargesRecord1"/>
			<function name="CDMChargesType_To_Charges3"/>
			<function name="CDMChargeTypeCodeType_To_ChargeType3Choice"/>
			<function name="CDMCorporateActionType_To_CorporateAction9"/>
			<function name="CDMCreditLineType_To_CreditLine2"/>
			<function name="CDMCurrencyAndAmountRangeType_To_CurrencyAndAmountRange2"/>
			<function name="CDMCurrencyExchangeType_To_CurrencyExchange5"/>
			<function name="CDMDateAndDateTimeChoiceType_To_DateAndDateTimeChoice"/>
			<function name="CDMDateTimePeriodDetailsType_To_DateTimePeriodDetails"/>
			<function name="CDMDiscountAmountTypeCodeType_To_DiscountAmountType1Choice"/>
			<function name="CDMDiscountTypeAndAmountType_To_DiscountAmountAndType1"/>
			<function name="CDMDisplayCapabilitiesType_To_DisplayCapabilities1"/>
			<function name="CDMEntryDetailsType_To_EntryDetails2"/>
			<function name="CDMEntryTransactionType_To_EntryTransaction3"/>
			<function name="CDMFinancialInstitutionType_To_FinancialInstitutionIdentification8"/>
			<function name="CDMFromToAmountRangeType_To_FromToAmountRange"/>
			<function name="CDMGenericCardIDType_To_GenericIdentification1"/>
			<function name="CDMGenericCardIDType_To_GenericIdentification32"/>
			<function name="CDMGroupHeaderType_To_GroupHeader58"/>
			<function name="CDMImpliedCurrencyAmountRangeChoiceType_To_ImpliedCurrencyAmountRangeChoice"/>
			<function name="CDMInterestRateType_To_Rate3"/>
			<function name="CDMInterestRecordType_To_InterestRecord1"/>
			<function name="CDMInterestTypeCodeType_To_InterestType1Choice"/>
			<function name="CDMNumberAndSumOfTransactionsType_To_NumberAndSumOfTransactions2"/>
			<function name="CDMOriginalAndCurrentQuantitiesType_To_OriginalAndCurrentQuantities1"/>
			<function name="CDMOriginalBusinessQueryType_To_OriginalBusinessQuery1"/>
			<function name="CDMPaginationType_To_Pagination"/>
			<function name="CDMPartyIDType_To_Party11Choice"/>
			<function name="CDMPartyType_To_PartyIdentification43"/>
			<function name="CDMPaymentCardType_To_PaymentCard4"/>
			<function name="CDMPaymentReturnReasonType_To_PaymentReturnReason2"/>
			<function name="CDMPlainCardDataType_To_PlainCardData1"/>
			<function name="CDMPointOfInteractionCapabilitiesType_To_PointOfInteractionCapabilities1"/>
			<function name="CDMPointOfInteractionComponentType_To_PointOfInteractionComponent1"/>
			<function name="CDMPointOfInteractionType_To_PointOfInteraction1"/>
			<function name="CDMPriceType_To_Price2"/>
			<function name="CDMProductType_To_Product2"/>
			<function name="CDMProprietaryAgentType_To_ProprietaryAgent3"/>
			<function name="CDMProprietaryAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails4"/>
			<function name="CDMProprietaryDateType_To_ProprietaryDate2"/>
			<function name="CDMProprietaryPartyType_To_ProprietaryParty3"/>
			<function name="CDMProprietaryPriceType_To_ProprietaryPrice2"/>
			<function name="CDMProprietaryQuantityType_To_ProprietaryQuantity1"/>
			<function name="CDMReferencingIDType_To_ProprietaryReference1"/>
			<function name="CDMReferredDocumentType_To_ReferredDocumentInformation3"/>
			<function name="CDMRelatedCashAccountType_To_CashAccount24"/>
			<function name="CDMRemittanceAmountType_To_RemittanceAmount2"/>
			<function name="CDMRemittanceInformationType_To_RemittanceInformation7"/>
			<function name="CDMReportEntryType_To_ReportEntry3"/>
			<function name="CDMReportingSourceCodeType_To_ReportingSource1Choice"/>
			<function name="CDMReturnReasonCodeType_To_ReturnReason5Choice"/>
			<function name="CDMSecuritiesAccountType_To_SecuritiesAccount13"/>
			<function name="CDMSecurityIDType_To_SecurityIdentification14"/>
			<function name="CDMstring_To_Max105Text"/>
			<function name="CDMStructuredRemittanceInformationType_To_StructuredRemittanceInformation9"/>
			<function name="CDMSupplementaryDataEnvelopeType_To_SupplementaryDataEnvelope1"/>
			<function name="CDMSupplementaryDataType_To_SupplementaryData1"/>
			<function name="CDMTaxAmountTypeCodeType_To_TaxAmountType1Choice"/>
			<function name="CDMTaxChargesType_To_TaxCharges2"/>
			<function name="CDMTaxTypeAndAmountType_To_TaxAmountAndType1"/>
			<function name="CDMTechnicalInputChannelCodeType_To_TechnicalInputChannel1Choice"/>
			<function name="CDMTotalCreditDebitTransactionsType_To_NumberAndSumOfTransactions1"/>
			<function name="CDMTotalTransactionsType_To_TotalTransactions2"/>
			<function name="CDMTrackDataType_To_TrackData1"/>
			<function name="CDMTransactionAgentsType_To_TransactionAgents3"/>
			<function name="CDMTransactionDatesType_To_TransactionDates2"/>
			<function name="CDMTransactionInterestType_To_TransactionInterest3"/>
			<function name="CDMTransactionPartiesType_To_TransactionParties3"/>
			<function name="CDMTransactionPriceChoiceType_To_TransactionPrice3Choice"/>
			<function name="CDMTransactionQuantitiesChoiceType_To_TransactionQuantities2Choice"/>
			<function name="CDMTransactionReferencesType_To_TransactionReferences3"/>
			<function name="CDMTypeInterestType_To_InterestType1Choice"/>
			<function name="CDMCardTransactionChoiceType_To_CardTransaction1Choice"/>
			<function name="CDMRateTypeChoiceType_To_RateType4Choice"/>
			<function name="CDMYieldedOrValueTypeChoiceType_To_YieldedOrValueType1Choice"/>
			<function name="CDMPriceRateOrAmountChoiceType_To_PriceRateOrAmountChoice"/>
			<function name="CDMFinancialInstrumentQuantityChoiceType_To_FinancialInstrumentQuantityChoice"/>
		</summary>
	</private>
	<references type="References">
		<reference>
			<type>Cartridge</type>
			<relative-path>../../../../../Messages/CDM/V2/CDMV2Messages.car</relative-path>
			<absolute-path>/home/administrator/Sowmiya/QF-Test/Search/TestCart/SAP-CDM-Mappings/Messages/CDM/V2/CDMV2Messages.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>../../../../../Messages/ISO20022/ISO20022Messages.car</relative-path>
			<absolute-path>/home/administrator/Sowmiya/QF-Test/Search/TestCart/SAP-CDM-Mappings/Messages/ISO20022/ISO20022Messages.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>../../CDM_CGIISOLibrary/CDMMappingFunctions.car</relative-path>
			<absolute-path>/home/administrator/Sowmiya/QF-Test/Search/TestCart/SAP-CDM-Mappings/Mappings/CDMV2/CGI_ISO/CDM_CGIISOLibrary/CDMMappingFunctions.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>../../../../Library/GenericMapper/GenericMapper.car</relative-path>
			<absolute-path>/home/administrator/Sowmiya/QF-Test/Search/TestCart/SAP-CDM-Mappings/Mappings/Library/GenericMapper/GenericMapper.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>../../../../../Messages/MessageTypeValue/MessageTypeValue.car</relative-path>
			<absolute-path>/home/administrator/Sowmiya/QF-Test/Search/TestCart/SAP-CDM-Mappings/Messages/MessageTypeValue/MessageTypeValue.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>../../../../../FSNProcessor/Mappings_FSNProcessor.car</relative-path>
			<absolute-path>/home/administrator/Sowmiya/QF-Test/Search/TestCart/SAP-CDM-Mappings/FSNProcessor/Mappings_FSNProcessor.car</absolute-path>
		</reference>
	</references>
	<messagemapping rulename="ISOV03ToCDMV2_BankToCustomerStatement" type="MessageMapping">
		<source>ISO_BankToCustomerStatementV03</source>
		<destination>CDM_BankToCustomerStatementV2</destination>
		<mappingrules>
			<mappings>
				<mapping type="formula">
					<source-field><![CDATA[ISOV03ToCDMV2_BankToCustomerStatement ($this, $that);]]></source-field>
					<destination-field>GroupHeader</destination-field>
				</mapping>
			</mappings>
		</mappingrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.mapping.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messagemapping>
	<messagemapping rulename="CDMV2ToISOV03_BankToCustomerStatement" type="MessageMapping">
		<source>CDM_BankToCustomerStatementV2</source>
		<destination>ISO_BankToCustomerStatementV03</destination>
		<mappingrules>
			<mappings>
				<mapping type="formula">
					<source-field><![CDATA[CDMV2ToISOV03_BankToCustomerStatement ($this, $that);]]></source-field>
					<destination-field>BkToCstmrStmt</destination-field>
				</mapping>
			</mappings>
		</mappingrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.mapping.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messagemapping>
	<messageflow name="ISOToCDMV2_BkToCstmrStmt" type="MessageFlow">
		<version>0.2</version>
		<description><![CDATA[Converts ISO camt.053.001.03 to CDM V2 BankToCustomerStatement]]></description>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<description><![CDATA[ISO input message]]></description>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<description><![CDATA[CDM output message]]></description>
					<notnull>true</notnull>
					<variabletype>OUTPUT</variabletype>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="true"/>
		</additional-properties>
		<flowelement name="Invoke1" uid="ee12afdf-8cd9-46c9-b434-d007151b216e" type="Invoke" xsi:type="Invoke" >
			<label>Invoke FSN Flow</label>
			<description><![CDATA[]]></description>
			<name>ISOToCDMV2_BkToCstmrStmtFSN</name>
			<cascade-exceptions>true</cascade-exceptions>
			<input>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<value><![CDATA[rawIn]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<value><![CDATA[rawOut]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="422" y="106"/>
			</visual>
		</flowelement>
		<flowelement name="Start1" uid="e2bc72bc-10e4-4c11-87aa-c89cfc4d6040" type="Start" xsi:type="Start" >
			<label>Start</label>
			<visual>
				<position x="422" y="39"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="64d9d419-a9aa-4a48-a812-6092b1fc1464" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<visual>
				<position x="422" y="174"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="ee12afdf-8cd9-46c9-b434-d007151b216e" portindex="1"/>
			<inputport uid="64d9d419-a9aa-4a48-a812-6092b1fc1464" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="e2bc72bc-10e4-4c11-87aa-c89cfc4d6040" portindex="0"/>
			<inputport uid="ee12afdf-8cd9-46c9-b434-d007151b216e" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="388" y="25" width="73" height="163"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<messageflow name="ISOToCDMV2_BkToCstmrStmtFSN" type="MessageFlow">
		<version>0.2</version>
		<description><![CDATA[Converts ISO camt.053.001.03 wrapped in FSN to CDM V2 BankToCustomerStatement wrapped in FSN]]></description>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<description><![CDATA[FSN input message]]></description>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>fsnParamsObj</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>FSNParams</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<description><![CDATA[FSN output message]]></description>
					<notnull>true</notnull>
					<variabletype>OUTPUT</variabletype>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="true"/>
		</additional-properties>
		<flowelement name="Start1" uid="8452d60e-5297-4ef6-bbb4-a82f1bcd7bf3" type="Start" xsi:type="Start" >
			<label>Start</label>
			<visual>
				<position x="372" y="39"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="955e9482-fa3b-4372-8b0b-862914fa22ab" type="Invoke" xsi:type="Invoke" >
			<label>Invoke FSN Processor</label>
			<description><![CDATA[]]></description>
			<name>SAP_FW_FSNProcessor</name>
			<cascade-exceptions>true</cascade-exceptions>
			<input>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<value><![CDATA[rawIn]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>fsnParamsObj</name>
					<type>DataObject</type>
					<value><![CDATA[fsnParamsObj]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<value><![CDATA[rawOut]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="371" y="199"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="8ed7c076-94a7-4094-aff0-3b85b4df961b" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<visual>
				<position x="371" y="267"/>
			</visual>
		</flowelement>
		<flowelement name="Create1" uid="4be9467c-247d-415c-9c13-2a165a24c1c5" type="Create" xsi:type="Create" >
			<label>Create Framework Params</label>
			<description><![CDATA[]]></description>
			<out>fsnParamsObj</out>
			<message>FSNParams</message>
			<init>fsnParamsObj.SetFSNMessageNames (
	FSNMSGTYPE.CAMT_053_001_02,
	FSNMSGTYPE.BANK_TO_CUST_STATEMENT_2_0
);

fsnParamsObj.SetBasicParams(
	"ISO_BankToCustomerStatementV03",
		"ISOV03ToCDMV2_BankToCustomerStatement",
			"CDM_BankToCustomerStatementV2"
);

fsnParamsObj.SetCartridgeDetails (
	"ISOToCDMV2_BkToCstmrStmtFSN", "0.2"
);

</init>
			<visual>
				<position x="372" y="112"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="955e9482-fa3b-4372-8b0b-862914fa22ab" portindex="1"/>
			<inputport uid="8ed7c076-94a7-4094-aff0-3b85b4df961b" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="8452d60e-5297-4ef6-bbb4-a82f1bcd7bf3" portindex="0"/>
			<inputport uid="4be9467c-247d-415c-9c13-2a165a24c1c5" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="4be9467c-247d-415c-9c13-2a165a24c1c5" portindex="1"/>
			<inputport uid="955e9482-fa3b-4372-8b0b-862914fa22ab" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="337" y="25" width="73" height="256"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<messageflow name="CDMV2ToISO_BkToCstmrStmt" type="MessageFlow">
		<version>0.2</version>
		<description><![CDATA[Converts CDM V2 BankToCustomerStatement to ISO camt.053.001.03]]></description>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<description><![CDATA[CDM input message]]></description>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<description><![CDATA[ISO output message]]></description>
					<notnull>true</notnull>
					<variabletype>OUTPUT</variabletype>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="true"/>
		</additional-properties>
		<flowelement name="Start1" uid="08ce9a00-38af-49a7-a7db-bda8eb885b7d" type="Start" xsi:type="Start" >
			<label>Start</label>
			<visual>
				<position x="422" y="39"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="e491db0c-ab19-4b0a-be2c-ea6fb6c36433" type="Invoke" xsi:type="Invoke" >
			<label>Invoke FSN Flow</label>
			<description><![CDATA[]]></description>
			<name>CDMV2ToISO_BkToCstmrStmtFSN</name>
			<cascade-exceptions>true</cascade-exceptions>
			<input>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<value><![CDATA[rawIn]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<value><![CDATA[rawOut]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="422" y="106"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="80906a0d-2046-4586-966d-0debd67a17b9" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<visual>
				<position x="422" y="174"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="e491db0c-ab19-4b0a-be2c-ea6fb6c36433" portindex="1"/>
			<inputport uid="80906a0d-2046-4586-966d-0debd67a17b9" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="08ce9a00-38af-49a7-a7db-bda8eb885b7d" portindex="0"/>
			<inputport uid="e491db0c-ab19-4b0a-be2c-ea6fb6c36433" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="388" y="25" width="73" height="163"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<messageflow name="CDMV2ToISO_BkToCstmrStmtFSN" type="MessageFlow">
		<version>0.2</version>
		<description><![CDATA[Converts CDM V2 BankToCustomerStatement wrapped in FSN to ISO camt.053.001.03 wrapped in FSN]]></description>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<description><![CDATA[FSN input message]]></description>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>fsnParamsObj</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>FSNParams</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<description><![CDATA[FSN output message]]></description>
					<notnull>true</notnull>
					<variabletype>OUTPUT</variabletype>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="true"/>
		</additional-properties>
		<flowelement name="Start1" uid="8452d60e-5297-4ef6-bbb4-a82f1bcd7bf3" type="Start" xsi:type="Start" >
			<label>Start</label>
			<visual>
				<position x="372" y="39"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="955e9482-fa3b-4372-8b0b-862914fa22ab" type="Invoke" xsi:type="Invoke" >
			<label>Invoke FSN Processor</label>
			<description><![CDATA[]]></description>
			<name>SAP_FW_FSNProcessor</name>
			<cascade-exceptions>true</cascade-exceptions>
			<input>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<value><![CDATA[rawIn]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>fsnParamsObj</name>
					<type>DataObject</type>
					<value><![CDATA[fsnParamsObj]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<value><![CDATA[rawOut]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="370" y="202"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="8ed7c076-94a7-4094-aff0-3b85b4df961b" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<visual>
				<position x="371" y="267"/>
			</visual>
		</flowelement>
		<flowelement name="Create1" uid="b7e47627-560a-4ce9-bac3-05a0f0a685e6" type="Create" xsi:type="Create" >
			<label>Create Framework Params</label>
			<description><![CDATA[]]></description>
			<out>fsnParamsObj</out>
			<message>FSNParams</message>
			<init>fsnParamsObj.SetFSNMessageNames (
	FSNMSGTYPE.BANK_TO_CUST_STATEMENT_2_0,
	FSNMSGTYPE.CAMT_053_001_02
);

fsnParamsObj.SetBasicParams(
	"CDM_BankToCustomerStatementV2",
		"CDMV2ToISOV03_BankToCustomerStatement",
			"ISO_BankToCustomerStatementV03"
);

fsnParamsObj.SetCartridgeDetails (
	"CDMV2ToISO_BkToCstmrStmtFSN", "0.2"
);
</init>
			<visual>
				<position x="372" y="112"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="955e9482-fa3b-4372-8b0b-862914fa22ab" portindex="1"/>
			<inputport uid="8ed7c076-94a7-4094-aff0-3b85b4df961b" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="8452d60e-5297-4ef6-bbb4-a82f1bcd7bf3" portindex="0"/>
			<inputport uid="b7e47627-560a-4ce9-bac3-05a0f0a685e6" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="b7e47627-560a-4ce9-bac3-05a0f0a685e6" portindex="1"/>
			<inputport uid="955e9482-fa3b-4372-8b0b-862914fa22ab" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="336" y="25" width="73" height="256"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<folder name="Function Definitions" type="FunctionDefFolder">
		<FormulaFunctionDef name="ISOV03ToCDMV2_BankToCustomerStatement" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>srcObj</name>
					<type>DataObject</type>
					<allow-any>true</allow-any>
					<message>ISO_BankToCustomerStatementV03</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>destObj</name>
					<type>DataObject</type>
					<output>true</output>
					<message>CDM_BankToCustomerStatementV2</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<ReturnOptional>true</ReturnOptional>
			<Code><![CDATA[]]></Code>
			<function-type>Mapping</function-type>
			<source-format>
				<xpath-namespaces>
					<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
					<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
					<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
				</xpath-namespaces>
				<fields>
					<field>
						<name>srcObj</name>
						<type>DataObject</type>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
						<message>ISO_BankToCustomerStatementV03</message>
						<fields>
						</fields>
					</field>
				</fields>
			</source-format>
			<destination-format>
				<xpath-namespaces>
					<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
					<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
					<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
				</xpath-namespaces>
				<fields>
					<field>
						<name>destObj</name>
						<type>DataObject</type>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
						<message>CDM_BankToCustomerStatementV2</message>
						<fields>
						</fields>
					</field>
				</fields>
			</destination-format>
			<mappingrules>
				<mappings>
					<mapping type="formula">
						<source-field><![CDATA[GroupHeader58_To_CDMGroupHeaderType(srcObj.Data.BkToCstmrStmt.GrpHdr, $value)]]></source-field>
						<destination-field>destObj.Data.GroupHeader</destination-field>
					</mapping>
					<mapping type="formula">
						<source-field><![CDATA[AccountStatement3_To_CDMAccountStatementType(srcObj.Data.BkToCstmrStmt.Stmt, $value)]]></source-field>
						<destination-field>destObj.Data.Statement</destination-field>
					</mapping>
					<mapping type="formula">
						<source-field><![CDATA[SupplementaryData1_To_CDMSupplementaryDataType(srcObj.Data.BkToCstmrStmt.SplmtryData, $value)]]></source-field>
						<destination-field>destObj.Data.SupplementaryData</destination-field>
					</mapping>
				</mappings>
			</mappingrules>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="CDMV2ToISOV03_BankToCustomerStatement" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>srcObj</name>
					<type>DataObject</type>
					<message>CDM_BankToCustomerStatementV2</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>destObj</name>
					<type>DataObject</type>
					<allow-any>true</allow-any>
					<output>true</output>
					<message>ISO_BankToCustomerStatementV03</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<Code><![CDATA[]]></Code>
			<function-type>Mapping</function-type>
			<source-format>
				<xpath-namespaces>
					<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
					<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
					<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
				</xpath-namespaces>
				<fields>
					<field>
						<name>srcObj</name>
						<type>DataObject</type>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
						<message>CDM_BankToCustomerStatementV2</message>
						<fields>
						</fields>
					</field>
				</fields>
			</source-format>
			<destination-format>
				<xpath-namespaces>
					<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
					<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
					<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
				</xpath-namespaces>
				<fields>
					<field>
						<name>destObj</name>
						<type>DataObject</type>
						<minoccurs>0</minoccurs>
						<maxoccurs>1</maxoccurs>
						<message>ISO_BankToCustomerStatementV03</message>
						<fields>
						</fields>
					</field>
				</fields>
			</destination-format>
			<mappingrules>
				<mappings>
					<mapping type="formula">
						<source-field><![CDATA[CDMGroupHeaderType_To_GroupHeader58(srcObj.Data.GroupHeader, $value)]]></source-field>
						<destination-field>destObj.Data.BkToCstmrStmt.GrpHdr</destination-field>
					</mapping>
					<mapping type="formula">
						<source-field><![CDATA[CDMAccountStatementType_To_AccountStatement3(srcObj.Data.Statement, $value)]]></source-field>
						<destination-field>destObj.Data.BkToCstmrStmt.Stmt</destination-field>
					</mapping>
					<mapping type="formula">
						<source-field><![CDATA[CDMSupplementaryDataType_To_SupplementaryData1(srcObj.Data.SupplementaryData, $value)]]></source-field>
						<destination-field>destObj.Data.BkToCstmrStmt.SplmtryData</destination-field>
					</mapping>
				</mappings>
			</mappingrules>
		</FormulaFunctionDef>
		<folder name="ISOToCDM" type="FunctionDefFolder">
			<FormulaFunctionDef name="AccountInterest2_To_CDMAccountInterestType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AccountInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAccountInterestType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AccountInterest2Elm in AccountInterest2) {
    def CDMAccountInterestTypeElm = CDMAccountInterestType.secAddElement();
    InterestType1Choice_To_CDMInterestTypeCodeType(AccountInterest2Elm.Tp, CDMAccountInterestTypeElm.Type);
    Rate3_To_CDMInterestRateType(AccountInterest2Elm.Rate, CDMAccountInterestTypeElm.Rate);
    DateTimePeriodDetails_To_CDMDateTimePeriodDetailsType(AccountInterest2Elm.FrToDt, CDMAccountInterestTypeElm.FromToDate);
    CDMAccountInterestTypeElm.Reason = AccountInterest2Elm.Rsn;
}
 //TODO : Statement.Interest.Tax -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AccountStatement3_To_CDMAccountStatementType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AccountStatement3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAccountStatementType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AccountStatement3Elm in AccountStatement3) {
    def CDMAccountStatementTypeElm = CDMAccountStatementType.secAddElement();
    isoCodeToCDMCodeScheme(AccountStatement3Elm.Id, CDMAccountStatementTypeElm.ID);
    Pagination_To_CDMPaginationType(AccountStatement3Elm.StmtPgntn, CDMAccountStatementTypeElm.StatementPagination);
    CDMAccountStatementTypeElm.ElectronicSequenceNumber = AccountStatement3Elm.ElctrncSeqNb;
    CDMAccountStatementTypeElm.LegalSequenceNumber = AccountStatement3Elm.LglSeqNb;
    CDMAccountStatementTypeElm.CreationDateTime = AccountStatement3Elm.CreDtTm;
    DateTimePeriodDetails_To_CDMDateTimePeriodDetailsType(AccountStatement3Elm.FrToDt, CDMAccountStatementTypeElm.FromToDate);
    isoCodeToCDMCodeList(AccountStatement3Elm.CpyDplctInd, CDMAccountStatementTypeElm.CopyDuplicateIndicator);
    ReportingSource1Choice_To_CDMReportingSourceCodeType(AccountStatement3Elm.RptgSrc, CDMAccountStatementTypeElm.ReportingSource);
    CashAccount25_To_CDMCashAccountType(AccountStatement3Elm.Acct, CDMAccountStatementTypeElm.Account);
    CashAccount24_To_CDMRelatedCashAccountType(AccountStatement3Elm.RltdAcct, CDMAccountStatementTypeElm.RelatedAccount);
    AccountInterest2_To_CDMAccountInterestType(AccountStatement3Elm.Intrst, CDMAccountStatementTypeElm.Interest);
    CashBalance3_To_CDMCashBalanceType(AccountStatement3Elm.Bal, CDMAccountStatementTypeElm.Balance);
    TotalTransactions2_To_CDMTotalTransactionsType(AccountStatement3Elm.TxsSummry, CDMAccountStatementTypeElm.TransactionsSummary);
    ReportEntry3_To_CDMReportEntryType(AccountStatement3Elm.Ntry, CDMAccountStatementTypeElm.Entry);
    CDMAccountStatementTypeElm.AdditionalStatementInformation = AccountStatement3Elm.AddtlStmtInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveCurrencyAndAmount_To_CDMAmountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveCurrencyAndAmountElm in ActiveCurrencyAndAmount) {
    isoAmountToCDMAmount (ActiveCurrencyAndAmountElm, CDMAmountType);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ActiveOrHistoricCurrencyAnd13DecimalAmount_To_CDMAmountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAnd13DecimalAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Value.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Value.Amount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveOrHistoricCurrencyAnd13DecimalAmountElm in ActiveOrHistoricCurrencyAnd13DecimalAmount) {
    isoAmountToCDMAmount (ActiveOrHistoricCurrencyAnd13DecimalAmountElm, CDMAmountType);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchangeType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountAndCurrencyExchange3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountAndCurrencyExchange3Elm in AmountAndCurrencyExchange3) {
    def CDMAmountAndCurrencyExchangeTypeElm = CDMAmountAndCurrencyExchangeType.secAddElement();
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetailsType(AmountAndCurrencyExchange3Elm.InstdAmt, CDMAmountAndCurrencyExchangeTypeElm.InstructedAmount);
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetailsType(AmountAndCurrencyExchange3Elm.TxAmt, CDMAmountAndCurrencyExchangeTypeElm.TransactionAmount);
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetailsType(AmountAndCurrencyExchange3Elm.CntrValAmt, CDMAmountAndCurrencyExchangeTypeElm.CounterValueAmount);
    AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetailsType(AmountAndCurrencyExchange3Elm.AnncdPstngAmt, CDMAmountAndCurrencyExchangeTypeElm.AnnouncedPostingAmount);
    AmountAndCurrencyExchangeDetails4_To_CDMProprietaryAmountAndCurrencyExchangeDetailsType(AmountAndCurrencyExchange3Elm.PrtryAmt, CDMAmountAndCurrencyExchangeTypeElm.ProprietaryAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountAndCurrencyExchangeDetails3_To_CDMAmountAndCurrencyExchangeDetailsType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountAndCurrencyExchangeDetails3Elm in AmountAndCurrencyExchangeDetails3) {
    def CDMAmountAndCurrencyExchangeDetailsTypeElm = CDMAmountAndCurrencyExchangeDetailsType.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(AmountAndCurrencyExchangeDetails3Elm.Amt, CDMAmountAndCurrencyExchangeDetailsTypeElm.Amount);
    CurrencyExchange5_To_CDMCurrencyExchangeType(AmountAndCurrencyExchangeDetails3Elm.CcyXchg, CDMAmountAndCurrencyExchangeDetailsTypeElm.CurrencyExchange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountAndCurrencyExchangeDetails4_To_CDMProprietaryAmountAndCurrencyExchangeDetailsType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.PrtryAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.PrtryAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryAmountAndCurrencyExchangeDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.ProprietaryAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.ProprietaryAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountAndCurrencyExchangeDetails4Elm in AmountAndCurrencyExchangeDetails4) {
    def CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm = CDMProprietaryAmountAndCurrencyExchangeDetailsType.secAddElement();
    CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm.Type = AmountAndCurrencyExchangeDetails4Elm.Tp;
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(AmountAndCurrencyExchangeDetails4Elm.Amt, CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm.Amount);
    CurrencyExchange5_To_CDMCurrencyExchangeType(AmountAndCurrencyExchangeDetails4Elm.CcyXchg, CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm.CurrencyExchange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="AmountRangeBoundary1_To_CDMAmountRangeBoundaryType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>AmountRangeBoundary1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAmountRangeBoundaryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def AmountRangeBoundary1Elm in AmountRangeBoundary1) {
    def CDMAmountRangeBoundaryTypeElm = CDMAmountRangeBoundaryType.secAddElement();
    CDMAmountRangeBoundaryTypeElm.BoundaryAmount = AmountRangeBoundary1Elm.BdryAmt;
    CDMAmountRangeBoundaryTypeElm.Included = AmountRangeBoundary1Elm.Incl;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BalanceType12_To_CDMBalanceTypeCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BalanceType12</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBalanceTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BalanceType12Elm in BalanceType12) {
    isoCdOrPrtryToCDMCodeList(BalanceType12Elm.CdOrPrtry[0], CDMBalanceTypeCodeType);
}
 //TODO : Statement.Balance.Type.listID -> ?
//TODO : Statement.Balance.Type.listVersionID -> ?
//TODO : Statement.Balance.Type.listAgencyID -> ?
//TODO : Statement.Balance.Type.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BankTransactionCodeStructure4_To_CDMBankTransactionType" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>BankTransactionCodeStructure4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBankTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransaction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BankTransactionCodeStructure4Elm in BankTransactionCodeStructure4) {
	def CDMBankTransactionTypeElm = CDMBankTransactionType.SecAddElement();
	if (BankTransactionCodeStructure4Elm.Domn.length() > 0) {
		def domn = BankTransactionCodeStructure4Elm.Domn[0];
		isoCodeToCDMCodeList (domn.Cd, CDMBankTransactionTypeElm.Code);
		def family = CDMBankTransactionTypeElm.Family.SecAddelement();
		isoCodeToCDMCodeList (domn.Fmly[0].Cd, family.Code);
		isoCodeToCDMCodeList (domn.Fmly[0].SubFmlyCd, family.SubFamilyCode);
	}
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BatchInformation2_To_CDMBatchInformationType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BatchInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.Btch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.Btch</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBatchInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.Batch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.Batch</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BatchInformation2Elm in BatchInformation2) {
    def CDMBatchInformationTypeElm = CDMBatchInformationType.secAddElement();
    isoCodeToCDMCodeScheme(BatchInformation2Elm.MsgId, CDMBatchInformationTypeElm.MessageID);
    isoCodeToCDMCodeScheme(BatchInformation2Elm.PmtInfId, CDMBatchInformationTypeElm.PaymentInformationID);
    CDMBatchInformationTypeElm.NumberOfTransactions = BatchInformation2Elm.NbOfTxs;
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(BatchInformation2Elm.TtlAmt, CDMBatchInformationTypeElm.TotalAmount);
    isoCodeToCDMCodeList(BatchInformation2Elm.CdtDbtInd, CDMBatchInformationTypeElm.CreditDebitIndicatorCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>BranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBranchAndFinancialInstitutionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def BranchAndFinancialInstitutionIdentification5Elm in BranchAndFinancialInstitutionIdentification5) {
    def CDMBranchAndFinancialInstitutionTypeElm = CDMBranchAndFinancialInstitutionType.secAddElement();
    FinancialInstitutionIdentification8_To_CDMFinancialInstitutionType(BranchAndFinancialInstitutionIdentification5Elm.FinInstnId, CDMBranchAndFinancialInstitutionTypeElm.FinancialInstitution);
    BranchData2_To_CDMBranchDataType(BranchAndFinancialInstitutionIdentification5Elm.BrnchId, CDMBranchAndFinancialInstitutionTypeElm.Branch);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardAggregated1_To_CDMCardAggregatedType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardAggregated1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardAggregatedType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardAggregated1Elm in CardAggregated1) {
    def CDMCardAggregatedTypeElm = CDMCardAggregatedType.secAddElement();
    isoCodeToCDMCodeList(CardAggregated1Elm.AddtlSvc, CDMCardAggregatedTypeElm.AdditionalServiceCode);
    isoCodeToCDMCodeList(CardAggregated1Elm.TxCtgy, CDMCardAggregatedTypeElm.TransactionCategoryCode);
    CDMCardAggregatedTypeElm.SaleReconciliationID = CardAggregated1Elm.SaleRcncltnId;
    CardSequenceNumberRange1_To_CDMCardSequenceNumberRangeType(CardAggregated1Elm.SeqNbRg, CDMCardAggregatedTypeElm.SequenceNumberRange);
}
 //TODO : Statement.Entry.CardTransaction.AggregatedEntry.AggregatedEntryGroup1 -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardDataReading1Code_To_CDMCardDataReadingCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardDataReading1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardDataReadingCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardDataReading1CodeElm in CardDataReading1Code) {
    //TODO : Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode.listID -> ?
    //TODO : Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode.listVersionID -> ?
    //TODO : Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode.listAgencyID -> ?
    isoCodeToCDMCodeList(CardDataReading1CodeElm.Value, CDMCardDataReadingCodeType);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardEntry1_To_CDMCardEntryType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardEntry1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardEntryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardEntry1Elm in CardEntry1) {
    def CDMCardEntryTypeElm = CDMCardEntryType.secAddElement();
    PaymentCard4_To_CDMPaymentCardType(CardEntry1Elm.Card, CDMCardEntryTypeElm.Card);
    PointOfInteraction1_To_CDMPointOfInteractionType(CardEntry1Elm.POI, CDMCardEntryTypeElm.POI);
    CardAggregated1_To_CDMCardAggregatedType(CardEntry1Elm.AggtdNtry, CDMCardEntryTypeElm.AggregatedEntry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardholderVerificationCapability1Code_To_CDMCardholderVerificationCapabilityCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardholderVerificationCapability1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardholderVerificationCapabilityCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardholderVerificationCapability1CodeElm in CardholderVerificationCapability1Code) {
    //TODO : Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode.listID -> ?
    //TODO : Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode.listVersionID -> ?
    //TODO : Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode.listAgencyID -> ?
    isoCodeToCDMCodeList (CardholderVerificationCapability1CodeElm.Value, CDMCardholderVerificationCapabilityCodeType);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardIndividualTransaction1_To_CDMCardIndividualTransactionType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardIndividualTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardIndividualTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardIndividualTransaction1Elm in CardIndividualTransaction1) {
    def CDMCardIndividualTransactionTypeElm = CDMCardIndividualTransactionType.secAddElement();
    isoCodeToCDMCodeList(CardIndividualTransaction1Elm.AddtlSvc, CDMCardIndividualTransactionTypeElm.AdditionalServiceCode);
    isoCodeToCDMCodeList(CardIndividualTransaction1Elm.TxCtgy, CDMCardIndividualTransactionTypeElm.TransactionCategoryCode);
    isoCodeToCDMCodeScheme(CardIndividualTransaction1Elm.SaleRcncltnId, CDMCardIndividualTransactionTypeElm.SaleReconciliationID);
    CDMCardIndividualTransactionTypeElm.SaleReferenceNumber = CardIndividualTransaction1Elm.SaleRefNb;
    CDMCardIndividualTransactionTypeElm.SequenceNumber = CardIndividualTransaction1Elm.SeqNb;
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.TransactionID -> ?
    if (CardIndividualTransaction1Elm.TxId.length() > 0)
    	isoCodeToCDMCodeScheme (CardIndividualTransaction1Elm.TxId[0].TxRef, CDMCardIndividualTransactionTypeElm.TransactionID);
    Product2_To_CDMProductType(CardIndividualTransaction1Elm.Pdct, CDMCardIndividualTransactionTypeElm.Product);
    CDMCardIndividualTransactionTypeElm.ValidationDate = CardIndividualTransaction1Elm.VldtnDt;
    CDMCardIndividualTransactionTypeElm.ValidationSequenceNumber = CardIndividualTransaction1Elm.VldtnSeqNb;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardSecurityInformation1_To_CDMCardSecurityInformationType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardSecurityInformation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardSecurityInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardSecurityInformation1Elm in CardSecurityInformation1) {
    def CDMCardSecurityInformationTypeElm = CDMCardSecurityInformationType.secAddElement();
    isoCodeToCDMCodeList(CardSecurityInformation1Elm.CSCMgmt, CDMCardSecurityInformationTypeElm.CSCManagement);
    CDMCardSecurityInformationTypeElm.CSCValue = CardSecurityInformation1Elm.CSCVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardSequenceNumberRange1_To_CDMCardSequenceNumberRangeType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardSequenceNumberRange1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry.SeqNbRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry.SeqNbRg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardSequenceNumberRangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardSequenceNumberRange1Elm in CardSequenceNumberRange1) {
    def CDMCardSequenceNumberRangeTypeElm = CDMCardSequenceNumberRangeType.secAddElement();
    CDMCardSequenceNumberRangeTypeElm.FirstTransaction = CardSequenceNumberRange1Elm.FrstTx;
    CDMCardSequenceNumberRangeTypeElm.LastTransaction = CardSequenceNumberRange1Elm.LastTx;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardTransaction1_To_CDMCardTransactionType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCardTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardTransaction1Elm in CardTransaction1) {
    def CDMCardTransactionTypeElm = CDMCardTransactionType.secAddElement();
    PaymentCard4_To_CDMPaymentCardType(CardTransaction1Elm.Card, CDMCardTransactionTypeElm.Card);
    PointOfInteraction1_To_CDMPointOfInteractionType(CardTransaction1Elm.POI, CDMCardTransactionTypeElm.POI);
    CardTransaction1Choice_To_CDMCardTransactionChoiceType(CardTransaction1Elm.Tx, CDMCardTransactionTypeElm.Transaction);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount24_To_CDMCashAccountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.DbtrAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.DbtrAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.DebtorAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.DebtorAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount24Elm in CashAccount24) {
    def CDMCashAccountTypeElm = CDMCashAccountType.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIDType(CashAccount24Elm.Id, CDMCashAccountTypeElm.ID);
    CashAccountType2Choice_To_CDMCashAccountTypeCodeType(CashAccount24Elm.Tp, CDMCashAccountTypeElm.Type);
    isoCodeToCDMCodeList(CashAccount24Elm.Ccy, CDMCashAccountTypeElm.Currency);
    CDMCashAccountTypeElm.Name = CashAccount24Elm.Nm;
}
 //TODO : Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.DebtorAccount.Owner -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.DebtorAccount.Servicer -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount24_To_CDMRelatedCashAccountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RltdAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RltdAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRelatedCashAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.RelatedAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.RelatedAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount24Elm in CashAccount24) {
    def CDMRelatedCashAccountTypeElm = CDMRelatedCashAccountType.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIDType(CashAccount24Elm.Id, CDMRelatedCashAccountTypeElm.ID);
    CashAccountType2Choice_To_CDMCashAccountTypeCodeType(CashAccount24Elm.Tp, CDMRelatedCashAccountTypeElm.Type);
    isoCodeToCDMCodeList(CashAccount24Elm.Ccy, CDMRelatedCashAccountTypeElm.Currency);
    CDMRelatedCashAccountTypeElm.Name = CashAccount24Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccount25_To_CDMCashAccountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccount25Elm in CashAccount25) {
    def CDMCashAccountTypeElm = CDMCashAccountType.secAddElement();
    AccountIdentification4Choice_To_CDMAccountIDType(CashAccount25Elm.Id, CDMCashAccountTypeElm.ID);
    CashAccountType2Choice_To_CDMCashAccountTypeCodeType(CashAccount25Elm.Tp, CDMCashAccountTypeElm.Type);
    isoCodeToCDMCodeList(CashAccount25Elm.Ccy, CDMCashAccountTypeElm.Currency);
    CDMCashAccountTypeElm.Name = CashAccount25Elm.Nm;
    PartyIdentification43_To_CDMPartyType(CashAccount25Elm.Ownr, CDMCashAccountTypeElm.Owner);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(CashAccount25Elm.Svcr, CDMCashAccountTypeElm.Servicer);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashAccountType2Choice_To_CDMCashAccountTypeCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashAccountTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashAccountType2ChoiceElm in CashAccountType2Choice) {
    //TODO : Statement.Account.Type.listID -> ?
    //TODO : Statement.Account.Type.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (CashAccountType2ChoiceElm, CDMCashAccountTypeCodeType);
}
 //TODO : Statement.Account.Type.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashBalance3_To_CDMCashBalanceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashBalance3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashBalanceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashBalance3Elm in CashBalance3) {
    def CDMCashBalanceTypeElm = CDMCashBalanceType.secAddElement();
    BalanceType12_To_CDMBalanceTypeCodeType(CashBalance3Elm.Tp, CDMCashBalanceTypeElm.Type);
    CreditLine2_To_CDMCreditLineType(CashBalance3Elm.CdtLine, CDMCashBalanceTypeElm.CreditLine);
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(CashBalance3Elm.Amt, CDMCashBalanceTypeElm.Amount);
    isoCodeToCDMCodeList(CashBalance3Elm.CdtDbtInd, CDMCashBalanceTypeElm.CreditDebitIndicatorCode);
    def balGrp1 = CDMCashBalanceTypeElm.BalanceGroup1.SecAddElement();
    balGrp1.Date = CashBalance3Elm.Dt[0].Dt;
    balGrp1.DateTime = CashBalance3Elm.Dt[0].DtTm;
    //TODO : Statement.Balance.BalanceGroup1 -> ?
    CashBalanceAvailability2_To_CDMCashBalanceAvailabilityType(CashBalance3Elm.Avlbty, CDMCashBalanceTypeElm.Availability);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashBalanceAvailability2_To_CDMCashBalanceAvailabilityType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashBalanceAvailability2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Avlbty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Avlbty</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashBalanceAvailabilityType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Availability</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Availability</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashBalanceAvailability2Elm in CashBalanceAvailability2) {
    def CDMCashBalanceAvailabilityTypeElm = CDMCashBalanceAvailabilityType.secAddElement();
    def availabilityGroup1 = CDMCashBalanceAvailabilityTypeElm.AvailabilityGroup1.SecAddElement();
    if (IsNotNull (CashBalanceAvailability2Elm.Dt[0].NbOfDays))
	    availabilityGroup1.NumberOfDays = ToBigInteger (CashBalanceAvailability2Elm.Dt[0].NbOfDays);
    availabilityGroup1.ActualDate = CashBalanceAvailability2Elm.Dt[0].ActlDt;
    //TODO : Statement.Balance.Availability.AvailabilityGroup1 -> ?
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(CashBalanceAvailability2Elm.Amt, CDMCashBalanceAvailabilityTypeElm.Amount);
    isoCodeToCDMCodeList(CashBalanceAvailability2Elm.CdtDbtInd, CDMCashBalanceAvailabilityTypeElm.CreditDebitIndicatorCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CashDeposit1_To_CDMCashDepositType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CashDeposit1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCashDepositType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CashDeposit1Elm in CashDeposit1) {
    def CDMCashDepositTypeElm = CDMCashDepositType.secAddElement();
    ActiveCurrencyAndAmount_To_CDMAmountType(CashDeposit1Elm.NoteDnmtn, CDMCashDepositTypeElm.NoteDenomination);
    CDMCashDepositTypeElm.NumberOfNotes = CashDeposit1Elm.NbOfNotes;
    ActiveCurrencyAndAmount_To_CDMAmountType(CashDeposit1Elm.Amt, CDMCashDepositTypeElm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Charges3_To_CDMChargesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Charges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs</description>
					</parameterfield>
					<parameterfield>
						<name>CDMChargesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Charges3Elm in Charges3) {
    def CDMChargesTypeElm = CDMChargesType.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(Charges3Elm.TtlChrgsAndTaxAmt, CDMChargesTypeElm.TotalChargesAndTaxAmount);
    ChargesRecord1_To_CDMChargesRecordType(Charges3Elm.Rcrd, CDMChargesTypeElm.Record);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ChargesRecord1_To_CDMChargesRecordType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ChargesRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMChargesRecordType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ChargesRecord1Elm in ChargesRecord1) {
    def CDMChargesRecordTypeElm = CDMChargesRecordType.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(ChargesRecord1Elm.Amt, CDMChargesRecordTypeElm.Amount);
    isoCodeToCDMCodeList(ChargesRecord1Elm.CdtDbtInd, CDMChargesRecordTypeElm.CreditDebitIndicatorCode);
    ChargeType3Choice_To_CDMChargeTypeCodeType(ChargesRecord1Elm.Tp, CDMChargesRecordTypeElm.TypeCode);
    CDMChargesRecordTypeElm.Rate = ChargesRecord1Elm.Rate;
    isoCodeToCDMCodeList(ChargesRecord1Elm.Br, CDMChargesRecordTypeElm.BearerCode);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(ChargesRecord1Elm.Agt, CDMChargesRecordTypeElm.Agent);
    TaxCharges2_To_CDMTaxChargesType(ChargesRecord1Elm.Tax, CDMChargesRecordTypeElm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ChargeType3Choice_To_CDMChargeTypeCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMChargeTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.TypeCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ChargeType3ChoiceElm in ChargeType3Choice) {
    //TODO : Statement.Entry.Charges.Record.TypeCode.listID -> ?
    //TODO : Statement.Entry.Charges.Record.TypeCode.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (ChargeType3ChoiceElm, CDMChargeTypeCodeType);
}
 //TODO : Statement.Entry.Charges.Record.TypeCode.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CorporateAction9_To_CDMCorporateActionType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CorpActn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CorpActn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCorporateActionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CorporateAction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CorporateAction</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CorporateAction9Elm in CorporateAction9) {
    def CDMCorporateActionTypeElm = CDMCorporateActionType.secAddElement();
    CDMCorporateActionTypeElm.EventType = CorporateAction9Elm.EvtTp;
    isoCodeToCDMCodeScheme(CorporateAction9Elm.EvtId, CDMCorporateActionTypeElm.EventID);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CreditLine2_To_CDMCreditLineType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CreditLine2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.CdtLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.CdtLine</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCreditLineType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance.CreditLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance.CreditLine</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CreditLine2Elm in CreditLine2) {
    def CDMCreditLineTypeElm = CDMCreditLineType.secAddElement();
    CDMCreditLineTypeElm.Included = CreditLine2Elm.Incl;
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(CreditLine2Elm.Amt, CDMCreditLineTypeElm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CurrencyAndAmountRange2_To_CDMCurrencyAndAmountRangeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CurrencyAndAmountRange2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCurrencyAndAmountRangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CurrencyAndAmountRange2Elm in CurrencyAndAmountRange2) {
    def CDMCurrencyAndAmountRangeTypeElm = CDMCurrencyAndAmountRangeType.secAddElement();
    ImpliedCurrencyAmountRangeChoice_To_CDMImpliedCurrencyAmountRangeChoiceType(CurrencyAndAmountRange2Elm.Amt, CDMCurrencyAndAmountRangeTypeElm.Amount);
    isoCodeToCDMCodeList(CurrencyAndAmountRange2Elm.CdtDbtInd, CDMCurrencyAndAmountRangeTypeElm.CreditDebitIndicatorCode);
    isoCodeToCDMCodeList(CurrencyAndAmountRange2Elm.Ccy, CDMCurrencyAndAmountRangeTypeElm.Currency);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CurrencyExchange5_To_CDMCurrencyExchangeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CurrencyExchange5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt.CcyXchg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt.CcyXchg</description>
					</parameterfield>
					<parameterfield>
						<name>CDMCurrencyExchangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount.CurrencyExchange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount.CurrencyExchange</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CurrencyExchange5Elm in CurrencyExchange5) {
    def CDMCurrencyExchangeTypeElm = CDMCurrencyExchangeType.secAddElement();
    isoCodeToCDMCodeList(CurrencyExchange5Elm.SrcCcy, CDMCurrencyExchangeTypeElm.SourceCurrency);
    isoCodeToCDMCodeList(CurrencyExchange5Elm.TrgtCcy, CDMCurrencyExchangeTypeElm.TargetCurrency);
    isoCodeToCDMCodeList(CurrencyExchange5Elm.UnitCcy, CDMCurrencyExchangeTypeElm.UnitCurrency);
    CDMCurrencyExchangeTypeElm.ExchangeRate = CurrencyExchange5Elm.XchgRate;
    isoCodeToCDMCodeScheme(CurrencyExchange5Elm.CtrctId, CDMCurrencyExchangeTypeElm.ContractID);
    CDMCurrencyExchangeTypeElm.QuotationDate = CurrencyExchange5Elm.QtnDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DateAndDateTimeChoice_To_CDMDateAndDateTimeChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DateAndDateTimeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry.Dt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry.Dt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDateAndDateTimeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary.Date</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary.Date</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DateAndDateTimeChoiceElm in DateAndDateTimeChoice) {
    def CDMDateAndDateTimeChoiceTypeElm = CDMDateAndDateTimeChoiceType.secAddElement();
	if (DateAndDateTimeChoiceElm.Dt.IsNotNull())
		CDMDateAndDateTimeChoiceTypeElm.Date = DateAndDateTimeChoiceElm.Dt;
	else
		CDMDateAndDateTimeChoiceTypeElm.DateTime = DateAndDateTimeChoiceElm.DtTm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DateTimePeriodDetails_To_CDMDateTimePeriodDetailsType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DateTimePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.FrToDt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.FrToDt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDateTimePeriodDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.FromToDate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.FromToDate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DateTimePeriodDetailsElm in DateTimePeriodDetails) {
    def CDMDateTimePeriodDetailsTypeElm = CDMDateTimePeriodDetailsType.secAddElement();
    CDMDateTimePeriodDetailsTypeElm.FromDateTime = DateTimePeriodDetailsElm.FrDtTm;
    CDMDateTimePeriodDetailsTypeElm.ToDateTime = DateTimePeriodDetailsElm.ToDtTm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DiscountAmountAndType1_To_CDMDiscountTypeAndAmountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDiscountTypeAndAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DiscountAmountAndType1Elm in DiscountAmountAndType1) {
    def CDMDiscountTypeAndAmountTypeElm = CDMDiscountTypeAndAmountType.secAddElement();
    DiscountAmountType1Choice_To_CDMDiscountAmountTypeCodeType(DiscountAmountAndType1Elm.Tp, CDMDiscountTypeAndAmountTypeElm.TypeCode);
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(DiscountAmountAndType1Elm.Amt, CDMDiscountTypeAndAmountTypeElm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DiscountAmountType1Choice_To_CDMDiscountAmountTypeCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DiscountAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDiscountAmountTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DiscountAmountType1ChoiceElm in DiscountAmountType1Choice) {
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode.listID -> ?
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (DiscountAmountType1ChoiceElm, CDMDiscountAmountTypeCodeType);
}
 //TODO : Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="DisplayCapabilities1_To_CDMDisplayCapabilitiesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>DisplayCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.DispCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.DispCpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMDisplayCapabilitiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def DisplayCapabilities1Elm in DisplayCapabilities1) {
    def CDMDisplayCapabilitiesTypeElm = CDMDisplayCapabilitiesType.secAddElement();
    isoCodeToCDMCodeList(DisplayCapabilities1Elm.DispTp, CDMDisplayCapabilitiesTypeElm.DisplayTypeCode);
    CDMDisplayCapabilitiesTypeElm.NumberOfLines = DisplayCapabilities1Elm.NbOfLines;
    if (IsNotNull (DisplayCapabilities1Elm.LineWidth))
    	CDMDisplayCapabilitiesTypeElm.LineWidth = toBigInteger(DisplayCapabilities1Elm.LineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EntryDetails2_To_CDMEntryDetailsType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEntryDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EntryDetails2Elm in EntryDetails2) {
    def CDMEntryDetailsTypeElm = CDMEntryDetailsType.secAddElement();
    BatchInformation2_To_CDMBatchInformationType(EntryDetails2Elm.Btch, CDMEntryDetailsTypeElm.Batch);
    EntryTransaction3_To_CDMEntryTransactionType(EntryDetails2Elm.TxDtls, CDMEntryDetailsTypeElm.TransactionDetails);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="EntryTransaction3_To_CDMEntryTransactionType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>EntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls</description>
					</parameterfield>
					<parameterfield>
						<name>CDMEntryTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def EntryTransaction3Elm in EntryTransaction3) {
    def CDMEntryTransactionTypeElm = CDMEntryTransactionType.secAddElement();
    TransactionReferences3_To_CDMTransactionReferencesType(EntryTransaction3Elm.Refs, CDMEntryTransactionTypeElm.References);
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(EntryTransaction3Elm.Amt, CDMEntryTransactionTypeElm.Amount);
    isoCodeToCDMCodeList(EntryTransaction3Elm.CdtDbtInd, CDMEntryTransactionTypeElm.CreditDebitIndicatorCode);
    AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchangeType(EntryTransaction3Elm.AmtDtls, CDMEntryTransactionTypeElm.AmountDetails);
    CashBalanceAvailability2_To_CDMCashBalanceAvailabilityType(EntryTransaction3Elm.Avlbty, CDMEntryTransactionTypeElm.Availability);
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.BankTransaction -> ?
    BankTransactionCodeStructure4_To_CDMBankTransactionType (EntryTransaction3Elm.BkTxCd, CDMEntryTransactionTypeElm.BankTransaction);
    Charges3_To_CDMChargesType(EntryTransaction3Elm.Chrgs, CDMEntryTransactionTypeElm.Charges);
    TransactionInterest3_To_CDMTransactionInterestType(EntryTransaction3Elm.Intrst, CDMEntryTransactionTypeElm.Interest);
    TransactionParties3_To_CDMTransactionPartiesType(EntryTransaction3Elm.RltdPties, CDMEntryTransactionTypeElm.RelatedParties);
    TransactionAgents3_To_CDMTransactionAgentsType(EntryTransaction3Elm.RltdAgts, CDMEntryTransactionTypeElm.RelatedAgents);
    Purpose2Choice_To_CDMPurposeCodeType(EntryTransaction3Elm.Purp, CDMEntryTransactionTypeElm.PurposeCode);
    RemittanceLocation2_To_CDMRemittanceLocationType(EntryTransaction3Elm.RltdRmtInf, CDMEntryTransactionTypeElm.RelatedRemittanceInformation);
    RemittanceInformation7_To_CDMRemittanceInformationType(EntryTransaction3Elm.RmtInf, CDMEntryTransactionTypeElm.RemittanceInformation);
    TransactionDates2_To_CDMTransactionDatesType(EntryTransaction3Elm.RltdDts, CDMEntryTransactionTypeElm.RelatedDates);
    TransactionPrice3Choice_To_CDMTransactionPriceChoiceType(EntryTransaction3Elm.RltdPric, CDMEntryTransactionTypeElm.RelatedPrice);
    TransactionQuantities2Choice_To_CDMTransactionQuantitiesChoiceType(EntryTransaction3Elm.RltdQties, CDMEntryTransactionTypeElm.RelatedQuantities);
    SecurityIdentification14_To_CDMSecurityIDType(EntryTransaction3Elm.FinInstrmId, CDMEntryTransactionTypeElm.FinancialInstrumentID);
    TaxInformation3_To_CDMTaxInformationType(EntryTransaction3Elm.Tax, CDMEntryTransactionTypeElm.Tax);
    PaymentReturnReason2_To_CDMPaymentReturnReasonType(EntryTransaction3Elm.RtrInf, CDMEntryTransactionTypeElm.ReturnInformation);
    CorporateAction9_To_CDMCorporateActionType(EntryTransaction3Elm.CorpActn, CDMEntryTransactionTypeElm.CorporateAction);
    SecuritiesAccount13_To_CDMSecuritiesAccountType(EntryTransaction3Elm.SfkpgAcct, CDMEntryTransactionTypeElm.SafekeepingAccount);
    CashDeposit1_To_CDMCashDepositType(EntryTransaction3Elm.CshDpst, CDMEntryTransactionTypeElm.CashDeposit);
    CardTransaction1_To_CDMCardTransactionType(EntryTransaction3Elm.CardTx, CDMEntryTransactionTypeElm.CardTransaction);
    CDMEntryTransactionTypeElm.AdditionalTransactionInformation = EntryTransaction3Elm.AddtlTxInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FinancialInstitutionIdentification8_To_CDMFinancialInstitutionType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr.FinInstnId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr.FinInstnId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFinancialInstitutionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer.FinancialInstitution</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer.FinancialInstitution</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FinancialInstitutionIdentification8Elm in FinancialInstitutionIdentification8) {
    def CDMFinancialInstitutionTypeElm = CDMFinancialInstitutionType.secAddElement();
    isoCodeToCDMCodeScheme (FinancialInstitutionIdentification8Elm.BICFI, CDMFinancialInstitutionTypeElm.ID);
    //TODO : Statement.Account.Servicer.FinancialInstitution.ID -> ?
    ClearingSystemMemberIdentification2_To_CDMClearingSystemMemberType(FinancialInstitutionIdentification8Elm.ClrSysMmbId, CDMFinancialInstitutionTypeElm.ClearingSystemMember);
    CDMFinancialInstitutionTypeElm.Name = FinancialInstitutionIdentification8Elm.Nm;
    PostalAddress6_To_CDMPostalAddressType(FinancialInstitutionIdentification8Elm.PstlAdr, CDMFinancialInstitutionTypeElm.PostalAddress);
    GenericFinancialIdentification1_To_CDMGenericFinancialIDType(FinancialInstitutionIdentification8Elm.Othr, CDMFinancialInstitutionTypeElm.OtherID);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FromToAmountRange_To_CDMFromToAmountRangeType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FromToAmountRange</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrToAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrToAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMFromToAmountRangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromToAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromToAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FromToAmountRangeElm in FromToAmountRange) {
    def CDMFromToAmountRangeTypeElm = CDMFromToAmountRangeType.secAddElement();
    AmountRangeBoundary1_To_CDMAmountRangeBoundaryType(FromToAmountRangeElm.FrAmt, CDMFromToAmountRangeTypeElm.FromAmount);
    AmountRangeBoundary1_To_CDMAmountRangeBoundaryType(FromToAmountRangeElm.ToAmt, CDMFromToAmountRangeTypeElm.ToAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericIdentification1_To_CDMGenericCardIDType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.CardBrnd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.CardBrnd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericCardIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.CardBrandID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.CardBrandID</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericIdentification1Elm in GenericIdentification1) {
    isoCodeToCDMCodeScheme (GenericIdentification1Elm.Id, CDMGenericCardIDType);
}
 //TODO : Statement.Entry.CardTransaction.Card.CardBrandID.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GenericIdentification32_To_CDMGenericCardIDType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GenericIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Id</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGenericCardIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.ID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.ID</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GenericIdentification32Elm in GenericIdentification32) {
    isoCodeToCDMCodeScheme (GenericIdentification32Elm.Id, CDMGenericCardIDType);
}
 //TODO : Statement.Entry.CardTransaction.POI.ID.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="GroupHeader58_To_CDMGroupHeaderType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>GroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr</description>
					</parameterfield>
					<parameterfield>
						<name>CDMGroupHeaderType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def GroupHeader58Elm in GroupHeader58) {
    def CDMGroupHeaderTypeElm = CDMGroupHeaderType.secAddElement();
    isoCodeToCDMCodeScheme(GroupHeader58Elm.MsgId, CDMGroupHeaderTypeElm.MessageID);
    CDMGroupHeaderTypeElm.CreationDateTime = GroupHeader58Elm.CreDtTm;
    PartyIdentification43_To_CDMPartyType(GroupHeader58Elm.MsgRcpt, CDMGroupHeaderTypeElm.MessageRecipient);
    Pagination_To_CDMPaginationType(GroupHeader58Elm.MsgPgntn, CDMGroupHeaderTypeElm.MessagePagination);
    OriginalBusinessQuery1_To_CDMOriginalBusinessQueryType(GroupHeader58Elm.OrgnlBizQry, CDMGroupHeaderTypeElm.OriginalBusinessQuery);
    CDMGroupHeaderTypeElm.AdditionalInformation = GroupHeader58Elm.AddtlInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ImpliedCurrencyAmountRangeChoice_To_CDMImpliedCurrencyAmountRangeChoiceType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ImpliedCurrencyAmountRangeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMImpliedCurrencyAmountRangeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ImpliedCurrencyAmountRangeChoiceElm in ImpliedCurrencyAmountRangeChoice) {
    def CDMImpliedCurrencyAmountRangeChoiceTypeElm = CDMImpliedCurrencyAmountRangeChoiceType.secAddElement();
    AmountRangeBoundary1_To_CDMAmountRangeBoundaryType(ImpliedCurrencyAmountRangeChoiceElm.FrAmt, CDMImpliedCurrencyAmountRangeChoiceTypeElm.FromAmount);
    AmountRangeBoundary1_To_CDMAmountRangeBoundaryType(ImpliedCurrencyAmountRangeChoiceElm.ToAmt, CDMImpliedCurrencyAmountRangeChoiceTypeElm.ToAmount);
    FromToAmountRange_To_CDMFromToAmountRangeType(ImpliedCurrencyAmountRangeChoiceElm.FrToAmt, CDMImpliedCurrencyAmountRangeChoiceTypeElm.FromToAmount);
    CDMImpliedCurrencyAmountRangeChoiceTypeElm.EqualAmount = ImpliedCurrencyAmountRangeChoiceElm.EQAmt;
    CDMImpliedCurrencyAmountRangeChoiceTypeElm.NotEqualAmount = ImpliedCurrencyAmountRangeChoiceElm.NEQAmt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="InterestRecord1_To_CDMInterestRecordType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>InterestRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMInterestRecordType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def InterestRecord1Elm in InterestRecord1) {
    def CDMInterestRecordTypeElm = CDMInterestRecordType.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(InterestRecord1Elm.Amt, CDMInterestRecordTypeElm.Amount);
    isoCodeToCDMCodeList(InterestRecord1Elm.CdtDbtInd, CDMInterestRecordTypeElm.CreditDebitIndicatorCode);
    InterestType1Choice_To_CDMTypeInterestType(InterestRecord1Elm.Tp, CDMInterestRecordTypeElm.TypeCode);
    Rate3_To_CDMInterestRateType(InterestRecord1Elm.Rate, CDMInterestRecordTypeElm.Rate);
    DateTimePeriodDetails_To_CDMDateTimePeriodDetailsType(InterestRecord1Elm.FrToDt, CDMInterestRecordTypeElm.FromToDate);
    CDMInterestRecordTypeElm.Reason = InterestRecord1Elm.Rsn;
    TaxCharges2_To_CDMTaxChargesType(InterestRecord1Elm.Tax, CDMInterestRecordTypeElm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="InterestType1Choice_To_CDMInterestTypeCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>InterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMInterestTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Type</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def InterestType1ChoiceElm in InterestType1Choice) {
    //TODO : Statement.Interest.Type.listID -> ?
    //TODO : Statement.Interest.Type.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (InterestType1ChoiceElm, CDMInterestTypeCodeType);
}
 //TODO : Statement.Interest.Type.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="InterestType1Choice_To_CDMTypeInterestType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>InterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTypeInterestType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record.TypeCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def InterestType1ChoiceElm in InterestType1Choice) {
    isoCdOrPrtryToCDMCodeScheme (InterestType1ChoiceElm, CDMTypeInterestType);
}
 //TODO : Statement.Entry.Interest.Record.TypeCode.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Max105Text_To_CDMstring" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Max105Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Max105TextElm in Max105Text) {
    def CDMstringElm = CDMstring.secAddElement();
    CDMstringElm.Value = Max105TextElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="MessageIdentification2_To_CDMAdditionalMessageIndicatorType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AddtlInfInd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Amt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMAdditionalMessageIndicatorType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AdditionalMessageIndicator</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AdditionalMessageIndicator</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ActiveOrHistoricCurrencyAndAmountElm in ActiveOrHistoricCurrencyAndAmount) {
    def CDMAdditionalMessageIndicatorTypeElm = CDMAdditionalMessageIndicatorType.secAddElement();
    isoCodeToCDMCodeScheme (ActiveOrHistoricCurrencyAndAmountElm.MsgNmId, CDMAdditionalMessageIndicatorTypeElm.MessageNumberID);
    isoCodeToCDMCodeScheme (ActiveOrHistoricCurrencyAndAmountElm.MsgId, CDMAdditionalMessageIndicatorTypeElm.MessageID);
}
 //TODO : Statement.Entry.AdditionalMessageIndicator.MessageNumberID -> ?
//TODO : Statement.Entry.AdditionalMessageIndicator.MessageID -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="NumberAndSumOfTransactions1_To_CDMTotalCreditDebitTransactionsType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>NumberAndSumOfTransactions1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlCdtNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlCdtNtries</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTotalCreditDebitTransactionsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalCreditEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalCreditEntries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def NumberAndSumOfTransactions1Elm in NumberAndSumOfTransactions1) {
    def CDMTotalCreditDebitTransactionsTypeElm = CDMTotalCreditDebitTransactionsType.secAddElement();
    CDMTotalCreditDebitTransactionsTypeElm.NumberOfEntries = NumberAndSumOfTransactions1Elm.NbOfNtries;
    CDMTotalCreditDebitTransactionsTypeElm.Sum = NumberAndSumOfTransactions1Elm.Sum;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="NumberAndSumOfTransactions2_To_CDMNumberAndSumOfTransactionsType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>NumberAndSumOfTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</description>
					</parameterfield>
					<parameterfield>
						<name>CDMNumberAndSumOfTransactionsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def NumberAndSumOfTransactions2Elm in NumberAndSumOfTransactions2) {
    def CDMNumberAndSumOfTransactionsTypeElm = CDMNumberAndSumOfTransactionsType.secAddElement();
    CDMNumberAndSumOfTransactionsTypeElm.NumberOfEntries = NumberAndSumOfTransactions2Elm.NbOfNtries;
    CDMNumberAndSumOfTransactionsTypeElm.Sum = NumberAndSumOfTransactions2Elm.Sum;
    CDMNumberAndSumOfTransactionsTypeElm.TotalNetEntryAmount = NumberAndSumOfTransactions2Elm.TtlNetNtryAmt;
    isoCodeToCDMCodeList(NumberAndSumOfTransactions2Elm.CdtDbtInd, CDMNumberAndSumOfTransactionsTypeElm.CreditDebitIndicatorCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OriginalAndCurrentQuantities1_To_CDMOriginalAndCurrentQuantitiesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OriginalAndCurrentQuantities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOriginalAndCurrentQuantitiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OriginalAndCurrentQuantities1Elm in OriginalAndCurrentQuantities1) {
    def CDMOriginalAndCurrentQuantitiesTypeElm = CDMOriginalAndCurrentQuantitiesType.secAddElement();
    CDMOriginalAndCurrentQuantitiesTypeElm.FaceAmount = OriginalAndCurrentQuantities1Elm.FaceAmt;
    CDMOriginalAndCurrentQuantitiesTypeElm.AmortisedValue = OriginalAndCurrentQuantities1Elm.AmtsdVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="OriginalBusinessQuery1_To_CDMOriginalBusinessQueryType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>OriginalBusinessQuery1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.OrgnlBizQry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.OrgnlBizQry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMOriginalBusinessQueryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.OriginalBusinessQuery</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.OriginalBusinessQuery</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def OriginalBusinessQuery1Elm in OriginalBusinessQuery1) {
    def CDMOriginalBusinessQueryTypeElm = CDMOriginalBusinessQueryType.secAddElement();
    CDMOriginalBusinessQueryTypeElm.MessageID = OriginalBusinessQuery1Elm.MsgId;
    CDMOriginalBusinessQueryTypeElm.MessageNameID = OriginalBusinessQuery1Elm.MsgNmId;
    CDMOriginalBusinessQueryTypeElm.CreationDateTime = OriginalBusinessQuery1Elm.CreDtTm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Pagination_To_CDMPaginationType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Pagination</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgPgntn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgPgntn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaginationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessagePagination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessagePagination</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaginationElm in Pagination) {
    def CDMPaginationTypeElm = CDMPaginationType.secAddElement();
    CDMPaginationTypeElm.PageNumber = PaginationElm.PgNb;
    CDMPaginationTypeElm.LastPageIndicator = PaginationElm.LastPgInd;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Party11Choice_To_CDMPartyIDType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Party11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt.Id</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPartyIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient.ID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient.ID</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Party11ChoiceElm in Party11Choice) {
    if (Party11ChoiceElm.OrgId.length() > 0)
    	isoIDOrOthrToCDMCodeScheme (Party11ChoiceElm.OrgId[0], CDMPartyIDType);
}
 //TODO : GroupHeader.MessageRecipient.ID.schemeID -> ?
//TODO : GroupHeader.MessageRecipient.ID.schemeVersionID -> ?
//TODO : GroupHeader.MessageRecipient.ID.schemeAgencyID -> ?
//TODO : GroupHeader.MessageRecipient.ID.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PartyIdentification43_To_CDMPartyType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPartyType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PartyIdentification43Elm in PartyIdentification43) {
    def CDMPartyTypeElm = CDMPartyType.secAddElement();
    CDMPartyTypeElm.Name = PartyIdentification43Elm.Nm;
    PostalAddress6_To_CDMPostalAddressType(PartyIdentification43Elm.PstlAdr, CDMPartyTypeElm.PostalAddress);
    Party11Choice_To_CDMPartyIDType(PartyIdentification43Elm.Id, CDMPartyTypeElm.ID);
    isoCodeToCDMCodeList(PartyIdentification43Elm.CtryOfRes, CDMPartyTypeElm.CountryOfResidenceCode);
    ContactDetails2_To_CDMContactDetailsType(PartyIdentification43Elm.CtctDtls, CDMPartyTypeElm.ContactDetails);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PaymentCard4_To_CDMPaymentCardType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PaymentCard4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaymentCardType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaymentCard4Elm in PaymentCard4) {
    def CDMPaymentCardTypeElm = CDMPaymentCardType.secAddElement();
    PlainCardData1_To_CDMPlainCardDataType(PaymentCard4Elm.PlainCardData, CDMPaymentCardTypeElm.PlainCardData);
    isoCodeToCDMCodeList(PaymentCard4Elm.CardCtryCd, CDMPaymentCardTypeElm.CardCountryCode);
    GenericIdentification1_To_CDMGenericCardIDType(PaymentCard4Elm.CardBrnd, CDMPaymentCardTypeElm.CardBrandID);
    CDMPaymentCardTypeElm.AdditionalCardData = PaymentCard4Elm.AddtlCardData;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PaymentReturnReason2_To_CDMPaymentReturnReasonType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPaymentReturnReasonType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PaymentReturnReason2Elm in PaymentReturnReason2) {
    def CDMPaymentReturnReasonTypeElm = CDMPaymentReturnReasonType.secAddElement();
    BankTransactionCodeStructure4_To_CDMBankTransactionType(PaymentReturnReason2Elm.OrgnlBkTxCd, CDMPaymentReturnReasonTypeElm.OriginalBankTransaction);
    PartyIdentification43_To_CDMPartyType(PaymentReturnReason2Elm.Orgtr, CDMPaymentReturnReasonTypeElm.Originator);
    ReturnReason5Choice_To_CDMReturnReasonCodeType(PaymentReturnReason2Elm.Rsn, CDMPaymentReturnReasonTypeElm.ReasonCode);
    Max105Text_To_CDMstring(PaymentReturnReason2Elm.AddtlInf, CDMPaymentReturnReasonTypeElm.AdditionalInformation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PlainCardData1_To_CDMPlainCardDataType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PlainCardData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPlainCardDataType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PlainCardData1Elm in PlainCardData1) {
    def CDMPlainCardDataTypeElm = CDMPlainCardDataType.secAddElement();
    isoCodeToCDMCodeScheme (PlainCardData1Elm.PAN, CDMPlainCardDataTypeElm.ID);
    //TODO : Statement.Entry.CardTransaction.Card.PlainCardData.ID -> ?
    CDMPlainCardDataTypeElm.CardSequenceNumber = PlainCardData1Elm.CardSeqNb;
    CDMPlainCardDataTypeElm.EffectiveDate = PlainCardData1Elm.FctvDt;
    CDMPlainCardDataTypeElm.ExpiryDate = PlainCardData1Elm.XpryDt;
    isoCodeToCDMCodeList(PlainCardData1Elm.SvcCd, CDMPlainCardDataTypeElm.ServiceCode);
    TrackData1_To_CDMTrackDataType(PlainCardData1Elm.TrckData, CDMPlainCardDataTypeElm.TrackData);
    CardSecurityInformation1_To_CDMCardSecurityInformationType(PlainCardData1Elm.CardSctyCd, CDMPlainCardDataTypeElm.CardSecurityCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PointOfInteraction1_To_CDMPointOfInteractionType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PointOfInteraction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPointOfInteractionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PointOfInteraction1Elm in PointOfInteraction1) {
    def CDMPointOfInteractionTypeElm = CDMPointOfInteractionType.secAddElement();
    GenericIdentification32_To_CDMGenericCardIDType(PointOfInteraction1Elm.Id, CDMPointOfInteractionTypeElm.ID);
    CDMPointOfInteractionTypeElm.SystemName = PointOfInteraction1Elm.SysNm;
    CDMPointOfInteractionTypeElm.GroupID = PointOfInteraction1Elm.GrpId;
    PointOfInteractionCapabilities1_To_CDMPointOfInteractionCapabilitiesType(PointOfInteraction1Elm.Cpblties, CDMPointOfInteractionTypeElm.Capabilities);
    PointOfInteractionComponent1_To_CDMPointOfInteractionComponentType(PointOfInteraction1Elm.Cmpnt, CDMPointOfInteractionTypeElm.Component);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PointOfInteractionCapabilities1_To_CDMPointOfInteractionCapabilitiesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PointOfInteractionCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPointOfInteractionCapabilitiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PointOfInteractionCapabilities1Elm in PointOfInteractionCapabilities1) {
    def CDMPointOfInteractionCapabilitiesTypeElm = CDMPointOfInteractionCapabilitiesType.secAddElement();
    CardDataReading1Code_To_CDMCardDataReadingCodeType(PointOfInteractionCapabilities1Elm.CardRdngCpblties, CDMPointOfInteractionCapabilitiesTypeElm.CardReadingCapabilitiesCode);
    CardholderVerificationCapability1Code_To_CDMCardholderVerificationCapabilityCodeType(PointOfInteractionCapabilities1Elm.CrdhldrVrfctnCpblties, CDMPointOfInteractionCapabilitiesTypeElm.CardholderVerificationCapabilitiesCode);
    isoCodeToCDMCodeList(PointOfInteractionCapabilities1Elm.OnLineCpblties, CDMPointOfInteractionCapabilitiesTypeElm.OnLineCapabilitiesCode);
    DisplayCapabilities1_To_CDMDisplayCapabilitiesType(PointOfInteractionCapabilities1Elm.DispCpblties, CDMPointOfInteractionCapabilitiesTypeElm.DisplayCapabilities);
    if (IsNotNull (PointOfInteractionCapabilities1Elm.PrtLineWidth))
    	CDMPointOfInteractionCapabilitiesTypeElm.PrintLineWidth = toBigInteger(PointOfInteractionCapabilities1Elm.PrtLineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PointOfInteractionComponent1_To_CDMPointOfInteractionComponentType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PointOfInteractionComponent1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cmpnt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cmpnt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPointOfInteractionComponentType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Component</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Component</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PointOfInteractionComponent1Elm in PointOfInteractionComponent1) {
    def CDMPointOfInteractionComponentTypeElm = CDMPointOfInteractionComponentType.secAddElement();
    isoCodeToCDMCodeList(PointOfInteractionComponent1Elm.POICmpntTp, CDMPointOfInteractionComponentTypeElm.POIComponentType);
    CDMPointOfInteractionComponentTypeElm.ManufacturerID = PointOfInteractionComponent1Elm.ManfctrId;
    CDMPointOfInteractionComponentTypeElm.Model = PointOfInteractionComponent1Elm.Mdl;
    CDMPointOfInteractionComponentTypeElm.VersionNumber = PointOfInteractionComponent1Elm.VrsnNb;
    CDMPointOfInteractionComponentTypeElm.SerialNumber = PointOfInteractionComponent1Elm.SrlNb;
    Max70Text_To_CDMstring(PointOfInteractionComponent1Elm.ApprvlNb, CDMPointOfInteractionComponentTypeElm.ApprovalNumber);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Price2_To_CDMPriceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Price2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</description>
					</parameterfield>
					<parameterfield>
						<name>CDMPriceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Price2Elm in Price2) {
    def CDMPriceTypeElm = CDMPriceType.secAddElement();
   	YieldedOrValueType1Choice_To_CDMYieldedOrValueType1ChoiceType(Price2Elm.Tp, CDMPriceTypeElm.Type);
	PriceRateOrAmountChoice_To_CDMPriceRateOrAmountChoiceType(Price2Elm.Val, CDMPriceTypeElm.Value);
    
  /*  def srcType = Price2Elm.Tp[0];
    def destType = CDMPriceTypeElm.Type[0];
    destType.Yielded = srcType.Yldd;
    isoCodeToCDMCodeList (srcType.ValTp, destType.ValueTypeCode);
    
    def srcVal = Price2Elm.Val[0];
    def destVal = CDMPriceTypeElm.Value[0];
    destVal.Rate = srcVal.Rate;
    if (srcVal.Amt.length() != 0)
	    isoAmountToCDMAmount (srcVal.Amt[0], destVal.Amount);
	*/    
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Product2_To_CDMProductType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Product2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProductType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Product2Elm in Product2) {
    def CDMProductTypeElm = CDMProductType.secAddElement();
    CDMProductTypeElm.ProductCode = Product2Elm.PdctCd;
    isoCodeToCDMCodeList(Product2Elm.UnitOfMeasr, CDMProductTypeElm.UnitOfMeasure);
    CDMProductTypeElm.ProductQuantity = Product2Elm.PdctQty;
    CDMProductTypeElm.UnitPrice = Product2Elm.UnitPric;
    CDMProductTypeElm.ProductAmount = Product2Elm.PdctAmt;
    CDMProductTypeElm.TaxType = Product2Elm.TaxTp;
    CDMProductTypeElm.AdditionalProductInformation = Product2Elm.AddtlPdctInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryAgent3_To_CDMProprietaryAgentType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryAgentType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryAgent3Elm in ProprietaryAgent3) {
    def CDMProprietaryAgentTypeElm = CDMProprietaryAgentType.secAddElement();
    CDMProprietaryAgentTypeElm.Type = ProprietaryAgent3Elm.Tp;
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(ProprietaryAgent3Elm.Agt, CDMProprietaryAgentTypeElm.Agent);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryDate2_To_CDMProprietaryDateType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryDate2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryDateType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryDate2Elm in ProprietaryDate2) {
    def CDMProprietaryDateTypeElm = CDMProprietaryDateType.secAddElement();
    CDMProprietaryDateTypeElm.Type = ProprietaryDate2Elm.Tp;
    DateAndDateTimeChoice_To_CDMDateAndDateTimeChoiceType(ProprietaryDate2Elm.Dt, CDMProprietaryDateTypeElm.Date);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryParty3_To_CDMProprietaryPartyType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryPartyType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryParty3Elm in ProprietaryParty3) {
    def CDMProprietaryPartyTypeElm = CDMProprietaryPartyType.secAddElement();
    CDMProprietaryPartyTypeElm.Type = ProprietaryParty3Elm.Tp;
    PartyIdentification43_To_CDMPartyType(ProprietaryParty3Elm.Pty, CDMProprietaryPartyTypeElm.Party);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryPrice2_To_CDMProprietaryPriceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryPriceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryPrice2Elm in ProprietaryPrice2) {
    def CDMProprietaryPriceTypeElm = CDMProprietaryPriceType.secAddElement();
    CDMProprietaryPriceTypeElm.Type = ProprietaryPrice2Elm.Tp;
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(ProprietaryPrice2Elm.Pric, CDMProprietaryPriceTypeElm.PriceAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryQuantity1_To_CDMProprietaryQuantityType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryQuantity1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMProprietaryQuantityType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryQuantity1Elm in ProprietaryQuantity1) {
    def CDMProprietaryQuantityTypeElm = CDMProprietaryQuantityType.secAddElement();
    CDMProprietaryQuantityTypeElm.Type = ProprietaryQuantity1Elm.Tp;
    CDMProprietaryQuantityTypeElm.Quantity = ProprietaryQuantity1Elm.Qty;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ProprietaryReference1_To_CDMReferencingIDType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ProprietaryReference1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs.Prtry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReferencingIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ProprietaryReference1Elm in ProprietaryReference1) {
    isoCodeToCDMCodeScheme (ProprietaryReference1Elm.Ref, CDMReferencingIDType);
}
 //TODO : Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID.schemeID -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID.schemeVersionID -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID.schemeAgencyID -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="Rate3_To_CDMInterestRateType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>Rate3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate</description>
					</parameterfield>
					<parameterfield>
						<name>CDMInterestRateType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def Rate3Elm in Rate3) {
    def CDMInterestRateTypeElm = CDMInterestRateType.secAddElement();
    RateType4Choice_To_CDMRateTypeChoiceType(Rate3Elm.Tp, CDMInterestRateTypeElm.Type);
    CurrencyAndAmountRange2_To_CDMCurrencyAndAmountRangeType(Rate3Elm.VldtyRg, CDMInterestRateTypeElm.ValidityRange);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReferredDocumentInformation3_To_CDMReferredDocumentType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReferredDocumentInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReferredDocumentType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReferredDocumentInformation3Elm in ReferredDocumentInformation3) {
    def CDMReferredDocumentTypeElm = CDMReferredDocumentType.secAddElement();
    ReferredDocumentType2_To_CDMReferredDocumentTypeCodeType(ReferredDocumentInformation3Elm.Tp, CDMReferredDocumentTypeElm.TypeCode);
    CDMReferredDocumentTypeElm.Number = ReferredDocumentInformation3Elm.Nb;
    CDMReferredDocumentTypeElm.RelatedDate = ReferredDocumentInformation3Elm.RltdDt;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceAmount2_To_CDMRemittanceAmountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceAmount2Elm in RemittanceAmount2) {
    def CDMRemittanceAmountTypeElm = CDMRemittanceAmountType.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(RemittanceAmount2Elm.DuePyblAmt, CDMRemittanceAmountTypeElm.DuePayableAmount);
    DiscountAmountAndType1_To_CDMDiscountTypeAndAmountType(RemittanceAmount2Elm.DscntApldAmt, CDMRemittanceAmountTypeElm.DiscountAppliedAmount);
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(RemittanceAmount2Elm.CdtNoteAmt, CDMRemittanceAmountTypeElm.CreditNoteAmount);
    TaxAmountAndType1_To_CDMTaxTypeAndAmountType(RemittanceAmount2Elm.TaxAmt, CDMRemittanceAmountTypeElm.TaxAmount);
    DocumentAdjustment1_To_CDMDocumentAdjustmentType(RemittanceAmount2Elm.AdjstmntAmtAndRsn, CDMRemittanceAmountTypeElm.AdjustmentAmountAndReason);
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(RemittanceAmount2Elm.RmtdAmt, CDMRemittanceAmountTypeElm.RemittedAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RemittanceInformation7_To_CDMRemittanceInformationType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf</description>
					</parameterfield>
					<parameterfield>
						<name>CDMRemittanceInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RemittanceInformation7Elm in RemittanceInformation7) {
    def CDMRemittanceInformationTypeElm = CDMRemittanceInformationType.secAddElement();
    Max140Text_To_CDMstring(RemittanceInformation7Elm.Ustrd, CDMRemittanceInformationTypeElm.Unstructured);
    StructuredRemittanceInformation9_To_CDMStructuredRemittanceInformationType(RemittanceInformation7Elm.Strd, CDMRemittanceInformationTypeElm.Structured);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReportEntry3_To_CDMReportEntryType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReportEntryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReportEntry3Elm in ReportEntry3) {
    def CDMReportEntryTypeElm = CDMReportEntryType.secAddElement();
    CDMReportEntryTypeElm.EntryReference = ReportEntry3Elm.NtryRef;
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(ReportEntry3Elm.Amt, CDMReportEntryTypeElm.Amount);
    isoCodeToCDMCodeList(ReportEntry3Elm.CdtDbtInd, CDMReportEntryTypeElm.CreditDebitIndicatorCode);
    CDMReportEntryTypeElm.ReversalIndicator = ReportEntry3Elm.RvslInd;
    isoCodeToCDMCodeList(ReportEntry3Elm.Sts, CDMReportEntryTypeElm.Status);

    if (ReportEntry3Elm.BookgDt.length() > 0) {
   		def srcElm = ReportEntry3Elm.BookgDt[0];
   		def destElm = CDMReportEntryTypeElm.EntryGroup1.SecAddElement();
   		destElm.BookingDate = srcElm.Dt;
   		destElm.BookingDateTime = srcElm.DtTm;
    }

    //TODO : Statement.Entry.EntryGroup1 -> ?
    //TODO : Statement.Entry.EntryGroup2 -> ?

    if (ReportEntry3Elm.ValDt.length() > 0) {
   		def srcElm = ReportEntry3Elm.ValDt[0];
   		def destElm = CDMReportEntryTypeElm.EntryGroup2.SecAddElement();
   		destElm.ValueDate = srcElm.Dt;
   		destElm.ValueDateTime = srcElm.DtTm;
    }

    CDMReportEntryTypeElm.AccountServicerReference = ReportEntry3Elm.AcctSvcrRef;
    CashBalanceAvailability2_To_CDMCashBalanceAvailabilityType(ReportEntry3Elm.Avlbty, CDMReportEntryTypeElm.Availability);
    //TODO : Statement.Entry.BankTransaction -> ?
    BankTransactionCodeStructure4_To_CDMBankTransactionType (ReportEntry3Elm.BkTxCd, CDMReportEntryTypeElm.BankTransaction);
    CDMReportEntryTypeElm.CommissionWaiverIndicator = ReportEntry3Elm.ComssnWvrInd;
    MessageIdentification2_To_CDMAdditionalMessageIndicatorType(ReportEntry3Elm.AddtlInfInd, CDMReportEntryTypeElm.AdditionalMessageIndicator);
    AmountAndCurrencyExchange3_To_CDMAmountAndCurrencyExchangeType(ReportEntry3Elm.AmtDtls, CDMReportEntryTypeElm.AmountDetails);
    Charges3_To_CDMChargesType(ReportEntry3Elm.Chrgs, CDMReportEntryTypeElm.Charges);
    TechnicalInputChannel1Choice_To_CDMTechnicalInputChannelCodeType(ReportEntry3Elm.TechInptChanl, CDMReportEntryTypeElm.TechnicalInputChannel);
    TransactionInterest3_To_CDMTransactionInterestType(ReportEntry3Elm.Intrst, CDMReportEntryTypeElm.Interest);
    CardEntry1_To_CDMCardEntryType(ReportEntry3Elm.CardTx, CDMReportEntryTypeElm.CardTransaction);
    EntryDetails2_To_CDMEntryDetailsType(ReportEntry3Elm.NtryDtls, CDMReportEntryTypeElm.EntryDetails);
    CDMReportEntryTypeElm.AdditionalEntryInformation = ReportEntry3Elm.AddtlNtryInf;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReportingSource1Choice_To_CDMReportingSourceCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReportingSource1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RptgSrc</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RptgSrc</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReportingSourceCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.ReportingSource</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.ReportingSource</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReportingSource1ChoiceElm in ReportingSource1Choice) {
    //TODO : Statement.ReportingSource.listID -> ?
    //TODO : Statement.ReportingSource.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (ReportingSource1ChoiceElm, CDMReportingSourceCodeType);
}
 //TODO : Statement.ReportingSource.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="ReturnReason5Choice_To_CDMReturnReasonCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>ReturnReason5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</description>
					</parameterfield>
					<parameterfield>
						<name>CDMReturnReasonCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def ReturnReason5ChoiceElm in ReturnReason5Choice) {
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode.listID -> ?
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (ReturnReason5ChoiceElm, CDMReturnReasonCodeType);
}
 //TODO : Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SecuritiesAccount13_To_CDMSecuritiesAccountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.SfkpgAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.SfkpgAcct</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSecuritiesAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SecuritiesAccount13Elm in SecuritiesAccount13) {
    def CDMSecuritiesAccountTypeElm = CDMSecuritiesAccountType.secAddElement();
    isoCodeToCDMCodeScheme(SecuritiesAccount13Elm.Id, CDMSecuritiesAccountTypeElm.ID);
    if (SecuritiesAccount13Elm.Tp.length() > 0)
	    isoCodeToCDMCodeScheme(SecuritiesAccount13Elm.Tp[0].Id, CDMSecuritiesAccountTypeElm.TypeID);
    CDMSecuritiesAccountTypeElm.Name = SecuritiesAccount13Elm.Nm;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SecurityIdentification14_To_CDMSecurityIDType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.FinInstrmId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.FinInstrmId</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSecurityIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SecurityIdentification14Elm in SecurityIdentification14) {
    isoCodeToCDMCodeScheme (SecurityIdentification14Elm.ISIN, CDMSecurityIDType);
}
 //TODO : Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID.schemeID -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID.schemeVersionID -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID.schemeAgencyID -> ?
//TODO : Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="StructuredRemittanceInformation9_To_CDMStructuredRemittanceInformationType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>StructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMStructuredRemittanceInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def StructuredRemittanceInformation9Elm in StructuredRemittanceInformation9) {
    def CDMStructuredRemittanceInformationTypeElm = CDMStructuredRemittanceInformationType.secAddElement();
    ReferredDocumentInformation3_To_CDMReferredDocumentType(StructuredRemittanceInformation9Elm.RfrdDocInf, CDMStructuredRemittanceInformationTypeElm.ReferredDocumentInformation);
    RemittanceAmount2_To_CDMRemittanceAmountType(StructuredRemittanceInformation9Elm.RfrdDocAmt, CDMStructuredRemittanceInformationTypeElm.ReferredDocumentAmount);
    CreditorReferenceInformation2_To_CDMCreditorReferenceInformationType(StructuredRemittanceInformation9Elm.CdtrRefInf, CDMStructuredRemittanceInformationTypeElm.CreditorReferenceInformation);
    PartyIdentification43_To_CDMPartyType(StructuredRemittanceInformation9Elm.Invcr, CDMStructuredRemittanceInformationTypeElm.Invoicer);
    PartyIdentification43_To_CDMPartyType(StructuredRemittanceInformation9Elm.Invcee, CDMStructuredRemittanceInformationTypeElm.Invoicee);
    Max140Text_To_CDMstring(StructuredRemittanceInformation9Elm.AddtlRmtInf, CDMStructuredRemittanceInformationTypeElm.AdditionalRemittanceInformation);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SupplementaryData1_To_CDMSupplementaryDataType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SupplementaryData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSupplementaryDataType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.SupplementaryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.SupplementaryData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SupplementaryData1Elm in SupplementaryData1) {
    def CDMSupplementaryDataTypeElm = CDMSupplementaryDataType.secAddElement();
    CDMSupplementaryDataTypeElm.PlaceAndName = SupplementaryData1Elm.PlcAndNm;
    SupplementaryDataEnvelope1_To_CDMSupplementaryDataEnvelopeType(SupplementaryData1Elm.Envlp, CDMSupplementaryDataTypeElm.Envelope);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="SupplementaryDataEnvelope1_To_CDMSupplementaryDataEnvelopeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>SupplementaryDataEnvelope1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData.Envlp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData.Envlp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMSupplementaryDataEnvelopeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.SupplementaryData.Envelope</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.SupplementaryData.Envelope</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def SupplementaryDataEnvelope1Elm in SupplementaryDataEnvelope1) {
    def CDMSupplementaryDataEnvelopeTypeElm = CDMSupplementaryDataEnvelopeType.secAddElement();
    copy(SupplementaryDataEnvelope1Elm.any, CDMSupplementaryDataEnvelopeTypeElm.any);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxAmountAndType1_To_CDMTaxTypeAndAmountType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxTypeAndAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxAmountAndType1Elm in TaxAmountAndType1) {
    def CDMTaxTypeAndAmountTypeElm = CDMTaxTypeAndAmountType.secAddElement();
    TaxAmountType1Choice_To_CDMTaxAmountTypeCodeType(TaxAmountAndType1Elm.Tp, CDMTaxTypeAndAmountTypeElm.TypeCode);
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(TaxAmountAndType1Elm.Amt, CDMTaxTypeAndAmountTypeElm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxAmountType1Choice_To_CDMTaxAmountTypeCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxAmountTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxAmountType1ChoiceElm in TaxAmountType1Choice) {
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode.listID -> ?
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (TaxAmountType1ChoiceElm, CDMTaxAmountTypeCodeType);
}
 //TODO : Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TaxCharges2_To_CDMTaxChargesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TaxCharges2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tax</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTaxChargesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.Tax</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TaxCharges2Elm in TaxCharges2) {
    def CDMTaxChargesTypeElm = CDMTaxChargesType.secAddElement();
    isoCodeToCDMCodeScheme(TaxCharges2Elm.Id, CDMTaxChargesTypeElm.ID);
    CDMTaxChargesTypeElm.Rate = TaxCharges2Elm.Rate;
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(TaxCharges2Elm.Amt, CDMTaxChargesTypeElm.Amount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TechnicalInputChannel1Choice_To_CDMTechnicalInputChannelCodeType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TechnicalInputChannel1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.TechInptChanl</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.TechInptChanl</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTechnicalInputChannelCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.TechnicalInputChannel</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.TechnicalInputChannel</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TechnicalInputChannel1ChoiceElm in TechnicalInputChannel1Choice) {
    //TODO : Statement.Entry.TechnicalInputChannel.listID -> ?
    //TODO : Statement.Entry.TechnicalInputChannel.listVersionID -> ?
    isoCdOrPrtryToCDMCodeList (TechnicalInputChannel1ChoiceElm, CDMTechnicalInputChannelCodeType);
}
 //TODO : Statement.Entry.TechnicalInputChannel.Value -> ?
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TotalsPerBankTransactionCode2_To_CDMBankTransactionCodeTotalsType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TotalsPerBankTransactionCode2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd</description>
					</parameterfield>
					<parameterfield>
						<name>CDMBankTransactionCodeTotalsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TotalsPerBankTransactionCode2Elm in TotalsPerBankTransactionCode2) {
    def CDMBankTransactionCodeTotalsTypeElm = CDMBankTransactionCodeTotalsType.secAddElement();
    CDMBankTransactionCodeTotalsTypeElm.NumberOfEntries = TotalsPerBankTransactionCode2Elm.NbOfNtries;
    CDMBankTransactionCodeTotalsTypeElm.Sum = TotalsPerBankTransactionCode2Elm.Sum;
    CDMBankTransactionCodeTotalsTypeElm.TotalNetEntryAmount = TotalsPerBankTransactionCode2Elm.TtlNetNtryAmt;
    isoCodeToCDMCodeList(TotalsPerBankTransactionCode2Elm.CdtDbtInd, CDMBankTransactionCodeTotalsTypeElm.CreditDebitIndicatorCode);
    CDMBankTransactionCodeTotalsTypeElm.ForecastIndicator = TotalsPerBankTransactionCode2Elm.FcstInd;
    //TODO : Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransaction -> ?
    BankTransactionCodeStructure4_To_CDMBankTransactionType (TotalsPerBankTransactionCode2Elm.BkTxCd, CDMBankTransactionCodeTotalsTypeElm.BankTransaction);
    CashBalanceAvailability2_To_CDMCashBalanceAvailabilityType(TotalsPerBankTransactionCode2Elm.Avlbty, CDMBankTransactionCodeTotalsTypeElm.Availability);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TotalTransactions2_To_CDMTotalTransactionsType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TotalTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTotalTransactionsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TotalTransactions2Elm in TotalTransactions2) {
    def CDMTotalTransactionsTypeElm = CDMTotalTransactionsType.secAddElement();
    NumberAndSumOfTransactions2_To_CDMNumberAndSumOfTransactionsType(TotalTransactions2Elm.TtlNtries, CDMTotalTransactionsTypeElm.TotalEntries);
    NumberAndSumOfTransactions1_To_CDMTotalCreditDebitTransactionsType(TotalTransactions2Elm.TtlCdtNtries, CDMTotalTransactionsTypeElm.TotalCreditEntries);
    NumberAndSumOfTransactions1_To_CDMTotalCreditDebitTransactionsType(TotalTransactions2Elm.TtlDbtNtries, CDMTotalTransactionsTypeElm.TotalDebitEntries);
    TotalsPerBankTransactionCode2_To_CDMBankTransactionCodeTotalsType(TotalTransactions2Elm.TtlNtriesPerBkTxCd, CDMTotalTransactionsTypeElm.TotalEntriesPerBankTransactionCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TrackData1_To_CDMTrackDataType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TrackData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.TrckData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.TrckData</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTrackDataType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.TrackData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.TrackData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TrackData1Elm in TrackData1) {
    def CDMTrackDataTypeElm = CDMTrackDataType.secAddElement();
    CDMTrackDataTypeElm.TrackNumber = TrackData1Elm.TrckNb;
    CDMTrackDataTypeElm.TrackValue = TrackData1Elm.TrckVal;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionAgents3_To_CDMTransactionAgentsType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionAgentsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionAgents3Elm in TransactionAgents3) {
    def CDMTransactionAgentsTypeElm = CDMTransactionAgentsType.secAddElement();
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.DbtrAgt, CDMTransactionAgentsTypeElm.DebtorAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.CdtrAgt, CDMTransactionAgentsTypeElm.CreditorAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.IntrmyAgt1, CDMTransactionAgentsTypeElm.FirstIntermediaryAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.IntrmyAgt2, CDMTransactionAgentsTypeElm.SecondIntermediaryAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.IntrmyAgt3, CDMTransactionAgentsTypeElm.ThirdIntermediaryAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.RcvgAgt, CDMTransactionAgentsTypeElm.ReceivingAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.DlvrgAgt, CDMTransactionAgentsTypeElm.DeliveringAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.IssgAgt, CDMTransactionAgentsTypeElm.IssuingAgent);
    BranchAndFinancialInstitutionIdentification5_To_CDMBranchAndFinancialInstitutionType(TransactionAgents3Elm.SttlmPlc, CDMTransactionAgentsTypeElm.SettlementPlace);
    ProprietaryAgent3_To_CDMProprietaryAgentType(TransactionAgents3Elm.Prtry, CDMTransactionAgentsTypeElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionDates2_To_CDMTransactionDatesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionDates2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionDatesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionDates2Elm in TransactionDates2) {
    def CDMTransactionDatesTypeElm = CDMTransactionDatesType.secAddElement();
    CDMTransactionDatesTypeElm.AcceptanceDateTime = TransactionDates2Elm.AccptncDtTm;
    CDMTransactionDatesTypeElm.TradeActivityContractualSettlementDate = TransactionDates2Elm.TradActvtyCtrctlSttlmDt;
    CDMTransactionDatesTypeElm.TradeDate = TransactionDates2Elm.TradDt;
    CDMTransactionDatesTypeElm.InterbankSettlementDate = TransactionDates2Elm.IntrBkSttlmDt;
    CDMTransactionDatesTypeElm.StartDate = TransactionDates2Elm.StartDt;
    CDMTransactionDatesTypeElm.EndDate = TransactionDates2Elm.EndDt;
    CDMTransactionDatesTypeElm.TransactionDateTime = TransactionDates2Elm.TxDtTm;
    ProprietaryDate2_To_CDMProprietaryDateType(TransactionDates2Elm.Prtry, CDMTransactionDatesTypeElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionInterest3_To_CDMTransactionInterestType" type="FormulaFunctionDef">
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionInterestType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionInterest3Elm in TransactionInterest3) {
    def CDMTransactionInterestTypeElm = CDMTransactionInterestType.secAddElement();
    ActiveOrHistoricCurrencyAndAmount_To_CDMAmountType(TransactionInterest3Elm.TtlIntrstAndTaxAmt, CDMTransactionInterestTypeElm.TotalInterestAndTaxAmount);
    InterestRecord1_To_CDMInterestRecordType(TransactionInterest3Elm.Rcrd, CDMTransactionInterestTypeElm.Record);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionParties3_To_CDMTransactionPartiesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionPartiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionParties3Elm in TransactionParties3) {
    def CDMTransactionPartiesTypeElm = CDMTransactionPartiesType.secAddElement();
    PartyIdentification43_To_CDMPartyType(TransactionParties3Elm.InitgPty, CDMTransactionPartiesTypeElm.InitiatingParty);
    PartyIdentification43_To_CDMPartyType(TransactionParties3Elm.Dbtr, CDMTransactionPartiesTypeElm.Debtor);
    CashAccount24_To_CDMCashAccountType(TransactionParties3Elm.DbtrAcct, CDMTransactionPartiesTypeElm.DebtorAccount);
    PartyIdentification43_To_CDMPartyType(TransactionParties3Elm.UltmtDbtr, CDMTransactionPartiesTypeElm.UltimateDebtor);
    PartyIdentification43_To_CDMPartyType(TransactionParties3Elm.Cdtr, CDMTransactionPartiesTypeElm.Creditor);
    CashAccount24_To_CDMCashAccountType(TransactionParties3Elm.CdtrAcct, CDMTransactionPartiesTypeElm.CreditorAccount);
    PartyIdentification43_To_CDMPartyType(TransactionParties3Elm.UltmtCdtr, CDMTransactionPartiesTypeElm.UltimateCreditor);
    PartyIdentification43_To_CDMPartyType(TransactionParties3Elm.TradgPty, CDMTransactionPartiesTypeElm.TradingParty);
    ProprietaryParty3_To_CDMProprietaryPartyType(TransactionParties3Elm.Prtry, CDMTransactionPartiesTypeElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionPrice3Choice_To_CDMTransactionPriceChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionPriceChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionPrice3ChoiceElm in TransactionPrice3Choice) {
    def CDMTransactionPriceChoiceTypeElm = CDMTransactionPriceChoiceType.secAddElement();
    Price2_To_CDMPriceType(TransactionPrice3ChoiceElm.DealPric, CDMTransactionPriceChoiceTypeElm.DealPrice);
    ProprietaryPrice2_To_CDMProprietaryPriceType(TransactionPrice3ChoiceElm.Prtry, CDMTransactionPriceChoiceTypeElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionQuantities2Choice_To_CDMTransactionQuantitiesChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionQuantitiesChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionQuantities2ChoiceElm in TransactionQuantities2Choice) {
    def CDMTransactionQuantitiesChoiceTypeElm = CDMTransactionQuantitiesChoiceType.secAddElement();
    FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoiceType(TransactionQuantities2ChoiceElm.Qty, CDMTransactionQuantitiesChoiceTypeElm.Quantity);
    OriginalAndCurrentQuantities1_To_CDMOriginalAndCurrentQuantitiesType(TransactionQuantities2ChoiceElm.OrgnlAndCurFaceAmt, CDMTransactionQuantitiesChoiceTypeElm.OrgnlAndCurFaceAmt);
    ProprietaryQuantity1_To_CDMProprietaryQuantityType(TransactionQuantities2ChoiceElm.Prtry, CDMTransactionQuantitiesChoiceTypeElm.Proprietary);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="TransactionReferences3_To_CDMTransactionReferencesType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>TransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs</description>
					</parameterfield>
					<parameterfield>
						<name>CDMTransactionReferencesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def TransactionReferences3Elm in TransactionReferences3) {
    def CDMTransactionReferencesTypeElm = CDMTransactionReferencesType.secAddElement();
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.MsgId, CDMTransactionReferencesTypeElm.MessageID);
    CDMTransactionReferencesTypeElm.AccountServicerReference = TransactionReferences3Elm.AcctSvcrRef;
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.PmtInfId, CDMTransactionReferencesTypeElm.PaymentInformationID);
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.InstrId, CDMTransactionReferencesTypeElm.InstructionID);
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.EndToEndId, CDMTransactionReferencesTypeElm.EndToEndID);
    //TODO : Statement.Entry.EntryDetails.TransactionDetails.References.TransactionID -> ?
	isoCodeToCDMCodeScheme(TransactionReferences3Elm.TxId, CDMTransactionReferencesTypeElm.TransactionID);
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.MndtId, CDMTransactionReferencesTypeElm.MandateID);
    CDMTransactionReferencesTypeElm.ChequeNumber = TransactionReferences3Elm.ChqNb;
    CDMTransactionReferencesTypeElm.ClearingSystemReference = TransactionReferences3Elm.ClrSysRef;
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.AcctOwnrTxId, CDMTransactionReferencesTypeElm.AccountOwnerTransactionID);
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.AcctSvcrTxId, CDMTransactionReferencesTypeElm.AccountServicerTransactionID);
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.MktInfrstrctrTxId, CDMTransactionReferencesTypeElm.MarketInfrastructureTransactionID);
    isoCodeToCDMCodeScheme(TransactionReferences3Elm.PrcgId, CDMTransactionReferencesTypeElm.ProcessingID);
    ProprietaryReference1_To_CDMReferencingIDType(TransactionReferences3Elm.Prtry, CDMTransactionReferencesTypeElm.ProprietaryReferenceID);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CardTransaction1Choice_To_CDMCardTransactionChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>CardTransaction1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CDMCardTransactionChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CardTransaction1ChoiceElm in CardTransaction1Choice) {
    def CDMCardTransactionChoiceTypeElm = CDMCardTransactionChoiceType.secAddElement();
    CardAggregated1_To_CDMCardAggregatedType(CardTransaction1ChoiceElm.Aggtd, CDMCardTransactionChoiceTypeElm.Aggregated);
    CardIndividualTransaction1_To_CDMCardIndividualTransactionType(CardTransaction1ChoiceElm.Indv, 
CDMCardTransactionChoiceTypeElm.Individual);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="RateType4Choice_To_CDMRateTypeChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>RateType4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CDMRateTypeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def RateType4ChoiceElm in RateType4Choice) {
    def CDMRateTypeChoiceTypeElm = CDMRateTypeChoiceType.secAddElement();
    CDMRateTypeChoiceTypeElm.Percentage = RateType4ChoiceElm.Pctg; 
    CDMRateTypeChoiceTypeElm.Other = RateType4ChoiceElm.Othr;
}]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="FinancialInstrumentQuantityChoice_To_CDMFinancialInstrumentQuantityChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>FinancialInstrumentQuantityChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.Qty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CDMFinancialInstrumentQuantityChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Quantity</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def FinancialInstrumentQuantityChoiceElm in FinancialInstrumentQuantityChoice) {
    def CDMFinancialInstrumentQuantityChoiceTypeElm = CDMFinancialInstrumentQuantityChoiceType.secAddElement();
    CDMFinancialInstrumentQuantityChoiceTypeElm.Unit = FinancialInstrumentQuantityChoiceElm.Unit;
    CDMFinancialInstrumentQuantityChoiceTypeElm.FaceAmount = FinancialInstrumentQuantityChoiceElm.FaceAmt;
    CDMFinancialInstrumentQuantityChoiceTypeElm.AmortisedValue = FinancialInstrumentQuantityChoiceElm.AmtsdVal;
}]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="YieldedOrValueType1Choice_To_CDMYieldedOrValueType1ChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>YieldedOrValueType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CDMYieldedOrValueType1ChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def YieldedOrValueType1ChoiceElm in YieldedOrValueType1Choice) {
    def CDMYieldedOrValueType1ChoiceTypeElm = CDMYieldedOrValueType1ChoiceType.secAddElement();
    CDMYieldedOrValueType1ChoiceTypeElm.Yielded = YieldedOrValueType1ChoiceElm.Yldd;
    isoCodeToCDMCodeList (YieldedOrValueType1ChoiceElm.ValTp, CDMYieldedOrValueType1ChoiceTypeElm.ValueTypeCode);
   }]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="PriceRateOrAmountChoice_To_CDMPriceRateOrAmountChoiceType" type="FormulaFunctionDef">
				<description></description>
				<Category>ISOToCDM</Category>
				<parameterfields>
					<parameterfield>
						<name>PriceRateOrAmountChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CDMPriceRateOrAmountChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Value</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def PriceRateOrAmountChoiceElm in PriceRateOrAmountChoice ) {
    def CDMPriceRateOrAmountChoiceTypeElm = CDMPriceRateOrAmountChoiceType.secAddElement();
    CDMPriceRateOrAmountChoiceTypeElm.Rate = PriceRateOrAmountChoiceElm.Rate;
    ActiveOrHistoricCurrencyAnd13DecimalAmount_To_CDMAmountType(PriceRateOrAmountChoiceElm.Amt, CDMPriceRateOrAmountChoiceTypeElm.Amount);
}]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<elementproperties>
				<propertymap>
				</propertymap>
			</elementproperties>
		</folder>
		<folder name="CDMToISO" type="FunctionDefFolder">
			<FormulaFunctionDef name="CDMAccountInterestType_To_AccountInterest2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAccountInterestType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest</description>
					</parameterfield>
					<parameterfield>
						<name>AccountInterest2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAccountInterestTypeElm in CDMAccountInterestType) {
    def AccountInterest2Elm = AccountInterest2.secAddElement();
    CDMInterestTypeCodeType_To_InterestType1Choice(CDMAccountInterestTypeElm.Type, AccountInterest2Elm.Tp);
    CDMInterestRateType_To_Rate3(CDMAccountInterestTypeElm.Rate, AccountInterest2Elm.Rate);
    CDMDateTimePeriodDetailsType_To_DateTimePeriodDetails(CDMAccountInterestTypeElm.FromToDate, AccountInterest2Elm.FrToDt);
    AccountInterest2Elm.Rsn = CDMAccountInterestTypeElm.Reason;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAccountStatementType_To_AccountStatement3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAccountStatementType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement</description>
					</parameterfield>
					<parameterfield>
						<name>AccountStatement3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAccountStatementTypeElm in CDMAccountStatementType) {
    def AccountStatement3Elm = AccountStatement3.secAddElement();
    AccountStatement3Elm.Id = CDMCodeSchemeToISOCode(CDMAccountStatementTypeElm.ID);
    CDMPaginationType_To_Pagination(CDMAccountStatementTypeElm.StatementPagination, AccountStatement3Elm.StmtPgntn);
    AccountStatement3Elm.ElctrncSeqNb = CDMAccountStatementTypeElm.ElectronicSequenceNumber;
    AccountStatement3Elm.LglSeqNb = CDMAccountStatementTypeElm.LegalSequenceNumber;
    AccountStatement3Elm.CreDtTm = CDMAccountStatementTypeElm.CreationDateTime;
    CDMDateTimePeriodDetailsType_To_DateTimePeriodDetails(CDMAccountStatementTypeElm.FromToDate, AccountStatement3Elm.FrToDt);
    AccountStatement3Elm.CpyDplctInd = CDMCodeListToISOCode(CDMAccountStatementTypeElm.CopyDuplicateIndicator);
    CDMReportingSourceCodeType_To_ReportingSource1Choice(CDMAccountStatementTypeElm.ReportingSource, AccountStatement3Elm.RptgSrc);
    CDMCashAccountType_To_CashAccount25(CDMAccountStatementTypeElm.Account, AccountStatement3Elm.Acct);
    CDMRelatedCashAccountType_To_CashAccount24(CDMAccountStatementTypeElm.RelatedAccount, AccountStatement3Elm.RltdAcct);
    CDMAccountInterestType_To_AccountInterest2(CDMAccountStatementTypeElm.Interest, AccountStatement3Elm.Intrst);
    CDMCashBalanceType_To_CashBalance3(CDMAccountStatementTypeElm.Balance, AccountStatement3Elm.Bal);
    CDMTotalTransactionsType_To_TotalTransactions2(CDMAccountStatementTypeElm.TransactionsSummary, AccountStatement3Elm.TxsSummry);
    CDMReportEntryType_To_ReportEntry3(CDMAccountStatementTypeElm.Entry, AccountStatement3Elm.Ntry);
    AccountStatement3Elm.AddtlStmtInf = CDMAccountStatementTypeElm.AdditionalStatementInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAdditionalMessageIndicatorType_To_ActiveOrHistoricCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAdditionalMessageIndicatorType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AdditionalMessageIndicator</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AdditionalMessageIndicator</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAdditionalMessageIndicatorTypeElm in CDMAdditionalMessageIndicatorType) {
    def ActiveOrHistoricCurrencyAndAmountElm = ActiveOrHistoricCurrencyAndAmount.secAddElement();
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountAndCurrencyExchangeDetailsTypeElm in CDMAmountAndCurrencyExchangeDetailsType) {
    def AmountAndCurrencyExchangeDetails3Elm = AmountAndCurrencyExchangeDetails3.secAddElement();
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMAmountAndCurrencyExchangeDetailsTypeElm.Amount, AmountAndCurrencyExchangeDetails3Elm.Amt);
    CDMCurrencyExchangeType_To_CurrencyExchange5(CDMAmountAndCurrencyExchangeDetailsTypeElm.CurrencyExchange, AmountAndCurrencyExchangeDetails3Elm.CcyXchg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountAndCurrencyExchangeType_To_AmountAndCurrencyExchange3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountAndCurrencyExchangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails</description>
					</parameterfield>
					<parameterfield>
						<name>AmountAndCurrencyExchange3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountAndCurrencyExchangeTypeElm in CDMAmountAndCurrencyExchangeType) {
    def AmountAndCurrencyExchange3Elm = AmountAndCurrencyExchange3.secAddElement();
    CDMAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchangeTypeElm.InstructedAmount, AmountAndCurrencyExchange3Elm.InstdAmt);
    CDMAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchangeTypeElm.TransactionAmount, AmountAndCurrencyExchange3Elm.TxAmt);
    CDMAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchangeTypeElm.CounterValueAmount, AmountAndCurrencyExchange3Elm.CntrValAmt);
    CDMAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails3(CDMAmountAndCurrencyExchangeTypeElm.AnnouncedPostingAmount, AmountAndCurrencyExchange3Elm.AnncdPstngAmt);
    CDMProprietaryAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails4(CDMAmountAndCurrencyExchangeTypeElm.ProprietaryAmount, AmountAndCurrencyExchange3Elm.PrtryAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountRangeBoundaryType_To_AmountRangeBoundary1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountRangeBoundaryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromAmount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountRangeBoundary1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountRangeBoundaryTypeElm in CDMAmountRangeBoundaryType) {
    def AmountRangeBoundary1Elm = AmountRangeBoundary1.secAddElement();
    AmountRangeBoundary1Elm.BdryAmt = CDMAmountRangeBoundaryTypeElm.BoundaryAmount;
    AmountRangeBoundary1Elm.Incl = CDMAmountRangeBoundaryTypeElm.Included;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountType_To_ActiveCurrencyAndAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit.NoteDenomination</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveCurrencyAndAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst.NoteDnmtn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountTypeElm in CDMAmountType) {
    CDMAmountToISOAmount (CDMAmountTypeElm, ActiveCurrencyAndAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMAmountType_To_ActiveOrHistoricCurrencyAnd13DecimalAmount" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Value.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Value.Amount</description>
					</parameterfield>
					<parameterfield>
						<name>ActiveOrHistoricCurrencyAnd13DecimalAmount</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMAmountTypeElm in CDMAmountType) {
    CDMAmountToISOAmount (CDMAmountTypeElm, ActiveOrHistoricCurrencyAnd13DecimalAmount);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBalanceTypeCodeType_To_BalanceType12" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBalanceTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Type</description>
					</parameterfield>
					<parameterfield>
						<name>BalanceType12</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBalanceTypeCodeTypeElm in CDMBalanceTypeCodeType) {
    def BalanceType12Elm = BalanceType12.secAddElement();
    BalanceType12Elm.CdOrPrtry.SecAddElement().Cd = CDMCodeListToISOCode (CDMBalanceTypeCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBankTransactionCodeTotalsType_To_TotalsPerBankTransactionCode2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBankTransactionCodeTotalsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode</description>
					</parameterfield>
					<parameterfield>
						<name>TotalsPerBankTransactionCode2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBankTransactionCodeTotalsTypeElm in CDMBankTransactionCodeTotalsType) {
    def TotalsPerBankTransactionCode2Elm = TotalsPerBankTransactionCode2.secAddElement();
    TotalsPerBankTransactionCode2Elm.NbOfNtries = CDMBankTransactionCodeTotalsTypeElm.NumberOfEntries;
    TotalsPerBankTransactionCode2Elm.Sum = CDMBankTransactionCodeTotalsTypeElm.Sum;
    TotalsPerBankTransactionCode2Elm.TtlNetNtryAmt = CDMBankTransactionCodeTotalsTypeElm.TotalNetEntryAmount;
    TotalsPerBankTransactionCode2Elm.CdtDbtInd = CDMCodeListToISOCode(CDMBankTransactionCodeTotalsTypeElm.CreditDebitIndicatorCode);
    TotalsPerBankTransactionCode2Elm.FcstInd = CDMBankTransactionCodeTotalsTypeElm.ForecastIndicator;
    CDMBankTransactionType_To_BankTransactionCodeStructure4(CDMBankTransactionCodeTotalsTypeElm.BankTransaction, TotalsPerBankTransactionCode2Elm.BkTxCd);
    CDMCashBalanceAvailabilityType_To_CashBalanceAvailability2(CDMBankTransactionCodeTotalsTypeElm.Availability, TotalsPerBankTransactionCode2Elm.Avlbty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBankTransactionType_To_BankTransactionCodeStructure4" type="FormulaFunctionDef">
				<description></description>
				<Category>User Defined</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBankTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntriesPerBankTransactionCode.BankTransaction</description>
					</parameterfield>
					<parameterfield>
						<name>BankTransactionCodeStructure4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtriesPerBkTxCd.BkTxCd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBankTransactionTypeElm in CDMBankTransactionType) {
	def BankTransactionCodeStructure4Elm = BankTransactionCodeStructure4.SecAddElement();
	def domn = BankTransactionCodeStructure4Elm.Domn.SecAddElement();
	domn.Cd = CDMCodeListToISOCode (CDMBankTransactionTypeElm.Code);
	
	if (CDMBankTransactionTypeElm.Family.length() > 0) {
		def family = domn.Fmly.SecAddelement();
		family.Cd = CDMCodeListToISOCode (CDMBankTransactionTypeElm.Family[0].Code);
		family.SubFmlyCd = CDMBankTransactionTypeElm.Family[0].SubFamilyCode[0].Value;
	}
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBankTransactionType_To_PartyIdentification43" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBankTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.OriginalBankTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.OriginalBankTransaction</description>
					</parameterfield>
					<parameterfield>
						<name>PartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.Orgtr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.Orgtr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBankTransactionTypeElm in CDMBankTransactionType) {
    def PartyIdentification43Elm = PartyIdentification43.secAddElement();
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBatchInformationType_To_BatchInformation2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBatchInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.Batch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.Batch</description>
					</parameterfield>
					<parameterfield>
						<name>BatchInformation2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.Btch</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.Btch</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBatchInformationTypeElm in CDMBatchInformationType) {
    def BatchInformation2Elm = BatchInformation2.secAddElement();
    BatchInformation2Elm.MsgId = CDMCodeSchemeToISOCode(CDMBatchInformationTypeElm.MessageID);
    BatchInformation2Elm.PmtInfId = CDMCodeSchemeToISOCode(CDMBatchInformationTypeElm.PaymentInformationID);
    BatchInformation2Elm.NbOfTxs = CDMBatchInformationTypeElm.NumberOfTransactions;
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMBatchInformationTypeElm.TotalAmount, BatchInformation2Elm.TtlAmt);
    BatchInformation2Elm.CdtDbtInd = CDMCodeListToISOCode(CDMBatchInformationTypeElm.CreditDebitIndicatorCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMBranchAndFinancialInstitutionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer</description>
					</parameterfield>
					<parameterfield>
						<name>BranchAndFinancialInstitutionIdentification5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMBranchAndFinancialInstitutionTypeElm in CDMBranchAndFinancialInstitutionType) {
    def BranchAndFinancialInstitutionIdentification5Elm = BranchAndFinancialInstitutionIdentification5.secAddElement();
    CDMFinancialInstitutionType_To_FinancialInstitutionIdentification8(CDMBranchAndFinancialInstitutionTypeElm.FinancialInstitution, BranchAndFinancialInstitutionIdentification5Elm.FinInstnId);
    CDMBranchDataType_To_BranchData2(CDMBranchAndFinancialInstitutionTypeElm.Branch, BranchAndFinancialInstitutionIdentification5Elm.BrnchId);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardAggregatedType_To_CardAggregated1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardAggregatedType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry</description>
					</parameterfield>
					<parameterfield>
						<name>CardAggregated1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardAggregatedTypeElm in CDMCardAggregatedType) {
    def CardAggregated1Elm = CardAggregated1.secAddElement();
    CardAggregated1Elm.AddtlSvc = CDMCodeListToISOCode(CDMCardAggregatedTypeElm.AdditionalServiceCode);
    CardAggregated1Elm.TxCtgy = CDMCodeListToISOCode(CDMCardAggregatedTypeElm.TransactionCategoryCode);
    CardAggregated1Elm.SaleRcncltnId = CDMCardAggregatedTypeElm.SaleReconciliationID;
    CDMCardSequenceNumberRangeType_To_CardSequenceNumberRange1(CDMCardAggregatedTypeElm.SequenceNumberRange, CardAggregated1Elm.SeqNbRg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardDataReadingCodeType_To_CardDataReading1Code" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardDataReadingCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardReadingCapabilitiesCode</description>
					</parameterfield>
					<parameterfield>
						<name>CardDataReading1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CardRdngCpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardDataReadingCodeTypeElm in CDMCardDataReadingCodeType) {
    def CardDataReading1CodeElm = CardDataReading1Code.secAddElement();
    CardDataReading1CodeElm.Value = CDMCodeListToISOCode (CDMCardDataReadingCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardEntryType_To_CardEntry1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardEntryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction</description>
					</parameterfield>
					<parameterfield>
						<name>CardEntry1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardEntryTypeElm in CDMCardEntryType) {
    def CardEntry1Elm = CardEntry1.secAddElement();
    CDMPaymentCardType_To_PaymentCard4(CDMCardEntryTypeElm.Card, CardEntry1Elm.Card);
    CDMPointOfInteractionType_To_PointOfInteraction1(CDMCardEntryTypeElm.POI, CardEntry1Elm.POI);
    CDMCardAggregatedType_To_CardAggregated1(CDMCardEntryTypeElm.AggregatedEntry, CardEntry1Elm.AggtdNtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardholderVerificationCapabilityCodeType_To_CardholderVerificationCapability1Code" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardholderVerificationCapabilityCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.CardholderVerificationCapabilitiesCode</description>
					</parameterfield>
					<parameterfield>
						<name>CardholderVerificationCapability1Code</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.CrdhldrVrfctnCpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardholderVerificationCapabilityCodeTypeElm in CDMCardholderVerificationCapabilityCodeType) {
    def CardholderVerificationCapability1CodeElm = CardholderVerificationCapability1Code.secAddElement();
    CardholderVerificationCapability1CodeElm.Value = CDMCodeListToISOCode (CDMCardholderVerificationCapabilityCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardIndividualTransactionType_To_CardIndividualTransaction1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardIndividualTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual</description>
					</parameterfield>
					<parameterfield>
						<name>CardIndividualTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardIndividualTransactionTypeElm in CDMCardIndividualTransactionType) {
    def CardIndividualTransaction1Elm = CardIndividualTransaction1.secAddElement();
    CardIndividualTransaction1Elm.AddtlSvc = CDMCodeListToISOCode(CDMCardIndividualTransactionTypeElm.AdditionalServiceCode);
    CardIndividualTransaction1Elm.TxCtgy = CDMCodeListToISOCode(CDMCardIndividualTransactionTypeElm.TransactionCategoryCode);
    CardIndividualTransaction1Elm.SaleRcncltnId = CDMCodeSchemeToISOCode(CDMCardIndividualTransactionTypeElm.SaleReconciliationID);
    CardIndividualTransaction1Elm.SaleRefNb = CDMCardIndividualTransactionTypeElm.SaleReferenceNumber;
    CardIndividualTransaction1Elm.SeqNb = CDMCardIndividualTransactionTypeElm.SequenceNumber;
    CDMProductType_To_Product2(CDMCardIndividualTransactionTypeElm.Product, CardIndividualTransaction1Elm.Pdct);
    CardIndividualTransaction1Elm.VldtnDt = CDMCardIndividualTransactionTypeElm.ValidationDate;
    CardIndividualTransaction1Elm.VldtnSeqNb = CDMCardIndividualTransactionTypeElm.ValidationSequenceNumber;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardSecurityInformationType_To_CardSecurityInformation1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardSecurityInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.CardSecurityCode</description>
					</parameterfield>
					<parameterfield>
						<name>CardSecurityInformation1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.CardSctyCd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardSecurityInformationTypeElm in CDMCardSecurityInformationType) {
    def CardSecurityInformation1Elm = CardSecurityInformation1.secAddElement();
    CardSecurityInformation1Elm.CSCMgmt = CDMCodeListToISOCode(CDMCardSecurityInformationTypeElm.CSCManagement);
    CardSecurityInformation1Elm.CSCVal = CDMCardSecurityInformationTypeElm.CSCValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardSequenceNumberRangeType_To_CardSequenceNumberRange1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardSequenceNumberRangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.AggregatedEntry.SequenceNumberRange</description>
					</parameterfield>
					<parameterfield>
						<name>CardSequenceNumberRange1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry.SeqNbRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.AggtdNtry.SeqNbRg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardSequenceNumberRangeTypeElm in CDMCardSequenceNumberRangeType) {
    def CardSequenceNumberRange1Elm = CardSequenceNumberRange1.secAddElement();
    CardSequenceNumberRange1Elm.FrstTx = CDMCardSequenceNumberRangeTypeElm.FirstTransaction;
    CardSequenceNumberRange1Elm.LastTx = CDMCardSequenceNumberRangeTypeElm.LastTransaction;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardTransactionType_To_CardTransaction1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction</description>
					</parameterfield>
					<parameterfield>
						<name>CardTransaction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardTransactionTypeElm in CDMCardTransactionType) {
    def CardTransaction1Elm = CardTransaction1.secAddElement();
    CDMPaymentCardType_To_PaymentCard4(CDMCardTransactionTypeElm.Card, CardTransaction1Elm.Card);
    CDMPointOfInteractionType_To_PointOfInteraction1(CDMCardTransactionTypeElm.POI, CardTransaction1Elm.POI);
    CDMCardTransactionChoiceType_To_CardTransaction1Choice(CDMCardTransactionTypeElm.Transaction, CardTransaction1Elm.Tx);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccountType_To_CashAccount24" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.DebtorAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.DebtorAccount</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.DbtrAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.DbtrAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccountTypeElm in CDMCashAccountType) {
    def CashAccount24Elm = CashAccount24.secAddElement();
    CDMAccountIDType_To_AccountIdentification4Choice(CDMCashAccountTypeElm.ID, CashAccount24Elm.Id);
    CDMCashAccountTypeCodeType_To_CashAccountType2Choice(CDMCashAccountTypeElm.Type, CashAccount24Elm.Tp);
    CashAccount24Elm.Ccy = CDMCodeListToISOCode(CDMCashAccountTypeElm.Currency);
    CashAccount24Elm.Nm = CDMCashAccountTypeElm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccountType_To_CashAccount25" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount25</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccountTypeElm in CDMCashAccountType) {
    def CashAccount25Elm = CashAccount25.secAddElement();
    CDMAccountIDType_To_AccountIdentification4Choice(CDMCashAccountTypeElm.ID, CashAccount25Elm.Id);
    CDMCashAccountTypeCodeType_To_CashAccountType2Choice(CDMCashAccountTypeElm.Type, CashAccount25Elm.Tp);
    CashAccount25Elm.Ccy = CDMCodeListToISOCode(CDMCashAccountTypeElm.Currency);
    CashAccount25Elm.Nm = CDMCashAccountTypeElm.Name;
    CDMPartyType_To_PartyIdentification43(CDMCashAccountTypeElm.Owner, CashAccount25Elm.Ownr);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMCashAccountTypeElm.Servicer, CashAccount25Elm.Svcr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashAccountTypeCodeType_To_CashAccountType2Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashAccountTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account.Type</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccountType2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashAccountTypeCodeTypeElm in CDMCashAccountTypeCodeType) {
    def CashAccountType2ChoiceElm = CashAccountType2Choice.secAddElement();
    CashAccountType2ChoiceElm.Cd = CDMCodeListToISOCode (CDMCashAccountTypeCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashBalanceAvailabilityType_To_CashBalanceAvailability2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashBalanceAvailabilityType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Availability</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance.Availability</description>
					</parameterfield>
					<parameterfield>
						<name>CashBalanceAvailability2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Avlbty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.Avlbty</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashBalanceAvailabilityTypeElm in CDMCashBalanceAvailabilityType) {
    def CashBalanceAvailability2Elm = CashBalanceAvailability2.secAddElement();
    def destDt = CashBalanceAvailability2Elm.Dt.SecAddElement();
    def srcDt = CDMCashBalanceAvailabilityTypeElm.AvailabilityGroup1[0];
    if (srcDt.NumberOfDays.IsNotNull())
	    destDt.NbOfDays = ToText (srcDt.NumberOfDays);
	destDt.ActlDt = srcDt.ActualDate;
	
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMCashBalanceAvailabilityTypeElm.Amount, CashBalanceAvailability2Elm.Amt);
    CashBalanceAvailability2Elm.CdtDbtInd = CDMCodeListToISOCode(CDMCashBalanceAvailabilityTypeElm.CreditDebitIndicatorCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashBalanceType_To_CashBalance3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashBalanceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance</description>
					</parameterfield>
					<parameterfield>
						<name>CashBalance3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashBalanceTypeElm in CDMCashBalanceType) {
    def CashBalance3Elm = CashBalance3.secAddElement();
    CDMBalanceTypeCodeType_To_BalanceType12(CDMCashBalanceTypeElm.Type, CashBalance3Elm.Tp);
    CDMCreditLineType_To_CreditLine2(CDMCashBalanceTypeElm.CreditLine, CashBalance3Elm.CdtLine);
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMCashBalanceTypeElm.Amount, CashBalance3Elm.Amt);
    CashBalance3Elm.CdtDbtInd = CDMCodeListToISOCode(CDMCashBalanceTypeElm.CreditDebitIndicatorCode);
    def destDt = CashBalance3Elm.Dt.SecAddElement();
    def srcDt = CDMCashBalanceTypeElm.BalanceGroup1[0];
    if (srcDt.Date.IsNotNull())
    	destDt.Dt = srcDt.Date;
    else
    	destDt.DtTm = srcDt.DateTime;
    CDMCashBalanceAvailabilityType_To_CashBalanceAvailability2(CDMCashBalanceTypeElm.Availability, CashBalance3Elm.Avlbty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCashDepositType_To_CashDeposit1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCashDepositType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CashDeposit</description>
					</parameterfield>
					<parameterfield>
						<name>CashDeposit1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CshDpst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCashDepositTypeElm in CDMCashDepositType) {
    def CashDeposit1Elm = CashDeposit1.secAddElement();
    CDMAmountType_To_ActiveCurrencyAndAmount(CDMCashDepositTypeElm.NoteDenomination, CashDeposit1Elm.NoteDnmtn);
    CashDeposit1Elm.NbOfNotes = CDMCashDepositTypeElm.NumberOfNotes;
    CDMAmountType_To_ActiveCurrencyAndAmount(CDMCashDepositTypeElm.Amount, CashDeposit1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMChargesRecordType_To_ChargesRecord1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMChargesRecordType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record</description>
					</parameterfield>
					<parameterfield>
						<name>ChargesRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMChargesRecordTypeElm in CDMChargesRecordType) {
    def ChargesRecord1Elm = ChargesRecord1.secAddElement();
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMChargesRecordTypeElm.Amount, ChargesRecord1Elm.Amt);
    ChargesRecord1Elm.CdtDbtInd = CDMCodeListToISOCode(CDMChargesRecordTypeElm.CreditDebitIndicatorCode);
    CDMChargeTypeCodeType_To_ChargeType3Choice(CDMChargesRecordTypeElm.TypeCode, ChargesRecord1Elm.Tp);
    ChargesRecord1Elm.Rate = CDMChargesRecordTypeElm.Rate;
    ChargesRecord1Elm.Br = CDMCodeListToISOCode(CDMChargesRecordTypeElm.BearerCode);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMChargesRecordTypeElm.Agent, ChargesRecord1Elm.Agt);
    CDMTaxChargesType_To_TaxCharges2(CDMChargesRecordTypeElm.Tax, ChargesRecord1Elm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMChargesType_To_Charges3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMChargesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges</description>
					</parameterfield>
					<parameterfield>
						<name>Charges3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMChargesTypeElm in CDMChargesType) {
    def Charges3Elm = Charges3.secAddElement();
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMChargesTypeElm.TotalChargesAndTaxAmount, Charges3Elm.TtlChrgsAndTaxAmt);
    CDMChargesRecordType_To_ChargesRecord1(CDMChargesTypeElm.Record, Charges3Elm.Rcrd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMChargeTypeCodeType_To_ChargeType3Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMChargeTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.TypeCode</description>
					</parameterfield>
					<parameterfield>
						<name>ChargeType3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMChargeTypeCodeTypeElm in CDMChargeTypeCodeType) {
    def ChargeType3ChoiceElm = ChargeType3Choice.secAddElement();
    ChargeType3ChoiceElm.Cd = CDMCodeListToISOCode (CDMChargeTypeCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCorporateActionType_To_CorporateAction9" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCorporateActionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CorporateAction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CorporateAction</description>
					</parameterfield>
					<parameterfield>
						<name>CorporateAction9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CorpActn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CorpActn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCorporateActionTypeElm in CDMCorporateActionType) {
    def CorporateAction9Elm = CorporateAction9.secAddElement();
    CorporateAction9Elm.EvtTp = CDMCorporateActionTypeElm.EventType;
    CorporateAction9Elm.EvtId = CDMCodeSchemeToISOCode(CDMCorporateActionTypeElm.EventID);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCreditLineType_To_CreditLine2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCreditLineType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Balance.CreditLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Balance.CreditLine</description>
					</parameterfield>
					<parameterfield>
						<name>CreditLine2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.CdtLine</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Bal.CdtLine</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCreditLineTypeElm in CDMCreditLineType) {
    def CreditLine2Elm = CreditLine2.secAddElement();
    CreditLine2Elm.Incl = CDMCreditLineTypeElm.Included;
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMCreditLineTypeElm.Amount, CreditLine2Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCurrencyAndAmountRangeType_To_CurrencyAndAmountRange2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCurrencyAndAmountRangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange</description>
					</parameterfield>
					<parameterfield>
						<name>CurrencyAndAmountRange2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCurrencyAndAmountRangeTypeElm in CDMCurrencyAndAmountRangeType) {
    def CurrencyAndAmountRange2Elm = CurrencyAndAmountRange2.secAddElement();
    CDMImpliedCurrencyAmountRangeChoiceType_To_ImpliedCurrencyAmountRangeChoice(CDMCurrencyAndAmountRangeTypeElm.Amount, CurrencyAndAmountRange2Elm.Amt);
    CurrencyAndAmountRange2Elm.CdtDbtInd = CDMCodeListToISOCode(CDMCurrencyAndAmountRangeTypeElm.CreditDebitIndicatorCode);
    CurrencyAndAmountRange2Elm.Ccy = CDMCodeListToISOCode(CDMCurrencyAndAmountRangeTypeElm.Currency);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCurrencyExchangeType_To_CurrencyExchange5" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCurrencyExchangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount.CurrencyExchange</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.InstructedAmount.CurrencyExchange</description>
					</parameterfield>
					<parameterfield>
						<name>CurrencyExchange5</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt.CcyXchg</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.InstdAmt.CcyXchg</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCurrencyExchangeTypeElm in CDMCurrencyExchangeType) {
    def CurrencyExchange5Elm = CurrencyExchange5.secAddElement();
    CurrencyExchange5Elm.SrcCcy = CDMCodeListToISOCode(CDMCurrencyExchangeTypeElm.SourceCurrency);
    CurrencyExchange5Elm.TrgtCcy = CDMCodeListToISOCode(CDMCurrencyExchangeTypeElm.TargetCurrency);
    CurrencyExchange5Elm.UnitCcy = CDMCodeListToISOCode(CDMCurrencyExchangeTypeElm.UnitCurrency);
    CurrencyExchange5Elm.XchgRate = CDMCurrencyExchangeTypeElm.ExchangeRate;
    CurrencyExchange5Elm.CtrctId = CDMCodeSchemeToISOCode(CDMCurrencyExchangeTypeElm.ContractID);
    CurrencyExchange5Elm.QtnDt = CDMCurrencyExchangeTypeElm.QuotationDate;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDateAndDateTimeChoiceType_To_DateAndDateTimeChoice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDateAndDateTimeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary.Date</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary.Date</description>
					</parameterfield>
					<parameterfield>
						<name>DateAndDateTimeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry.Dt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry.Dt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDateAndDateTimeChoiceTypeElm in CDMDateAndDateTimeChoiceType) {
    def DateAndDateTimeChoiceElm = DateAndDateTimeChoice.secAddElement();
    if (CDMDateAndDateTimeChoiceTypeElm.Date.IsNotNull())
    	DateAndDateTimeChoiceElm.Dt = CDMDateAndDateTimeChoiceTypeElm.Date;
    else
    	DateAndDateTimeChoiceElm.DtTm = CDMDateAndDateTimeChoiceTypeElm.DateTime;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDateTimePeriodDetailsType_To_DateTimePeriodDetails" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDateTimePeriodDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.FromToDate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.FromToDate</description>
					</parameterfield>
					<parameterfield>
						<name>DateTimePeriodDetails</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.FrToDt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.FrToDt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDateTimePeriodDetailsTypeElm in CDMDateTimePeriodDetailsType) {
    def DateTimePeriodDetailsElm = DateTimePeriodDetails.secAddElement();
    DateTimePeriodDetailsElm.FrDtTm = CDMDateTimePeriodDetailsTypeElm.FromDateTime;
    DateTimePeriodDetailsElm.ToDtTm = CDMDateTimePeriodDetailsTypeElm.ToDateTime;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDiscountAmountTypeCodeType_To_DiscountAmountType1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDiscountAmountTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount.TypeCode</description>
					</parameterfield>
					<parameterfield>
						<name>DiscountAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDiscountAmountTypeCodeTypeElm in CDMDiscountAmountTypeCodeType) {
    def DiscountAmountType1ChoiceElm = DiscountAmountType1Choice.secAddElement();
    DiscountAmountType1ChoiceElm.Cd = CDMCodeListToISOCode (CDMDiscountAmountTypeCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDiscountTypeAndAmountType_To_DiscountAmountAndType1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDiscountTypeAndAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.DiscountAppliedAmount</description>
					</parameterfield>
					<parameterfield>
						<name>DiscountAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.DscntApldAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDiscountTypeAndAmountTypeElm in CDMDiscountTypeAndAmountType) {
    def DiscountAmountAndType1Elm = DiscountAmountAndType1.secAddElement();
    CDMDiscountAmountTypeCodeType_To_DiscountAmountType1Choice(CDMDiscountTypeAndAmountTypeElm.TypeCode, DiscountAmountAndType1Elm.Tp);
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMDiscountTypeAndAmountTypeElm.Amount, DiscountAmountAndType1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMDisplayCapabilitiesType_To_DisplayCapabilities1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMDisplayCapabilitiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities.DisplayCapabilities</description>
					</parameterfield>
					<parameterfield>
						<name>DisplayCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.DispCpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties.DispCpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMDisplayCapabilitiesTypeElm in CDMDisplayCapabilitiesType) {
    def DisplayCapabilities1Elm = DisplayCapabilities1.secAddElement();
    DisplayCapabilities1Elm.DispTp = CDMCodeListToISOCode(CDMDisplayCapabilitiesTypeElm.DisplayTypeCode);
    DisplayCapabilities1Elm.NbOfLines = CDMDisplayCapabilitiesTypeElm.NumberOfLines;
    if (IsNotNull (CDMDisplayCapabilitiesTypeElm.LineWidth))
	    DisplayCapabilities1Elm.LineWidth = toText(CDMDisplayCapabilitiesTypeElm.LineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEntryDetailsType_To_EntryDetails2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEntryDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails</description>
					</parameterfield>
					<parameterfield>
						<name>EntryDetails2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEntryDetailsTypeElm in CDMEntryDetailsType) {
    def EntryDetails2Elm = EntryDetails2.secAddElement();
    CDMBatchInformationType_To_BatchInformation2(CDMEntryDetailsTypeElm.Batch, EntryDetails2Elm.Btch);
    CDMEntryTransactionType_To_EntryTransaction3(CDMEntryDetailsTypeElm.TransactionDetails, EntryDetails2Elm.TxDtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMEntryTransactionType_To_EntryTransaction3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMEntryTransactionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails</description>
					</parameterfield>
					<parameterfield>
						<name>EntryTransaction3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMEntryTransactionTypeElm in CDMEntryTransactionType) {
    def EntryTransaction3Elm = EntryTransaction3.secAddElement();
    CDMTransactionReferencesType_To_TransactionReferences3(CDMEntryTransactionTypeElm.References, EntryTransaction3Elm.Refs);
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMEntryTransactionTypeElm.Amount, EntryTransaction3Elm.Amt);
    EntryTransaction3Elm.CdtDbtInd = CDMCodeListToISOCode(CDMEntryTransactionTypeElm.CreditDebitIndicatorCode);
    CDMAmountAndCurrencyExchangeType_To_AmountAndCurrencyExchange3(CDMEntryTransactionTypeElm.AmountDetails, EntryTransaction3Elm.AmtDtls);
    CDMCashBalanceAvailabilityType_To_CashBalanceAvailability2(CDMEntryTransactionTypeElm.Availability, EntryTransaction3Elm.Avlbty);
    CDMBankTransactionType_To_BankTransactionCodeStructure4 (CDMEntryTransactionTypeElm.BankTransaction, EntryTransaction3Elm.BkTxCd);
    CDMChargesType_To_Charges3(CDMEntryTransactionTypeElm.Charges, EntryTransaction3Elm.Chrgs);
    CDMTransactionInterestType_To_TransactionInterest3(CDMEntryTransactionTypeElm.Interest, EntryTransaction3Elm.Intrst);
    CDMTransactionPartiesType_To_TransactionParties3(CDMEntryTransactionTypeElm.RelatedParties, EntryTransaction3Elm.RltdPties);
    CDMTransactionAgentsType_To_TransactionAgents3(CDMEntryTransactionTypeElm.RelatedAgents, EntryTransaction3Elm.RltdAgts);
    CDMPurposeCodeType_To_Purpose2Choice(CDMEntryTransactionTypeElm.PurposeCode, EntryTransaction3Elm.Purp);
    CDMRemittanceLocationType_To_RemittanceLocation2(CDMEntryTransactionTypeElm.RelatedRemittanceInformation, EntryTransaction3Elm.RltdRmtInf);
    CDMRemittanceInformationType_To_RemittanceInformation7(CDMEntryTransactionTypeElm.RemittanceInformation, EntryTransaction3Elm.RmtInf);
    CDMTransactionDatesType_To_TransactionDates2(CDMEntryTransactionTypeElm.RelatedDates, EntryTransaction3Elm.RltdDts);
    CDMTransactionPriceChoiceType_To_TransactionPrice3Choice(CDMEntryTransactionTypeElm.RelatedPrice, EntryTransaction3Elm.RltdPric);
    CDMTransactionQuantitiesChoiceType_To_TransactionQuantities2Choice(CDMEntryTransactionTypeElm.RelatedQuantities, EntryTransaction3Elm.RltdQties);
    CDMSecurityIDType_To_SecurityIdentification14(CDMEntryTransactionTypeElm.FinancialInstrumentID, EntryTransaction3Elm.FinInstrmId);
    CDMTaxInformationType_To_TaxInformation3(CDMEntryTransactionTypeElm.Tax, EntryTransaction3Elm.Tax);
    CDMPaymentReturnReasonType_To_PaymentReturnReason2(CDMEntryTransactionTypeElm.ReturnInformation, EntryTransaction3Elm.RtrInf);
    CDMCorporateActionType_To_CorporateAction9(CDMEntryTransactionTypeElm.CorporateAction, EntryTransaction3Elm.CorpActn);
    CDMSecuritiesAccountType_To_SecuritiesAccount13(CDMEntryTransactionTypeElm.SafekeepingAccount, EntryTransaction3Elm.SfkpgAcct);
    CDMCashDepositType_To_CashDeposit1(CDMEntryTransactionTypeElm.CashDeposit, EntryTransaction3Elm.CshDpst);
    CDMCardTransactionType_To_CardTransaction1(CDMEntryTransactionTypeElm.CardTransaction, EntryTransaction3Elm.CardTx);
    EntryTransaction3Elm.AddtlTxInf = CDMEntryTransactionTypeElm.AdditionalTransactionInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFinancialInstitutionType_To_FinancialInstitutionIdentification8" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFinancialInstitutionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer.FinancialInstitution</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Account.Servicer.FinancialInstitution</description>
					</parameterfield>
					<parameterfield>
						<name>FinancialInstitutionIdentification8</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr.FinInstnId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Acct.Svcr.FinInstnId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFinancialInstitutionTypeElm in CDMFinancialInstitutionType) {
    def FinancialInstitutionIdentification8Elm = FinancialInstitutionIdentification8.secAddElement();
    FinancialInstitutionIdentification8Elm.BICFI = CDMCodeListToISOCode (CDMFinancialInstitutionTypeElm.ID);
    CDMClearingSystemMemberType_To_ClearingSystemMemberIdentification2(CDMFinancialInstitutionTypeElm.ClearingSystemMember, FinancialInstitutionIdentification8Elm.ClrSysMmbId);
    FinancialInstitutionIdentification8Elm.Nm = CDMFinancialInstitutionTypeElm.Name;
    CDMPostalAddressType_To_PostalAddress6(CDMFinancialInstitutionTypeElm.PostalAddress, FinancialInstitutionIdentification8Elm.PstlAdr);
    CDMGenericFinancialIDType_To_GenericFinancialIdentification1(CDMFinancialInstitutionTypeElm.OtherID, FinancialInstitutionIdentification8Elm.Othr);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFromToAmountRangeType_To_FromToAmountRange" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFromToAmountRangeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromToAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount.FromToAmount</description>
					</parameterfield>
					<parameterfield>
						<name>FromToAmountRange</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrToAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt.FrToAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFromToAmountRangeTypeElm in CDMFromToAmountRangeType) {
    def FromToAmountRangeElm = FromToAmountRange.secAddElement();
    CDMAmountRangeBoundaryType_To_AmountRangeBoundary1(CDMFromToAmountRangeTypeElm.FromAmount, FromToAmountRangeElm.FrAmt);
    CDMAmountRangeBoundaryType_To_AmountRangeBoundary1(CDMFromToAmountRangeTypeElm.ToAmount, FromToAmountRangeElm.ToAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericCardIDType_To_GenericIdentification1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericCardIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.CardBrandID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.CardBrandID</description>
					</parameterfield>
					<parameterfield>
						<name>GenericIdentification1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.CardBrnd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.CardBrnd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericCardIDTypeElm in CDMGenericCardIDType) {
    def GenericIdentification1Elm = GenericIdentification1.secAddElement();
    GenericIdentification1Elm.Id = CDMGenericCardIDTypeElm.schemeID;
    GenericIdentification1Elm.SchmeNm = CDMGenericCardIDTypeElm.schemeVersionID;
    GenericIdentification1Elm.SchmeNm = CDMGenericCardIDTypeElm.schemeAgencyID;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGenericCardIDType_To_GenericIdentification32" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGenericCardIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.ID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.ID</description>
					</parameterfield>
					<parameterfield>
						<name>GenericIdentification32</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Id</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGenericCardIDTypeElm in CDMGenericCardIDType) {
    def GenericIdentification32Elm = GenericIdentification32.secAddElement();
    GenericIdentification32Elm.Id = CDMGenericCardIDTypeElm.schemeID;
    GenericIdentification32Elm.Id = CDMGenericCardIDTypeElm.schemeVersionID;
    GenericIdentification32Elm.Id = CDMGenericCardIDTypeElm.schemeAgencyID;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMGroupHeaderType_To_GroupHeader58" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMGroupHeaderType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader</description>
					</parameterfield>
					<parameterfield>
						<name>GroupHeader58</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMGroupHeaderTypeElm in CDMGroupHeaderType) {
    def GroupHeader58Elm = GroupHeader58.secAddElement();
    GroupHeader58Elm.MsgId = CDMCodeSchemeToISOCode(CDMGroupHeaderTypeElm.MessageID);
    GroupHeader58Elm.CreDtTm = CDMGroupHeaderTypeElm.CreationDateTime;
    CDMPartyType_To_PartyIdentification43(CDMGroupHeaderTypeElm.MessageRecipient, GroupHeader58Elm.MsgRcpt);
    CDMPaginationType_To_Pagination(CDMGroupHeaderTypeElm.MessagePagination, GroupHeader58Elm.MsgPgntn);
    CDMOriginalBusinessQueryType_To_OriginalBusinessQuery1(CDMGroupHeaderTypeElm.OriginalBusinessQuery, GroupHeader58Elm.OrgnlBizQry);
    GroupHeader58Elm.AddtlInf = CDMGroupHeaderTypeElm.AdditionalInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMImpliedCurrencyAmountRangeChoiceType_To_ImpliedCurrencyAmountRangeChoice" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMImpliedCurrencyAmountRangeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.ValidityRange.Amount</description>
					</parameterfield>
					<parameterfield>
						<name>ImpliedCurrencyAmountRangeChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.VldtyRg.Amt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMImpliedCurrencyAmountRangeChoiceTypeElm in CDMImpliedCurrencyAmountRangeChoiceType) {
    def ImpliedCurrencyAmountRangeChoiceElm = ImpliedCurrencyAmountRangeChoice.secAddElement();
    CDMAmountRangeBoundaryType_To_AmountRangeBoundary1(CDMImpliedCurrencyAmountRangeChoiceTypeElm.FromAmount, ImpliedCurrencyAmountRangeChoiceElm.FrAmt);
    CDMAmountRangeBoundaryType_To_AmountRangeBoundary1(CDMImpliedCurrencyAmountRangeChoiceTypeElm.ToAmount, ImpliedCurrencyAmountRangeChoiceElm.ToAmt);
    CDMFromToAmountRangeType_To_FromToAmountRange(CDMImpliedCurrencyAmountRangeChoiceTypeElm.FromToAmount, ImpliedCurrencyAmountRangeChoiceElm.FrToAmt);
    ImpliedCurrencyAmountRangeChoiceElm.EQAmt = CDMImpliedCurrencyAmountRangeChoiceTypeElm.EqualAmount;
    ImpliedCurrencyAmountRangeChoiceElm.NEQAmt = CDMImpliedCurrencyAmountRangeChoiceTypeElm.NotEqualAmount;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMInterestRateType_To_Rate3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMInterestRateType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate</description>
					</parameterfield>
					<parameterfield>
						<name>Rate3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMInterestRateTypeElm in CDMInterestRateType) {
    def Rate3Elm = Rate3.secAddElement();
    CDMRateTypeChoiceType_To_RateType4Choice(CDMInterestRateTypeElm.Type, Rate3Elm.Tp);
    CDMCurrencyAndAmountRangeType_To_CurrencyAndAmountRange2(CDMInterestRateTypeElm.ValidityRange, Rate3Elm.VldtyRg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMInterestRecordType_To_InterestRecord1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMInterestRecordType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record</description>
					</parameterfield>
					<parameterfield>
						<name>InterestRecord1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMInterestRecordTypeElm in CDMInterestRecordType) {
    def InterestRecord1Elm = InterestRecord1.secAddElement();
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMInterestRecordTypeElm.Amount, InterestRecord1Elm.Amt);
    InterestRecord1Elm.CdtDbtInd = CDMCodeListToISOCode(CDMInterestRecordTypeElm.CreditDebitIndicatorCode);
    CDMTypeInterestType_To_InterestType1Choice(CDMInterestRecordTypeElm.TypeCode, InterestRecord1Elm.Tp);
    CDMInterestRateType_To_Rate3(CDMInterestRecordTypeElm.Rate, InterestRecord1Elm.Rate);
    CDMDateTimePeriodDetailsType_To_DateTimePeriodDetails(CDMInterestRecordTypeElm.FromToDate, InterestRecord1Elm.FrToDt);
    InterestRecord1Elm.Rsn = CDMInterestRecordTypeElm.Reason;
    CDMTaxChargesType_To_TaxCharges2(CDMInterestRecordTypeElm.Tax, InterestRecord1Elm.Tax);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMInterestTypeCodeType_To_InterestType1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMInterestTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Type</description>
					</parameterfield>
					<parameterfield>
						<name>InterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMInterestTypeCodeTypeElm in CDMInterestTypeCodeType) {
    def InterestType1ChoiceElm = InterestType1Choice.secAddElement();
    InterestType1ChoiceElm.Cd = CDMCodeListToISOCode (CDMInterestTypeCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMNumberAndSumOfTransactionsType_To_NumberAndSumOfTransactions2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMNumberAndSumOfTransactionsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalEntries</description>
					</parameterfield>
					<parameterfield>
						<name>NumberAndSumOfTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlNtries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMNumberAndSumOfTransactionsTypeElm in CDMNumberAndSumOfTransactionsType) {
    def NumberAndSumOfTransactions2Elm = NumberAndSumOfTransactions2.secAddElement();
    NumberAndSumOfTransactions2Elm.NbOfNtries = CDMNumberAndSumOfTransactionsTypeElm.NumberOfEntries;
    NumberAndSumOfTransactions2Elm.Sum = CDMNumberAndSumOfTransactionsTypeElm.Sum;
    NumberAndSumOfTransactions2Elm.TtlNetNtryAmt = CDMNumberAndSumOfTransactionsTypeElm.TotalNetEntryAmount;
    NumberAndSumOfTransactions2Elm.CdtDbtInd = CDMCodeListToISOCode(CDMNumberAndSumOfTransactionsTypeElm.CreditDebitIndicatorCode);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOriginalAndCurrentQuantitiesType_To_OriginalAndCurrentQuantities1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOriginalAndCurrentQuantitiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.OrgnlAndCurFaceAmt</description>
					</parameterfield>
					<parameterfield>
						<name>OriginalAndCurrentQuantities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.OrgnlAndCurFaceAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOriginalAndCurrentQuantitiesTypeElm in CDMOriginalAndCurrentQuantitiesType) {
    def OriginalAndCurrentQuantities1Elm = OriginalAndCurrentQuantities1.secAddElement();
    OriginalAndCurrentQuantities1Elm.FaceAmt = CDMOriginalAndCurrentQuantitiesTypeElm.FaceAmount;
    OriginalAndCurrentQuantities1Elm.AmtsdVal = CDMOriginalAndCurrentQuantitiesTypeElm.AmortisedValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMOriginalBusinessQueryType_To_OriginalBusinessQuery1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMOriginalBusinessQueryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.OriginalBusinessQuery</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.OriginalBusinessQuery</description>
					</parameterfield>
					<parameterfield>
						<name>OriginalBusinessQuery1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.OrgnlBizQry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.OrgnlBizQry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMOriginalBusinessQueryTypeElm in CDMOriginalBusinessQueryType) {
    def OriginalBusinessQuery1Elm = OriginalBusinessQuery1.secAddElement();
    OriginalBusinessQuery1Elm.MsgId = CDMOriginalBusinessQueryTypeElm.MessageID;
    OriginalBusinessQuery1Elm.MsgNmId = CDMOriginalBusinessQueryTypeElm.MessageNameID;
    OriginalBusinessQuery1Elm.CreDtTm = CDMOriginalBusinessQueryTypeElm.CreationDateTime;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaginationType_To_Pagination" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaginationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessagePagination</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessagePagination</description>
					</parameterfield>
					<parameterfield>
						<name>Pagination</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgPgntn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgPgntn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaginationTypeElm in CDMPaginationType) {
    def PaginationElm = Pagination.secAddElement();
    PaginationElm.PgNb = CDMPaginationTypeElm.PageNumber;
    PaginationElm.LastPgInd = CDMPaginationTypeElm.LastPageIndicator;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPartyIDType_To_Party11Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPartyIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient.ID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient.ID</description>
					</parameterfield>
					<parameterfield>
						<name>Party11Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt.Id</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt.Id</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPartyIDTypeElm in CDMPartyIDType) {
    def Party11ChoiceElm = Party11Choice.secAddElement();
    Party11ChoiceElm.OrgId.SecAddElement().AnyBIC = CDMCodeSchemeToISOCode (CDMPartyIDTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPartyType_To_PartyIdentification43" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPartyType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.GroupHeader.MessageRecipient</description>
					</parameterfield>
					<parameterfield>
						<name>PartyIdentification43</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.GrpHdr.MsgRcpt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPartyTypeElm in CDMPartyType) {
    def PartyIdentification43Elm = PartyIdentification43.secAddElement();
    PartyIdentification43Elm.Nm = CDMPartyTypeElm.Name;
    CDMPostalAddressType_To_PostalAddress6(CDMPartyTypeElm.PostalAddress, PartyIdentification43Elm.PstlAdr);
    CDMPartyIDType_To_Party11Choice(CDMPartyTypeElm.ID, PartyIdentification43Elm.Id);
    PartyIdentification43Elm.CtryOfRes = CDMCodeListToISOCode(CDMPartyTypeElm.CountryOfResidenceCode);
    CDMContactDetailsType_To_ContactDetails2(CDMPartyTypeElm.ContactDetails, PartyIdentification43Elm.CtctDtls);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaymentCardType_To_PaymentCard4" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaymentCardType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card</description>
					</parameterfield>
					<parameterfield>
						<name>PaymentCard4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaymentCardTypeElm in CDMPaymentCardType) {
    def PaymentCard4Elm = PaymentCard4.secAddElement();
    CDMPlainCardDataType_To_PlainCardData1(CDMPaymentCardTypeElm.PlainCardData, PaymentCard4Elm.PlainCardData);
    PaymentCard4Elm.CardCtryCd = CDMCodeListToISOCode(CDMPaymentCardTypeElm.CardCountryCode);
    CDMGenericCardIDType_To_GenericIdentification1(CDMPaymentCardTypeElm.CardBrandID, PaymentCard4Elm.CardBrnd);
    PaymentCard4Elm.AddtlCardData = CDMPaymentCardTypeElm.AdditionalCardData;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPaymentReturnReasonType_To_PaymentReturnReason2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPaymentReturnReasonType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation</description>
					</parameterfield>
					<parameterfield>
						<name>PaymentReturnReason2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPaymentReturnReasonTypeElm in CDMPaymentReturnReasonType) {
    def PaymentReturnReason2Elm = PaymentReturnReason2.secAddElement();
    CDMBankTransactionType_To_PartyIdentification43(CDMPaymentReturnReasonTypeElm.OriginalBankTransaction, PaymentReturnReason2Elm.OrgnlBkTxCd);
    CDMPartyType_To_PartyIdentification43(CDMPaymentReturnReasonTypeElm.Originator, PaymentReturnReason2Elm.Orgtr);
    CDMReturnReasonCodeType_To_ReturnReason5Choice(CDMPaymentReturnReasonTypeElm.ReasonCode, PaymentReturnReason2Elm.Rsn);
    CDMstring_To_Max105Text(CDMPaymentReturnReasonTypeElm.AdditionalInformation, PaymentReturnReason2Elm.AddtlInf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPlainCardDataType_To_PlainCardData1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPlainCardDataType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData</description>
					</parameterfield>
					<parameterfield>
						<name>PlainCardData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPlainCardDataTypeElm in CDMPlainCardDataType) {
    def PlainCardData1Elm = PlainCardData1.secAddElement();
    PlainCardData1Elm.CardSeqNb = CDMPlainCardDataTypeElm.CardSequenceNumber;
    PlainCardData1Elm.FctvDt = CDMPlainCardDataTypeElm.EffectiveDate;
    PlainCardData1Elm.XpryDt = CDMPlainCardDataTypeElm.ExpiryDate;
    PlainCardData1Elm.SvcCd = CDMCodeListToISOCode(CDMPlainCardDataTypeElm.ServiceCode);
    CDMTrackDataType_To_TrackData1(CDMPlainCardDataTypeElm.TrackData, PlainCardData1Elm.TrckData);
    CDMCardSecurityInformationType_To_CardSecurityInformation1(CDMPlainCardDataTypeElm.CardSecurityCode, PlainCardData1Elm.CardSctyCd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPointOfInteractionCapabilitiesType_To_PointOfInteractionCapabilities1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPointOfInteractionCapabilitiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Capabilities</description>
					</parameterfield>
					<parameterfield>
						<name>PointOfInteractionCapabilities1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cpblties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPointOfInteractionCapabilitiesTypeElm in CDMPointOfInteractionCapabilitiesType) {
    def PointOfInteractionCapabilities1Elm = PointOfInteractionCapabilities1.secAddElement();
    CDMCardDataReadingCodeType_To_CardDataReading1Code(CDMPointOfInteractionCapabilitiesTypeElm.CardReadingCapabilitiesCode, PointOfInteractionCapabilities1Elm.CardRdngCpblties);
    CDMCardholderVerificationCapabilityCodeType_To_CardholderVerificationCapability1Code(CDMPointOfInteractionCapabilitiesTypeElm.CardholderVerificationCapabilitiesCode, PointOfInteractionCapabilities1Elm.CrdhldrVrfctnCpblties);
    PointOfInteractionCapabilities1Elm.OnLineCpblties = CDMCodeListToISOCode(CDMPointOfInteractionCapabilitiesTypeElm.OnLineCapabilitiesCode);
    CDMDisplayCapabilitiesType_To_DisplayCapabilities1(CDMPointOfInteractionCapabilitiesTypeElm.DisplayCapabilities, PointOfInteractionCapabilities1Elm.DispCpblties);
    if (IsnotNull (CDMPointOfInteractionCapabilitiesTypeElm.PrintLineWidth))
	    PointOfInteractionCapabilities1Elm.PrtLineWidth = toText(CDMPointOfInteractionCapabilitiesTypeElm.PrintLineWidth);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPointOfInteractionComponentType_To_PointOfInteractionComponent1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPointOfInteractionComponentType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Component</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI.Component</description>
					</parameterfield>
					<parameterfield>
						<name>PointOfInteractionComponent1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cmpnt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI.Cmpnt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPointOfInteractionComponentTypeElm in CDMPointOfInteractionComponentType) {
    def PointOfInteractionComponent1Elm = PointOfInteractionComponent1.secAddElement();
    PointOfInteractionComponent1Elm.POICmpntTp = CDMCodeListToISOCode(CDMPointOfInteractionComponentTypeElm.POIComponentType);
    PointOfInteractionComponent1Elm.ManfctrId = CDMPointOfInteractionComponentTypeElm.ManufacturerID;
    PointOfInteractionComponent1Elm.Mdl = CDMPointOfInteractionComponentTypeElm.Model;
    PointOfInteractionComponent1Elm.VrsnNb = CDMPointOfInteractionComponentTypeElm.VersionNumber;
    PointOfInteractionComponent1Elm.SrlNb = CDMPointOfInteractionComponentTypeElm.SerialNumber;
    CDMstring_To_Max70Text(CDMPointOfInteractionComponentTypeElm.ApprovalNumber, PointOfInteractionComponent1Elm.ApprvlNb);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPointOfInteractionType_To_PointOfInteraction1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPointOfInteractionType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.POI</description>
					</parameterfield>
					<parameterfield>
						<name>PointOfInteraction1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.POI</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPointOfInteractionTypeElm in CDMPointOfInteractionType) {
    def PointOfInteraction1Elm = PointOfInteraction1.secAddElement();
    CDMGenericCardIDType_To_GenericIdentification32(CDMPointOfInteractionTypeElm.ID, PointOfInteraction1Elm.Id);
    PointOfInteraction1Elm.SysNm = CDMPointOfInteractionTypeElm.SystemName;
    PointOfInteraction1Elm.GrpId = CDMPointOfInteractionTypeElm.GroupID;
    CDMPointOfInteractionCapabilitiesType_To_PointOfInteractionCapabilities1(CDMPointOfInteractionTypeElm.Capabilities, PointOfInteraction1Elm.Cpblties);
    CDMPointOfInteractionComponentType_To_PointOfInteractionComponent1(CDMPointOfInteractionTypeElm.Component, PointOfInteraction1Elm.Cmpnt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPriceType_To_Price2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPriceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice</description>
					</parameterfield>
					<parameterfield>
						<name>Price2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPriceTypeElm in CDMPriceType) {
    def Price2Elm = Price2.secAddElement();
   	CDMYieldedOrValueTypeChoiceType_To_YieldedOrValueType1Choice(CDMPriceTypeElm.Type, Price2Elm.Tp);
   	CDMPriceRateOrAmountChoiceType_To_PriceRateOrAmountChoice(CDMPriceTypeElm.Value, Price2Elm.Val);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProductType_To_Product2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProductType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction.Individual.Product</description>
					</parameterfield>
					<parameterfield>
						<name>Product2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx.Indv.Pdct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProductTypeElm in CDMProductType) {
    def Product2Elm = Product2.secAddElement();
    Product2Elm.PdctCd = CDMProductTypeElm.ProductCode;
    Product2Elm.UnitOfMeasr = CDMCodeListToISOCode(CDMProductTypeElm.UnitOfMeasure);
    Product2Elm.PdctQty = CDMProductTypeElm.ProductQuantity;
    Product2Elm.UnitPric = CDMProductTypeElm.UnitPrice;
    Product2Elm.PdctAmt = CDMProductTypeElm.ProductAmount;
    Product2Elm.TaxTp = CDMProductTypeElm.TaxType;
    Product2Elm.AddtlPdctInf = CDMProductTypeElm.AdditionalProductInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryAgentType_To_ProprietaryAgent3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryAgentType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryAgent3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryAgentTypeElm in CDMProprietaryAgentType) {
    def ProprietaryAgent3Elm = ProprietaryAgent3.secAddElement();
    ProprietaryAgent3Elm.Tp = CDMProprietaryAgentTypeElm.Type;
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMProprietaryAgentTypeElm.Agent, ProprietaryAgent3Elm.Agt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryAmountAndCurrencyExchangeDetailsType_To_AmountAndCurrencyExchangeDetails4" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryAmountAndCurrencyExchangeDetailsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.ProprietaryAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.AmountDetails.ProprietaryAmount</description>
					</parameterfield>
					<parameterfield>
						<name>AmountAndCurrencyExchangeDetails4</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.PrtryAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.AmtDtls.PrtryAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm in CDMProprietaryAmountAndCurrencyExchangeDetailsType) {
    def AmountAndCurrencyExchangeDetails4Elm = AmountAndCurrencyExchangeDetails4.secAddElement();
    AmountAndCurrencyExchangeDetails4Elm.Tp = CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm.Type;
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm.Amount, AmountAndCurrencyExchangeDetails4Elm.Amt);
    CDMCurrencyExchangeType_To_CurrencyExchange5(CDMProprietaryAmountAndCurrencyExchangeDetailsTypeElm.CurrencyExchange, AmountAndCurrencyExchangeDetails4Elm.CcyXchg);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryDateType_To_ProprietaryDate2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryDateType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryDate2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryDateTypeElm in CDMProprietaryDateType) {
    def ProprietaryDate2Elm = ProprietaryDate2.secAddElement();
    ProprietaryDate2Elm.Tp = CDMProprietaryDateTypeElm.Type;
    CDMDateAndDateTimeChoiceType_To_DateAndDateTimeChoice(CDMProprietaryDateTypeElm.Date, ProprietaryDate2Elm.Dt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryPartyType_To_ProprietaryParty3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryPartyType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryParty3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryPartyTypeElm in CDMProprietaryPartyType) {
    def ProprietaryParty3Elm = ProprietaryParty3.secAddElement();
    ProprietaryParty3Elm.Tp = CDMProprietaryPartyTypeElm.Type;
    CDMPartyType_To_PartyIdentification43(CDMProprietaryPartyTypeElm.Party, ProprietaryParty3Elm.Pty);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryPriceType_To_ProprietaryPrice2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryPriceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryPrice2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryPriceTypeElm in CDMProprietaryPriceType) {
    def ProprietaryPrice2Elm = ProprietaryPrice2.secAddElement();
    ProprietaryPrice2Elm.Tp = CDMProprietaryPriceTypeElm.Type;
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMProprietaryPriceTypeElm.PriceAmount, ProprietaryPrice2Elm.Pric);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMProprietaryQuantityType_To_ProprietaryQuantity1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMProprietaryQuantityType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Proprietary</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryQuantity1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMProprietaryQuantityTypeElm in CDMProprietaryQuantityType) {
    def ProprietaryQuantity1Elm = ProprietaryQuantity1.secAddElement();
    ProprietaryQuantity1Elm.Tp = CDMProprietaryQuantityTypeElm.Type;
    ProprietaryQuantity1Elm.Qty = CDMProprietaryQuantityTypeElm.Quantity;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReferencingIDType_To_ProprietaryReference1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReferencingIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References.ProprietaryReferenceID</description>
					</parameterfield>
					<parameterfield>
						<name>ProprietaryReference1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs.Prtry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs.Prtry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReferencingIDTypeElm in CDMReferencingIDType) {
    def ProprietaryReference1Elm = ProprietaryReference1.secAddElement();
    //TODO - toVerify
    ProprietaryReference1Elm.Ref = CDMCodeSchemeToISOCode (CDMReferencingIDTypeElm);
    ProprietaryReference1Elm.Tp = "NOT_SPECIFIED";
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReferredDocumentType_To_ReferredDocumentInformation3" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReferredDocumentType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentInformation</description>
					</parameterfield>
					<parameterfield>
						<name>ReferredDocumentInformation3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReferredDocumentTypeElm in CDMReferredDocumentType) {
    def ReferredDocumentInformation3Elm = ReferredDocumentInformation3.secAddElement();
    CDMReferredDocumentTypeCodeType_To_ReferredDocumentType2(CDMReferredDocumentTypeElm.TypeCode, ReferredDocumentInformation3Elm.Tp);
    ReferredDocumentInformation3Elm.Nb = CDMReferredDocumentTypeElm.Number;
    ReferredDocumentInformation3Elm.RltdDt = CDMReferredDocumentTypeElm.RelatedDate;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRelatedCashAccountType_To_CashAccount24" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRelatedCashAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.RelatedAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.RelatedAccount</description>
					</parameterfield>
					<parameterfield>
						<name>CashAccount24</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RltdAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RltdAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRelatedCashAccountTypeElm in CDMRelatedCashAccountType) {
    def CashAccount24Elm = CashAccount24.secAddElement();
    CDMAccountIDType_To_AccountIdentification4Choice(CDMRelatedCashAccountTypeElm.ID, CashAccount24Elm.Id);
    CDMCashAccountTypeCodeType_To_CashAccountType2Choice(CDMRelatedCashAccountTypeElm.Type, CashAccount24Elm.Tp);
    CashAccount24Elm.Ccy = CDMCodeListToISOCode(CDMRelatedCashAccountTypeElm.Currency);
    CashAccount24Elm.Nm = CDMRelatedCashAccountTypeElm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceAmountType_To_RemittanceAmount2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceAmount2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceAmountTypeElm in CDMRemittanceAmountType) {
    def RemittanceAmount2Elm = RemittanceAmount2.secAddElement();
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmountTypeElm.DuePayableAmount, RemittanceAmount2Elm.DuePyblAmt);
    CDMDiscountTypeAndAmountType_To_DiscountAmountAndType1(CDMRemittanceAmountTypeElm.DiscountAppliedAmount, RemittanceAmount2Elm.DscntApldAmt);
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmountTypeElm.CreditNoteAmount, RemittanceAmount2Elm.CdtNoteAmt);
    CDMTaxTypeAndAmountType_To_TaxAmountAndType1(CDMRemittanceAmountTypeElm.TaxAmount, RemittanceAmount2Elm.TaxAmt);
    CDMDocumentAdjustmentType_To_DocumentAdjustment1(CDMRemittanceAmountTypeElm.AdjustmentAmountAndReason, RemittanceAmount2Elm.AdjstmntAmtAndRsn);
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMRemittanceAmountTypeElm.RemittedAmount, RemittanceAmount2Elm.RmtdAmt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRemittanceInformationType_To_RemittanceInformation7" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRemittanceInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation</description>
					</parameterfield>
					<parameterfield>
						<name>RemittanceInformation7</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRemittanceInformationTypeElm in CDMRemittanceInformationType) {
    def RemittanceInformation7Elm = RemittanceInformation7.secAddElement();
    CDMstring_To_Max140Text(CDMRemittanceInformationTypeElm.Unstructured, RemittanceInformation7Elm.Ustrd);
    CDMStructuredRemittanceInformationType_To_StructuredRemittanceInformation9(CDMRemittanceInformationTypeElm.Structured, RemittanceInformation7Elm.Strd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReportEntryType_To_ReportEntry3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReportEntryType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry</description>
					</parameterfield>
					<parameterfield>
						<name>ReportEntry3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReportEntryTypeElm in CDMReportEntryType) {
    def ReportEntry3Elm = ReportEntry3.secAddElement();
    ReportEntry3Elm.NtryRef = CDMReportEntryTypeElm.EntryReference;
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMReportEntryTypeElm.Amount, ReportEntry3Elm.Amt);
    ReportEntry3Elm.CdtDbtInd = CDMCodeListToISOCode(CDMReportEntryTypeElm.CreditDebitIndicatorCode);
    ReportEntry3Elm.RvslInd = CDMReportEntryTypeElm.ReversalIndicator;
    ReportEntry3Elm.Sts = CDMCodeListToISOCode(CDMReportEntryTypeElm.Status);
    if (CDMReportEntryTypeElm.EntryGroup1.length() > 0) {
    	def srcSec = CDMReportEntryTypeElm.EntryGroup1[0];
    	def destSec = ReportEntry3Elm.BookgDt.SecAddElement();
    	destSec.Dt = srcSec.BookingDate;
    	destSec.DtTm = srcSec.BookingDateTime;
    }
    if (CDMReportEntryTypeElm.EntryGroup2.length() > 0) {
    	def srcSec = CDMReportEntryTypeElm.EntryGroup2[0];
    	def destSec = ReportEntry3Elm.ValDt.SecAddElement();
    	destSec.Dt = srcSec.ValueDate;
    	destSec.DtTm = srcSec.ValueDateTime;
    }
    ReportEntry3Elm.AcctSvcrRef = CDMReportEntryTypeElm.AccountServicerReference;
    CDMCashBalanceAvailabilityType_To_CashBalanceAvailability2(CDMReportEntryTypeElm.Availability, ReportEntry3Elm.Avlbty);
    CDMBankTransactionType_To_BankTransactionCodeStructure4 (CDMReportEntryTypeElm.BankTransaction, ReportEntry3Elm.BkTxCd);
    ReportEntry3Elm.ComssnWvrInd = CDMReportEntryTypeElm.CommissionWaiverIndicator;
    CDMAdditionalMessageIndicatorType_To_ActiveOrHistoricCurrencyAndAmount(CDMReportEntryTypeElm.AdditionalMessageIndicator, ReportEntry3Elm.Amt);
    CDMAmountAndCurrencyExchangeType_To_AmountAndCurrencyExchange3(CDMReportEntryTypeElm.AmountDetails, ReportEntry3Elm.AmtDtls);
    CDMChargesType_To_Charges3(CDMReportEntryTypeElm.Charges, ReportEntry3Elm.Chrgs);
    CDMTechnicalInputChannelCodeType_To_TechnicalInputChannel1Choice(CDMReportEntryTypeElm.TechnicalInputChannel, ReportEntry3Elm.TechInptChanl);
    CDMTransactionInterestType_To_TransactionInterest3(CDMReportEntryTypeElm.Interest, ReportEntry3Elm.Intrst);
    CDMCardEntryType_To_CardEntry1(CDMReportEntryTypeElm.CardTransaction, ReportEntry3Elm.CardTx);
    CDMEntryDetailsType_To_EntryDetails2(CDMReportEntryTypeElm.EntryDetails, ReportEntry3Elm.NtryDtls);
    ReportEntry3Elm.AddtlNtryInf = CDMReportEntryTypeElm.AdditionalEntryInformation;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReportingSourceCodeType_To_ReportingSource1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReportingSourceCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.ReportingSource</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.ReportingSource</description>
					</parameterfield>
					<parameterfield>
						<name>ReportingSource1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RptgSrc</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.RptgSrc</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReportingSourceCodeTypeElm in CDMReportingSourceCodeType) {
    def ReportingSource1ChoiceElm = ReportingSource1Choice.secAddElement();
    ReportingSource1ChoiceElm.Cd = CDMCodeListToISOCode (CDMReportingSourceCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMReturnReasonCodeType_To_ReturnReason5Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMReturnReasonCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.ReasonCode</description>
					</parameterfield>
					<parameterfield>
						<name>ReturnReason5Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.Rsn</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMReturnReasonCodeTypeElm in CDMReturnReasonCodeType) {
    def ReturnReason5ChoiceElm = ReturnReason5Choice.secAddElement();
    ReturnReason5ChoiceElm.Cd = CDMCodeListToISOCode (CDMReturnReasonCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSecuritiesAccountType_To_SecuritiesAccount13" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSecuritiesAccountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.SafekeepingAccount</description>
					</parameterfield>
					<parameterfield>
						<name>SecuritiesAccount13</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.SfkpgAcct</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.SfkpgAcct</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSecuritiesAccountTypeElm in CDMSecuritiesAccountType) {
    def SecuritiesAccount13Elm = SecuritiesAccount13.secAddElement();
    SecuritiesAccount13Elm.Id = CDMCodeSchemeToISOCode(CDMSecuritiesAccountTypeElm.ID);
    SecuritiesAccount13Elm.Tp.SecAddElement().Id = CDMCodeSchemeToISOCode(CDMSecuritiesAccountTypeElm.TypeID);
    SecuritiesAccount13Elm.Nm = CDMSecuritiesAccountTypeElm.Name;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSecurityIDType_To_SecurityIdentification14" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSecurityIDType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.FinancialInstrumentID</description>
					</parameterfield>
					<parameterfield>
						<name>SecurityIdentification14</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.FinInstrmId</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.FinInstrmId</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSecurityIDTypeElm in CDMSecurityIDType) {
    def SecurityIdentification14Elm = SecurityIdentification14.secAddElement();
    SecurityIdentification14Elm.ISIN = CDMCodeSchemeToISOCode (CDMSecurityIDTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMstring_To_Max105Text" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMstring</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.ReturnInformation.AdditionalInformation</description>
					</parameterfield>
					<parameterfield>
						<name>Max105Text</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RtrInf.AddtlInf</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMstringElm in CDMstring) {
    def Max105TextElm = Max105Text.secAddElement();
    Max105TextElm.Value = CDMstringElm.Value;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMStructuredRemittanceInformationType_To_StructuredRemittanceInformation9" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMStructuredRemittanceInformationType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured</description>
					</parameterfield>
					<parameterfield>
						<name>StructuredRemittanceInformation9</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMStructuredRemittanceInformationTypeElm in CDMStructuredRemittanceInformationType) {
    def StructuredRemittanceInformation9Elm = StructuredRemittanceInformation9.secAddElement();
    CDMReferredDocumentType_To_ReferredDocumentInformation3(CDMStructuredRemittanceInformationTypeElm.ReferredDocumentInformation, StructuredRemittanceInformation9Elm.RfrdDocInf);
    CDMRemittanceAmountType_To_RemittanceAmount2(CDMStructuredRemittanceInformationTypeElm.ReferredDocumentAmount, StructuredRemittanceInformation9Elm.RfrdDocAmt);
    CDMCreditorReferenceInformationType_To_CreditorReferenceInformation2(CDMStructuredRemittanceInformationTypeElm.CreditorReferenceInformation, StructuredRemittanceInformation9Elm.CdtrRefInf);
    CDMPartyType_To_PartyIdentification43(CDMStructuredRemittanceInformationTypeElm.Invoicer, StructuredRemittanceInformation9Elm.Invcr);
    CDMPartyType_To_PartyIdentification43(CDMStructuredRemittanceInformationTypeElm.Invoicee, StructuredRemittanceInformation9Elm.Invcee);
    CDMstring_To_Max140Text(CDMStructuredRemittanceInformationTypeElm.AdditionalRemittanceInformation, StructuredRemittanceInformation9Elm.AddtlRmtInf);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSupplementaryDataEnvelopeType_To_SupplementaryDataEnvelope1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSupplementaryDataEnvelopeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.SupplementaryData.Envelope</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.SupplementaryData.Envelope</description>
					</parameterfield>
					<parameterfield>
						<name>SupplementaryDataEnvelope1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData.Envlp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData.Envlp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSupplementaryDataEnvelopeTypeElm in CDMSupplementaryDataEnvelopeType) {
    def SupplementaryDataEnvelope1Elm = SupplementaryDataEnvelope1.secAddElement();
    copy(CDMSupplementaryDataEnvelopeTypeElm.any, SupplementaryDataEnvelope1Elm.any);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMSupplementaryDataType_To_SupplementaryData1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMSupplementaryDataType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.SupplementaryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.SupplementaryData</description>
					</parameterfield>
					<parameterfield>
						<name>SupplementaryData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.SplmtryData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMSupplementaryDataTypeElm in CDMSupplementaryDataType) {
    def SupplementaryData1Elm = SupplementaryData1.secAddElement();
    SupplementaryData1Elm.PlcAndNm = CDMSupplementaryDataTypeElm.PlaceAndName;
    CDMSupplementaryDataEnvelopeType_To_SupplementaryDataEnvelope1(CDMSupplementaryDataTypeElm.Envelope, SupplementaryData1Elm.Envlp);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxAmountTypeCodeType_To_TaxAmountType1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxAmountTypeCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount.TypeCode</description>
					</parameterfield>
					<parameterfield>
						<name>TaxAmountType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxAmountTypeCodeTypeElm in CDMTaxAmountTypeCodeType) {
    def TaxAmountType1ChoiceElm = TaxAmountType1Choice.secAddElement();
    TaxAmountType1ChoiceElm.Cd = CDMCodeListToISOCode (CDMTaxAmountTypeCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxChargesType_To_TaxCharges2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxChargesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Charges.Record.Tax</description>
					</parameterfield>
					<parameterfield>
						<name>TaxCharges2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tax</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Chrgs.Rcrd.Tax</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxChargesTypeElm in CDMTaxChargesType) {
    def TaxCharges2Elm = TaxCharges2.secAddElement();
    TaxCharges2Elm.Id = CDMCodeSchemeToISOCode(CDMTaxChargesTypeElm.ID);
    TaxCharges2Elm.Rate = CDMTaxChargesTypeElm.Rate;
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxChargesTypeElm.Amount, TaxCharges2Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTaxTypeAndAmountType_To_TaxAmountAndType1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTaxTypeAndAmountType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RemittanceInformation.Structured.ReferredDocumentAmount.TaxAmount</description>
					</parameterfield>
					<parameterfield>
						<name>TaxAmountAndType1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RmtInf.Strd.RfrdDocAmt.TaxAmt</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTaxTypeAndAmountTypeElm in CDMTaxTypeAndAmountType) {
    def TaxAmountAndType1Elm = TaxAmountAndType1.secAddElement();
    CDMTaxAmountTypeCodeType_To_TaxAmountType1Choice(CDMTaxTypeAndAmountTypeElm.TypeCode, TaxAmountAndType1Elm.Tp);
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMTaxTypeAndAmountTypeElm.Amount, TaxAmountAndType1Elm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTechnicalInputChannelCodeType_To_TechnicalInputChannel1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTechnicalInputChannelCodeType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.TechnicalInputChannel</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.TechnicalInputChannel</description>
					</parameterfield>
					<parameterfield>
						<name>TechnicalInputChannel1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.TechInptChanl</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.TechInptChanl</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTechnicalInputChannelCodeTypeElm in CDMTechnicalInputChannelCodeType) {
    def TechnicalInputChannel1ChoiceElm = TechnicalInputChannel1Choice.secAddElement();
    TechnicalInputChannel1ChoiceElm.Cd = CDMCodeListToISOCode (CDMTechnicalInputChannelCodeTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTotalCreditDebitTransactionsType_To_NumberAndSumOfTransactions1" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTotalCreditDebitTransactionsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalCreditEntries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary.TotalCreditEntries</description>
					</parameterfield>
					<parameterfield>
						<name>NumberAndSumOfTransactions1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlCdtNtries</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry.TtlCdtNtries</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTotalCreditDebitTransactionsTypeElm in CDMTotalCreditDebitTransactionsType) {
    def NumberAndSumOfTransactions1Elm = NumberAndSumOfTransactions1.secAddElement();
    NumberAndSumOfTransactions1Elm.NbOfNtries = CDMTotalCreditDebitTransactionsTypeElm.NumberOfEntries;
    NumberAndSumOfTransactions1Elm.Sum = CDMTotalCreditDebitTransactionsTypeElm.Sum;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTotalTransactionsType_To_TotalTransactions2" type="FormulaFunctionDef">
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTotalTransactionsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.TransactionsSummary</description>
					</parameterfield>
					<parameterfield>
						<name>TotalTransactions2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.TxsSummry</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTotalTransactionsTypeElm in CDMTotalTransactionsType) {
    def TotalTransactions2Elm = TotalTransactions2.secAddElement();
    CDMNumberAndSumOfTransactionsType_To_NumberAndSumOfTransactions2(CDMTotalTransactionsTypeElm.TotalEntries, TotalTransactions2Elm.TtlNtries);
    CDMTotalCreditDebitTransactionsType_To_NumberAndSumOfTransactions1(CDMTotalTransactionsTypeElm.TotalCreditEntries, TotalTransactions2Elm.TtlCdtNtries);
    CDMTotalCreditDebitTransactionsType_To_NumberAndSumOfTransactions1(CDMTotalTransactionsTypeElm.TotalDebitEntries, TotalTransactions2Elm.TtlDbtNtries);
    CDMBankTransactionCodeTotalsType_To_TotalsPerBankTransactionCode2(CDMTotalTransactionsTypeElm.TotalEntriesPerBankTransactionCode, TotalTransactions2Elm.TtlNtriesPerBkTxCd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTrackDataType_To_TrackData1" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTrackDataType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.TrackData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.CardTransaction.Card.PlainCardData.TrackData</description>
					</parameterfield>
					<parameterfield>
						<name>TrackData1</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.TrckData</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.CardTx.Card.PlainCardData.TrckData</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTrackDataTypeElm in CDMTrackDataType) {
    def TrackData1Elm = TrackData1.secAddElement();
    TrackData1Elm.TrckNb = CDMTrackDataTypeElm.TrackNumber;
    TrackData1Elm.TrckVal = CDMTrackDataTypeElm.TrackValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionAgentsType_To_TransactionAgents3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionAgentsType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedAgents</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionAgents3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdAgts</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionAgentsTypeElm in CDMTransactionAgentsType) {
    def TransactionAgents3Elm = TransactionAgents3.secAddElement();
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.DebtorAgent, TransactionAgents3Elm.DbtrAgt);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.CreditorAgent, TransactionAgents3Elm.CdtrAgt);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.FirstIntermediaryAgent, TransactionAgents3Elm.IntrmyAgt1);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.SecondIntermediaryAgent, TransactionAgents3Elm.IntrmyAgt2);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.ThirdIntermediaryAgent, TransactionAgents3Elm.IntrmyAgt3);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.ReceivingAgent, TransactionAgents3Elm.RcvgAgt);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.DeliveringAgent, TransactionAgents3Elm.DlvrgAgt);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.IssuingAgent, TransactionAgents3Elm.IssgAgt);
    CDMBranchAndFinancialInstitutionType_To_BranchAndFinancialInstitutionIdentification5(CDMTransactionAgentsTypeElm.SettlementPlace, TransactionAgents3Elm.SttlmPlc);
    CDMProprietaryAgentType_To_ProprietaryAgent3(CDMTransactionAgentsTypeElm.Proprietary, TransactionAgents3Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionDatesType_To_TransactionDates2" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionDatesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedDates</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionDates2</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdDts</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionDatesTypeElm in CDMTransactionDatesType) {
    def TransactionDates2Elm = TransactionDates2.secAddElement();
    TransactionDates2Elm.AccptncDtTm = CDMTransactionDatesTypeElm.AcceptanceDateTime;
    TransactionDates2Elm.TradActvtyCtrctlSttlmDt = CDMTransactionDatesTypeElm.TradeActivityContractualSettlementDate;
    TransactionDates2Elm.TradDt = CDMTransactionDatesTypeElm.TradeDate;
    TransactionDates2Elm.IntrBkSttlmDt = CDMTransactionDatesTypeElm.InterbankSettlementDate;
    TransactionDates2Elm.StartDt = CDMTransactionDatesTypeElm.StartDate;
    TransactionDates2Elm.EndDt = CDMTransactionDatesTypeElm.EndDate;
    TransactionDates2Elm.TxDtTm = CDMTransactionDatesTypeElm.TransactionDateTime;
    CDMProprietaryDateType_To_ProprietaryDate2(CDMTransactionDatesTypeElm.Proprietary, TransactionDates2Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionInterestType_To_TransactionInterest3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionInterestType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionInterest3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionInterestTypeElm in CDMTransactionInterestType) {
    def TransactionInterest3Elm = TransactionInterest3.secAddElement();
    CDMAmountType_To_ActiveOrHistoricCurrencyAndAmount(CDMTransactionInterestTypeElm.TotalInterestAndTaxAmount, TransactionInterest3Elm.TtlIntrstAndTaxAmt);
    CDMInterestRecordType_To_InterestRecord1(CDMTransactionInterestTypeElm.Record, TransactionInterest3Elm.Rcrd);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionPartiesType_To_TransactionParties3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionPartiesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedParties</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionParties3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionPartiesTypeElm in CDMTransactionPartiesType) {
    def TransactionParties3Elm = TransactionParties3.secAddElement();
    CDMPartyType_To_PartyIdentification43(CDMTransactionPartiesTypeElm.InitiatingParty, TransactionParties3Elm.InitgPty);
    CDMPartyType_To_PartyIdentification43(CDMTransactionPartiesTypeElm.Debtor, TransactionParties3Elm.Dbtr);
    CDMCashAccountType_To_CashAccount24(CDMTransactionPartiesTypeElm.DebtorAccount, TransactionParties3Elm.DbtrAcct);
    CDMPartyType_To_PartyIdentification43(CDMTransactionPartiesTypeElm.UltimateDebtor, TransactionParties3Elm.UltmtDbtr);
    CDMPartyType_To_PartyIdentification43(CDMTransactionPartiesTypeElm.Creditor, TransactionParties3Elm.Cdtr);
    CDMCashAccountType_To_CashAccount24(CDMTransactionPartiesTypeElm.CreditorAccount, TransactionParties3Elm.CdtrAcct);
    CDMPartyType_To_PartyIdentification43(CDMTransactionPartiesTypeElm.UltimateCreditor, TransactionParties3Elm.UltmtCdtr);
    CDMPartyType_To_PartyIdentification43(CDMTransactionPartiesTypeElm.TradingParty, TransactionParties3Elm.TradgPty);
    CDMProprietaryPartyType_To_ProprietaryParty3(CDMTransactionPartiesTypeElm.Proprietary, TransactionParties3Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionPriceChoiceType_To_TransactionPrice3Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionPriceChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionPrice3Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionPriceChoiceTypeElm in CDMTransactionPriceChoiceType) {
    def TransactionPrice3ChoiceElm = TransactionPrice3Choice.secAddElement();
    CDMPriceType_To_Price2(CDMTransactionPriceChoiceTypeElm.DealPrice, TransactionPrice3ChoiceElm.DealPric);
    CDMProprietaryPriceType_To_ProprietaryPrice2(CDMTransactionPriceChoiceTypeElm.Proprietary, TransactionPrice3ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionQuantitiesChoiceType_To_TransactionQuantities2Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionQuantitiesChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionQuantities2Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionQuantitiesChoiceTypeElm in CDMTransactionQuantitiesChoiceType) {
    def TransactionQuantities2ChoiceElm = TransactionQuantities2Choice.secAddElement();
    CDMFinancialInstrumentQuantityChoiceType_To_FinancialInstrumentQuantityChoice(CDMTransactionQuantitiesChoiceTypeElm.Quantity, TransactionQuantities2ChoiceElm.Qty);
    CDMOriginalAndCurrentQuantitiesType_To_OriginalAndCurrentQuantities1(CDMTransactionQuantitiesChoiceTypeElm.OrgnlAndCurFaceAmt, TransactionQuantities2ChoiceElm.OrgnlAndCurFaceAmt);
    CDMProprietaryQuantityType_To_ProprietaryQuantity1(CDMTransactionQuantitiesChoiceTypeElm.Proprietary, TransactionQuantities2ChoiceElm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTransactionReferencesType_To_TransactionReferences3" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTransactionReferencesType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.References</description>
					</parameterfield>
					<parameterfield>
						<name>TransactionReferences3</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.Refs</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTransactionReferencesTypeElm in CDMTransactionReferencesType) {
    def TransactionReferences3Elm = TransactionReferences3.secAddElement();
    TransactionReferences3Elm.MsgId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.MessageID);
    TransactionReferences3Elm.AcctSvcrRef = CDMTransactionReferencesTypeElm.AccountServicerReference;
    TransactionReferences3Elm.TxId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.TransactionID);
    TransactionReferences3Elm.PmtInfId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.PaymentInformationID);
    TransactionReferences3Elm.InstrId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.InstructionID);
    TransactionReferences3Elm.EndToEndId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.EndToEndID);
    TransactionReferences3Elm.MndtId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.MandateID);
    TransactionReferences3Elm.ChqNb = CDMTransactionReferencesTypeElm.ChequeNumber;
    TransactionReferences3Elm.ClrSysRef = CDMTransactionReferencesTypeElm.ClearingSystemReference;
    TransactionReferences3Elm.AcctOwnrTxId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.AccountOwnerTransactionID);
    TransactionReferences3Elm.AcctSvcrTxId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.AccountServicerTransactionID);
    TransactionReferences3Elm.MktInfrstrctrTxId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.MarketInfrastructureTransactionID);
    TransactionReferences3Elm.PrcgId = CDMCodeSchemeToISOCode(CDMTransactionReferencesTypeElm.ProcessingID);
    CDMReferencingIDType_To_ProprietaryReference1(CDMTransactionReferencesTypeElm.ProprietaryReferenceID, TransactionReferences3Elm.Prtry);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMTypeInterestType_To_InterestType1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMTypeInterestType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record.TypeCode</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>CDM_BankToCustomerStatementV2.Data.Statement.Entry.Interest.Record.TypeCode</description>
					</parameterfield>
					<parameterfield>
						<name>InterestType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
						<description>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.Intrst.Rcrd.Tp</description>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMTypeInterestTypeElm in CDMTypeInterestType) {
    def InterestType1ChoiceElm = InterestType1Choice.secAddElement();
    InterestType1ChoiceElm.Cd = CDMCodeSchemeToISOCode (CDMTypeInterestTypeElm);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMCardTransactionChoiceType_To_CardTransaction1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMCardTransactionChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.CardTransaction.Transaction</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>CardTransaction1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.CardTx.Tx</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMCardTransactionChoiceTypeElm in CDMCardTransactionChoiceType) {
    def CardTransaction1ChoiceElm = CardTransaction1Choice.secAddElement();
	CDMCardAggregatedType_To_CardAggregated1(CDMCardTransactionChoiceTypeElm.Aggregated, CardTransaction1ChoiceElm.Aggtd);
	CDMCardIndividualTransactionType_To_CardIndividualTransaction1(CDMCardTransactionChoiceTypeElm.Individual, CardTransaction1ChoiceElm.Indv);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMRateTypeChoiceType_To_RateType4Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMRateTypeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Interest.Rate.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>RateType4Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Intrst.Rate.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMRateTypeChoiceTypeElm in CDMRateTypeChoiceType) {
    def RateType4ChoiceElm = RateType4Choice.SecAddElement();
    RateType4ChoiceElm.Pctg = CDMRateTypeChoiceTypeElm.Percentage;
    RateType4ChoiceElm.Othr = CDMRateTypeChoiceTypeElm.Other;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMYieldedOrValueTypeChoiceType_To_YieldedOrValueType1Choice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMYieldedOrValueTypeChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Type</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>YieldedOrValueType1Choice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Tp</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMYieldedOrValueTypeChoiceTypeElm in CDMYieldedOrValueTypeChoiceType) {
    def YieldedOrValueType1ChoiceElm = YieldedOrValueType1Choice.secAddElement();
    YieldedOrValueType1ChoiceElm.Yldd = CDMYieldedOrValueTypeChoiceTypeElm.Yielded;
    YieldedOrValueType1ChoiceElm.ValTp = CDMCodeListToISOCode(CDMYieldedOrValueTypeChoiceTypeElm.ValueTypeCode);   
}
 ]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMPriceRateOrAmountChoiceType_To_PriceRateOrAmountChoice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMPriceRateOrAmountChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedPrice.DealPrice.Value</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>PriceRateOrAmountChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdPric.DealPric.Val</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMPriceRateOrAmountChoiceTypeElm in CDMPriceRateOrAmountChoiceType) {
    def PriceRateOrAmountChoiceElm = PriceRateOrAmountChoice.secAddElement();
    PriceRateOrAmountChoiceElm.Rate = CDMPriceRateOrAmountChoiceTypeElm.Rate;
    CDMAmountType_To_ActiveOrHistoricCurrencyAnd13DecimalAmount(CDMPriceRateOrAmountChoiceTypeElm.Amount, PriceRateOrAmountChoiceElm.Amt);
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<FormulaFunctionDef name="CDMFinancialInstrumentQuantityChoiceType_To_FinancialInstrumentQuantityChoice" type="FormulaFunctionDef">
				<description></description>
				<Category>CDMToISO</Category>
				<parameterfields>
					<parameterfield>
						<name>CDMFinancialInstrumentQuantityChoiceType</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<message>CDM_BankToCustomerStatementV2.Data.Statement.Entry.EntryDetails.TransactionDetails.RelatedQuantities.Quantity</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
					<parameterfield>
						<name>FinancialInstrumentQuantityChoice</name>
						<type>Section</type>
						<allow-any>true</allow-any>
						<output>true</output>
						<message>ISO_BankToCustomerStatementV03.Data.BkToCstmrStmt.Stmt.Ntry.NtryDtls.TxDtls.RltdQties.Qty</message>
						<minoccurs>0</minoccurs>
						<maxoccurs>-1</maxoccurs>
					</parameterfield>
				</parameterfields>
				<ReturnType>Void</ReturnType>
				<Code><![CDATA[foreach(def CDMFinancialInstrumentQuantityChoiceTypeElm in CDMFinancialInstrumentQuantityChoiceType) {
    def FinancialInstrumentQuantityChoiceElm = FinancialInstrumentQuantityChoice.secAddElement();
    FinancialInstrumentQuantityChoiceElm.Unit = CDMFinancialInstrumentQuantityChoiceTypeElm.Unit;
    FinancialInstrumentQuantityChoiceElm.FaceAmt = CDMFinancialInstrumentQuantityChoiceTypeElm.FaceAmount;
    FinancialInstrumentQuantityChoiceElm.AmtsdVal = CDMFinancialInstrumentQuantityChoiceTypeElm.AmortisedValue;
}
]]></Code>
				<function-type>Formula</function-type>
			</FormulaFunctionDef>
			<elementproperties>
				<propertymap>
				</propertymap>
			</elementproperties>
		</folder>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</folder>
	<elementproperties>
		<propertymap>
			<property name="CARTRIDGE_INFO">
				<value>
					<propertymap type="com.tplus.transform.design.CartridgeInfo">
					</propertymap>
				</value>
			</property>
			<property name="DOCUMENT_PROPERTIES">
				<value>
					<propertymap>
						<property name="Author" value="krishnan"/>
						<property name="Client Id" value="Sowmiya@volantetech.net"/>
						<property name="Creation Time" value="Wed Jul 17 17:39:46 IST 2013"/>
						<property name="Designer Build" value="2242"/>
						<property name="Last Author" value="administrator"/>
						<property name="Last Save Time" value="Fri Oct 25 13:29:24 IST 2019"/>
						<property name="Revision Number" value="280"/>
						<property name="Title" value="ISO 20022camt_053_001_03-CDMcamt.053.001.03"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.bindings">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.DefaultLanguageMapping">
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.general">
				<value>
					<propertymap>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.options">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.java.JavaCodeGeneratorOptions">
						<property name="WebSphere.VARIANT.Liberty Profile" value="false"/>
						<property name="WebSphere.VARIANT.WebSphere Full Profile" value="false"/>
						<property name="isEJB" value="true"/>
						<property name="isGenerateALSB" value="false"/>
						<property name="isGenerateEAR" value="false"/>
						<property name="isGenerateJNDILinks" value="true"/>
						<property name="isJBoss" value="true"/>
						<property name="isLocal" value="true"/>
						<property name="isOSGI" value="true"/>
						<property name="isRemote" value="true"/>
						<property name="isVolante" value="true"/>
						<property name="isWAR" value="false"/>
						<property name="isWLEVS" value="false"/>
						<property name="isWebLogic" value="true"/>
						<property name="isWebSphere" value="true"/>
						<property name="isWildFly" value="false"/>
						<property name="osgi-options">
							<value>
								<propertymap>
									<property name="exclude-locked-cartridge-jars" value="false"/>
									<property name="exclude-thirdparty-dependency" value="false"/>
									<property name="exclude-volante-dependencies" value="false"/>
									<property name="include-dependencies" value="false"/>
									<property name="include-test-dependencies" value="false"/>
								</propertymap>
							</value>
						</property>
						<property name="resource-references">
							<value>
								<propertylist>
								</propertylist>
							</value>
						</property>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.properties">
				<value>
					<propertymap type="com.tplus.transform.design.PropertiesDef">
						<property name="Java Package Name" value="com.transform.cartridge.%c"/>
						<property name="Max Class Length" value="150"/>
					</propertymap>
				</value>
			</property>
		</propertymap>
	</elementproperties>
</cartridge>

